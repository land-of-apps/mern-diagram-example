{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/api/user/me",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:3000",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:128.0) Gecko/20100101 Firefox/128.0",
          "Accept": "application/json, text/plain, */*",
          "Accept-Language": "en-US,en;q=0.5",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2OTY5OGQyNDI0YzZkMDAxNGNjNTU5ZCIsImlhdCI6MTcyMTE0NTkyMywiZXhwIjoxNzIxNzUwNzIzfQ.c8IQENZg8yjlkC7oNDHTLJZxYeDGJjUi367eNqe8dT4",
          "Origin": "http://0.0.0.0:8080",
          "Dnt": "1",
          "Sec-Gpc": "1",
          "Connection": "keep-alive",
          "Referer": "http://0.0.0.0:8080/",
          "Sec-Fetch-Dest": "empty",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Site": "cross-site",
          "If-None-Match": "W/\"d2-l3RnRwSIyHK39+6WVPsUH5PIUVg\"",
          "Priority": "u=0"
        },
        "protocol": "HTTP/1.1",
        "normalized_path_info": "/me"
      },
      "id": 1,
      "thread_id": 0
    },
    {
      "event": "call",
      "id": 2,
      "thread_id": 0,
      "method_id": "_checkContext",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "ctx"
        },
        {
          "class": "String",
          "value": "'findById'",
          "name": "fnName"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 1158
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 3,
      "parent_id": 2,
      "elapsed": 0.0000027919886633753777
    },
    {
      "event": "call",
      "id": 4,
      "thread_id": 0,
      "method_id": "_checkContext",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "ctx"
        },
        {
          "class": "String",
          "value": "'findOne'",
          "name": "fnName"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 1158
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 5,
      "parent_id": 4,
      "elapsed": 0.0000010410149116069078
    },
    {
      "event": "call",
      "id": 6,
      "thread_id": 0,
      "method_id": "Query",
      "static": false,
      "receiver": {
        "class": "Query",
        "value": "Query {}",
        "object_id": 1981
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1982,
          "name": "conditions"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1983,
          "name": "options"
        },
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "model"
        },
        {
          "class": "NativeCollection",
          "value": "NativeCollection {\n  collection: Collection { s: [Object] },\n  Promise: [Function: Promise],\n  _closed: false,\n  opts: {\n    bufferCommands: true,\n    capped: false,\n    autoCreate: undefined,\n    Promise: [Function: Promise],\n    '$wasForceClosed': undefined\n  },\n  name: 'users',\n  collectionName: 'users',\n  conn: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  queue: [],\n  buffer: false,\n  emitter: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  }\n}",
          "object_id": 88,
          "name": "collection"
        }
      ],
      "defined_class": "query",
      "path": "server/node_modules/mongoose/lib/query.js",
      "lineno": 59
    },
    {
      "event": "call",
      "id": 7,
      "thread_id": 0,
      "method_id": "prepareDiscriminatorCriteria",
      "static": true,
      "parameters": [
        {
          "class": "Query",
          "value": "Query {\n  _mongooseOptions: {},\n  _transforms: [],\n  _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n  _executionCount: 0,\n  mongooseCollection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'User',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  op: 'find',\n  options: {},\n  _conditions: {},\n  _fields: undefined,\n  _update: undefined,\n  _path: undefined,\n  _distinct: undefined,\n  _collection: NodeCollection {\n    collection: [NativeCollection],\n    collectionName: 'users'\n  },\n  _traceFunction: undefined\n}",
          "object_id": 1981,
          "name": "query"
        }
      ],
      "defined_class": "query",
      "path": "server/node_modules/mongoose/lib/query.js",
      "lineno": 2883
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 8,
      "parent_id": 7,
      "elapsed": 0.00000104197533801198
    },
    {
      "event": "call",
      "id": 9,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Query",
          "value": "Query {\n  _mongooseOptions: {},\n  _transforms: [],\n  _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n  _executionCount: 0,\n  mongooseCollection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'User',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  op: 'find',\n  options: {},\n  _conditions: {},\n  _fields: undefined,\n  _update: undefined,\n  _path: undefined,\n  _distinct: undefined,\n  _collection: NodeCollection {\n    collection: [NativeCollection],\n    collectionName: 'users'\n  },\n  _traceFunction: undefined,\n  '$useProjection': true\n}",
          "object_id": 1981,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'schema'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 10,
      "parent_id": 9,
      "return_value": {
        "class": "Schema",
        "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
        "object_id": 4
      },
      "elapsed": 7.910130079835653e-7
    },
    {
      "event": "call",
      "id": 11,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 12,
      "parent_id": 11,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "typePojoToMixed",
            "class": "Boolean"
          },
          {
            "name": "typeKey",
            "class": "String"
          },
          {
            "name": "id",
            "class": "Boolean"
          },
          {
            "name": "noVirtualId",
            "class": "Boolean"
          },
          {
            "name": "_id",
            "class": "Boolean"
          },
          {
            "name": "noId",
            "class": "Boolean"
          },
          {
            "name": "validateBeforeSave",
            "class": "Boolean"
          },
          {
            "name": "read",
            "class": "object"
          },
          {
            "name": "shardKey",
            "class": "object"
          },
          {
            "name": "autoIndex",
            "class": "object"
          },
          {
            "name": "minimize",
            "class": "Boolean"
          },
          {
            "name": "discriminatorKey",
            "class": "String"
          },
          {
            "name": "versionKey",
            "class": "String"
          },
          {
            "name": "capped",
            "class": "Boolean"
          },
          {
            "name": "bufferCommands",
            "class": "Boolean"
          },
          {
            "name": "strict",
            "class": "Boolean"
          },
          {
            "name": "pluralization",
            "class": "Boolean"
          }
        ],
        "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
        "object_id": 84
      },
      "elapsed": 4.5797787606716156e-7
    },
    {
      "event": "call",
      "id": 13,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "typePojoToMixed",
              "class": "Boolean"
            },
            {
              "name": "typeKey",
              "class": "String"
            },
            {
              "name": "id",
              "class": "Boolean"
            },
            {
              "name": "noVirtualId",
              "class": "Boolean"
            },
            {
              "name": "_id",
              "class": "Boolean"
            },
            {
              "name": "noId",
              "class": "Boolean"
            },
            {
              "name": "validateBeforeSave",
              "class": "Boolean"
            },
            {
              "name": "read",
              "class": "object"
            },
            {
              "name": "shardKey",
              "class": "object"
            },
            {
              "name": "autoIndex",
              "class": "object"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "discriminatorKey",
              "class": "String"
            },
            {
              "name": "versionKey",
              "class": "String"
            },
            {
              "name": "capped",
              "class": "Boolean"
            },
            {
              "name": "bufferCommands",
              "class": "Boolean"
            },
            {
              "name": "strict",
              "class": "Boolean"
            },
            {
              "name": "pluralization",
              "class": "Boolean"
            }
          ],
          "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
          "object_id": 84,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'collation'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 14,
      "parent_id": 13,
      "elapsed": 0.0000010420044418424368
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 15,
      "parent_id": 6,
      "elapsed": 0.0007695409876760095
    },
    {
      "event": "call",
      "id": 16,
      "thread_id": 0,
      "method_id": "prepareDiscriminatorCriteria",
      "static": true,
      "parameters": [
        {
          "class": "Query",
          "value": "Query {\n  _mongooseOptions: {},\n  _transforms: [],\n  _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n  _executionCount: 0,\n  mongooseCollection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'User',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  op: 'findOne',\n  options: {},\n  _conditions: { _id: '669698d2424c6d0014cc559d' },\n  _fields: undefined,\n  _update: undefined,\n  _path: undefined,\n  _distinct: undefined,\n  _collection: NodeCollection {\n    collection: [NativeCollection],\n    collectionName: 'users'\n  },\n  _traceFunction: undefined,\n  '$useProjection': true\n}",
          "object_id": 1981,
          "name": "query"
        }
      ],
      "defined_class": "query",
      "path": "server/node_modules/mongoose/lib/query.js",
      "lineno": 2883
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 17,
      "parent_id": 16,
      "elapsed": 0.0000033339892979711294
    },
    {
      "event": "call",
      "id": 18,
      "thread_id": 0,
      "method_id": "constructor",
      "static": true,
      "defined_class": "CastError",
      "path": "server/node_modules/mongoose/lib/error/cast.js",
      "lineno": 21
    },
    {
      "event": "call",
      "id": 19,
      "thread_id": 0,
      "method_id": "formatMessage",
      "static": true,
      "defined_class": "cast",
      "path": "server/node_modules/mongoose/lib/error/cast.js",
      "lineno": 94
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 20,
      "parent_id": 19,
      "return_value": {
        "class": "String",
        "value": "'Cast to undefined failed for value undefined at path \"undefined\"'"
      },
      "elapsed": 0.0000010420044418424368
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 21,
      "parent_id": 18,
      "elapsed": 0.00008095899829640985
    },
    {
      "event": "call",
      "id": 22,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'schema'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 23,
      "parent_id": 22,
      "return_value": {
        "class": "Schema",
        "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
        "object_id": 4
      },
      "elapsed": 6.250047590583563e-7
    },
    {
      "event": "call",
      "id": 24,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 25,
      "parent_id": 24,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "typePojoToMixed",
            "class": "Boolean"
          },
          {
            "name": "typeKey",
            "class": "String"
          },
          {
            "name": "id",
            "class": "Boolean"
          },
          {
            "name": "noVirtualId",
            "class": "Boolean"
          },
          {
            "name": "_id",
            "class": "Boolean"
          },
          {
            "name": "noId",
            "class": "Boolean"
          },
          {
            "name": "validateBeforeSave",
            "class": "Boolean"
          },
          {
            "name": "read",
            "class": "object"
          },
          {
            "name": "shardKey",
            "class": "object"
          },
          {
            "name": "autoIndex",
            "class": "object"
          },
          {
            "name": "minimize",
            "class": "Boolean"
          },
          {
            "name": "discriminatorKey",
            "class": "String"
          },
          {
            "name": "versionKey",
            "class": "String"
          },
          {
            "name": "capped",
            "class": "Boolean"
          },
          {
            "name": "bufferCommands",
            "class": "Boolean"
          },
          {
            "name": "strict",
            "class": "Boolean"
          },
          {
            "name": "pluralization",
            "class": "Boolean"
          }
        ],
        "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
        "object_id": 84
      },
      "elapsed": 0.0000019580184016376734
    },
    {
      "event": "call",
      "id": 26,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'schema'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 27,
      "parent_id": 26,
      "return_value": {
        "class": "Schema",
        "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
        "object_id": 4
      },
      "elapsed": 7.079797796905041e-7
    },
    {
      "event": "call",
      "id": 28,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 29,
      "parent_id": 28,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "typePojoToMixed",
            "class": "Boolean"
          },
          {
            "name": "typeKey",
            "class": "String"
          },
          {
            "name": "id",
            "class": "Boolean"
          },
          {
            "name": "noVirtualId",
            "class": "Boolean"
          },
          {
            "name": "_id",
            "class": "Boolean"
          },
          {
            "name": "noId",
            "class": "Boolean"
          },
          {
            "name": "validateBeforeSave",
            "class": "Boolean"
          },
          {
            "name": "read",
            "class": "object"
          },
          {
            "name": "shardKey",
            "class": "object"
          },
          {
            "name": "autoIndex",
            "class": "object"
          },
          {
            "name": "minimize",
            "class": "Boolean"
          },
          {
            "name": "discriminatorKey",
            "class": "String"
          },
          {
            "name": "versionKey",
            "class": "String"
          },
          {
            "name": "capped",
            "class": "Boolean"
          },
          {
            "name": "bufferCommands",
            "class": "Boolean"
          },
          {
            "name": "strict",
            "class": "Boolean"
          },
          {
            "name": "pluralization",
            "class": "Boolean"
          }
        ],
        "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
        "object_id": 84
      },
      "elapsed": 5.409820005297661e-7
    },
    {
      "event": "call",
      "id": 30,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "typePojoToMixed",
              "class": "Boolean"
            },
            {
              "name": "typeKey",
              "class": "String"
            },
            {
              "name": "id",
              "class": "Boolean"
            },
            {
              "name": "noVirtualId",
              "class": "Boolean"
            },
            {
              "name": "_id",
              "class": "Boolean"
            },
            {
              "name": "noId",
              "class": "Boolean"
            },
            {
              "name": "validateBeforeSave",
              "class": "Boolean"
            },
            {
              "name": "read",
              "class": "object"
            },
            {
              "name": "shardKey",
              "class": "object"
            },
            {
              "name": "autoIndex",
              "class": "object"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "discriminatorKey",
              "class": "String"
            },
            {
              "name": "versionKey",
              "class": "String"
            },
            {
              "name": "capped",
              "class": "Boolean"
            },
            {
              "name": "bufferCommands",
              "class": "Boolean"
            },
            {
              "name": "strict",
              "class": "Boolean"
            },
            {
              "name": "pluralization",
              "class": "Boolean"
            }
          ],
          "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
          "object_id": 84,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'strictQuery'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 31,
      "parent_id": 30,
      "elapsed": 0.0000014170072972774506
    },
    {
      "event": "call",
      "id": 32,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 33,
      "parent_id": 32,
      "return_value": {
        "class": "String",
        "value": "'_id'"
      },
      "elapsed": 0.000001834006980061531
    },
    {
      "event": "call",
      "id": 34,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 35,
      "parent_id": 34,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 72
      },
      "elapsed": 0.0000012090022210031748
    },
    {
      "event": "call",
      "id": 36,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Array",
          "items": {
            "class": "Function"
          },
          "value": "[ [Function: resetId] ]",
          "size": 1,
          "object_id": 1873,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 37,
      "thread_id": 0,
      "method_id": "cloneArray",
      "static": true,
      "parameters": [
        {
          "class": "Array",
          "items": {
            "class": "Function"
          },
          "value": "[ [Function: resetId] ]",
          "size": 1,
          "object_id": 1873,
          "name": "arr"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 129
    },
    {
      "event": "call",
      "id": 38,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "[Function: resetId]",
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "Boolean",
          "value": "true",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 39,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "[Function: resetId]",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 40,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "[Function: resetId]",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 41,
      "parent_id": 40,
      "elapsed": 4.580069798976183e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 42,
      "parent_id": 39,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.000028082984499633312
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 43,
      "parent_id": 38,
      "return_value": {
        "class": "Function",
        "value": "[Function: resetId]"
      },
      "elapsed": 0.00006404198938980699
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 44,
      "parent_id": 37,
      "return_value": {
        "class": "Array",
        "items": {
          "class": "Function"
        },
        "value": "[ [Function: resetId] ]",
        "size": 1,
        "object_id": 1984
      },
      "elapsed": 0.00010291702346876264
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 45,
      "parent_id": 36,
      "return_value": {
        "class": "Array",
        "items": {
          "class": "Function"
        },
        "value": "[ [Function: resetId] ]",
        "size": 1,
        "object_id": 1984
      },
      "elapsed": 0.00014958300744183362
    },
    {
      "event": "call",
      "id": 46,
      "thread_id": 0,
      "method_id": "resetId",
      "static": false,
      "receiver": {
        "class": "Query",
        "value": "Query {\n  _mongooseOptions: {},\n  _transforms: [],\n  _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n  _executionCount: 1,\n  mongooseCollection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'User',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  op: 'findOne',\n  options: {},\n  _conditions: { _id: '669698d2424c6d0014cc559d' },\n  _fields: undefined,\n  _update: undefined,\n  _path: undefined,\n  _distinct: undefined,\n  _collection: NodeCollection {\n    collection: [NativeCollection],\n    collectionName: 'users'\n  },\n  _traceFunction: undefined,\n  '$useProjection': true\n}",
        "object_id": 1981
      },
      "parameters": [
        {
          "class": "String",
          "value": "'669698d2424c6d0014cc559d'",
          "name": "v"
        },
        {
          "class": "ObjectId",
          "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 72
        }
      ],
      "defined_class": "objectid",
      "path": "server/node_modules/mongoose/lib/schema/objectid.js",
      "lineno": 299
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 47,
      "parent_id": 46,
      "return_value": {
        "class": "String",
        "value": "'669698d2424c6d0014cc559d'"
      },
      "elapsed": 0.0000014580145943909883
    },
    {
      "event": "call",
      "id": 48,
      "thread_id": 0,
      "method_id": "analyzeSchema",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 189
    },
    {
      "event": "call",
      "id": 49,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'email'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'email',\n  instance: 'String',\n  validators: [ [Object] ],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions {\n    type: [Function: String],\n    required: [Function: required]\n  },\n  _index: null,\n  isRequired: true,\n  requiredValidator: [Function (anonymous)],\n  originalRequiredValue: [Function: required],\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 9,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 50,
      "parent_id": 49,
      "elapsed": 0.0000024580222088843584
    },
    {
      "event": "call",
      "id": 51,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'phoneNumber'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'phoneNumber',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 13,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 52,
      "parent_id": 51,
      "elapsed": 0.0000012499804142862558
    },
    {
      "event": "call",
      "id": 53,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'firstName'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'firstName',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 17,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 54,
      "parent_id": 53,
      "elapsed": 0.0000012919772416353226
    },
    {
      "event": "call",
      "id": 55,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'lastName'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'lastName',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 21,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 56,
      "parent_id": 55,
      "elapsed": 0.0000010829826351255178
    },
    {
      "event": "call",
      "id": 57,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'password'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'password',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 25,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 58,
      "parent_id": 57,
      "elapsed": 0.0000011250085663050413
    },
    {
      "event": "call",
      "id": 59,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        },
        {
          "class": "ObjectId",
          "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 29,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 60,
      "parent_id": 59,
      "elapsed": 9.170034900307655e-7
    },
    {
      "event": "call",
      "id": 61,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'provider'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'provider',\n  instance: 'String',\n  validators: [ [Object] ],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions {\n    type: [Function: String],\n    required: true,\n    default: 'Email'\n  },\n  _index: null,\n  isRequired: true,\n  requiredValidator: [Function (anonymous)],\n  originalRequiredValue: true,\n  defaultValue: 'Email',\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 33,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 62,
      "parent_id": 61,
      "elapsed": 0.0000010830117389559746
    },
    {
      "event": "call",
      "id": 63,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'googleId'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'googleId',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 37,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 64,
      "parent_id": 63,
      "elapsed": 9.579816833138466e-7
    },
    {
      "event": "call",
      "id": 65,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'facebookId'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'facebookId',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 41,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 66,
      "parent_id": 65,
      "elapsed": 0.0000010409858077764511
    },
    {
      "event": "call",
      "id": 67,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'avatar'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'avatar',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 45,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 68,
      "parent_id": 67,
      "elapsed": 9.579816833138466e-7
    },
    {
      "event": "call",
      "id": 69,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'role'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [ 'ROLE ADMIN', 'ROLE MEMBER', 'ROLE MERCHANT' ],\n  regExp: null,\n  path: 'role',\n  instance: 'String',\n  validators: [ [Object] ],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions {\n    type: [Function: String],\n    default: 'ROLE MEMBER',\n    enum: [Array]\n  },\n  _index: null,\n  defaultValue: 'ROLE MEMBER',\n  enumValidator: [Function (anonymous)],\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 51,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 70,
      "parent_id": 69,
      "elapsed": 8.750066626816988e-7
    },
    {
      "event": "call",
      "id": 71,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'resetPasswordToken'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'resetPasswordToken',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 56,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 72,
      "parent_id": 71,
      "elapsed": 0.0000010829826351255178
    },
    {
      "event": "call",
      "id": 73,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'resetPasswordExpires'",
          "name": "path"
        },
        {
          "class": "SchemaDate",
          "value": "SchemaDate {\n  path: 'resetPasswordExpires',\n  instance: 'Date',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaDateOptions { type: [Function: Date] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 60,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 74,
      "parent_id": 73,
      "elapsed": 0.0000010420044418424368
    },
    {
      "event": "call",
      "id": 75,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'updated'",
          "name": "path"
        },
        {
          "class": "SchemaDate",
          "value": "SchemaDate {\n  path: 'updated',\n  instance: 'Date',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaDateOptions { type: [Function: Date] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 62,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 76,
      "parent_id": 75,
      "elapsed": 9.170034900307655e-7
    },
    {
      "event": "call",
      "id": 77,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'created'",
          "name": "path"
        },
        {
          "class": "SchemaDate",
          "value": "SchemaDate {\n  path: 'created',\n  instance: 'Date',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaDateOptions {\n    type: [Function: Date],\n    default: [Function: now]\n  },\n  _index: null,\n  defaultValue: [Function: now],\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 67,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 78,
      "parent_id": 77,
      "elapsed": 9.590003173798323e-7
    },
    {
      "event": "call",
      "id": 79,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "ObjectId",
          "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 72,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 80,
      "parent_id": 79,
      "elapsed": 0.000001500011421740055
    },
    {
      "event": "call",
      "id": 81,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'__v'",
          "name": "path"
        },
        {
          "class": "SchemaNumber",
          "value": "SchemaNumber {\n  path: '__v',\n  instance: 'Number',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaNumberOptions { type: [Function: Number] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 76,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 82,
      "parent_id": 81,
      "elapsed": 0.0000012920063454657793
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 83,
      "parent_id": 48,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 1985
      },
      "elapsed": 0.0007120000082068145
    },
    {
      "event": "call",
      "id": 84,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1986,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 85,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1986,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 86,
      "parent_id": 85,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 1987
      },
      "elapsed": 7.499766070395708e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 87,
      "parent_id": 84,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 1987
      },
      "elapsed": 0.00004049998824484646
    },
    {
      "event": "call",
      "id": 88,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'schema'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 89,
      "parent_id": 88,
      "return_value": {
        "class": "Schema",
        "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
        "object_id": 4
      },
      "elapsed": 4.5899651013314724e-7
    },
    {
      "event": "call",
      "id": 90,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 91,
      "parent_id": 90,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "typePojoToMixed",
            "class": "Boolean"
          },
          {
            "name": "typeKey",
            "class": "String"
          },
          {
            "name": "id",
            "class": "Boolean"
          },
          {
            "name": "noVirtualId",
            "class": "Boolean"
          },
          {
            "name": "_id",
            "class": "Boolean"
          },
          {
            "name": "noId",
            "class": "Boolean"
          },
          {
            "name": "validateBeforeSave",
            "class": "Boolean"
          },
          {
            "name": "read",
            "class": "object"
          },
          {
            "name": "shardKey",
            "class": "object"
          },
          {
            "name": "autoIndex",
            "class": "object"
          },
          {
            "name": "minimize",
            "class": "Boolean"
          },
          {
            "name": "discriminatorKey",
            "class": "String"
          },
          {
            "name": "versionKey",
            "class": "String"
          },
          {
            "name": "capped",
            "class": "Boolean"
          },
          {
            "name": "bufferCommands",
            "class": "Boolean"
          },
          {
            "name": "strict",
            "class": "Boolean"
          },
          {
            "name": "pluralization",
            "class": "Boolean"
          }
        ],
        "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
        "object_id": 84
      },
      "elapsed": 0.0000012920063454657793
    },
    {
      "event": "call",
      "id": 92,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "typePojoToMixed",
              "class": "Boolean"
            },
            {
              "name": "typeKey",
              "class": "String"
            },
            {
              "name": "id",
              "class": "Boolean"
            },
            {
              "name": "noVirtualId",
              "class": "Boolean"
            },
            {
              "name": "_id",
              "class": "Boolean"
            },
            {
              "name": "noId",
              "class": "Boolean"
            },
            {
              "name": "validateBeforeSave",
              "class": "Boolean"
            },
            {
              "name": "read",
              "class": "object"
            },
            {
              "name": "shardKey",
              "class": "object"
            },
            {
              "name": "autoIndex",
              "class": "object"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "discriminatorKey",
              "class": "String"
            },
            {
              "name": "versionKey",
              "class": "String"
            },
            {
              "name": "capped",
              "class": "Boolean"
            },
            {
              "name": "bufferCommands",
              "class": "Boolean"
            },
            {
              "name": "strict",
              "class": "Boolean"
            },
            {
              "name": "pluralization",
              "class": "Boolean"
            }
          ],
          "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
          "object_id": 84,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'safe'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 93,
      "parent_id": 92,
      "elapsed": 0.0000024589826352894306
    },
    {
      "event": "call",
      "id": 94,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 95,
      "parent_id": 94,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "typePojoToMixed",
            "class": "Boolean"
          },
          {
            "name": "typeKey",
            "class": "String"
          },
          {
            "name": "id",
            "class": "Boolean"
          },
          {
            "name": "noVirtualId",
            "class": "Boolean"
          },
          {
            "name": "_id",
            "class": "Boolean"
          },
          {
            "name": "noId",
            "class": "Boolean"
          },
          {
            "name": "validateBeforeSave",
            "class": "Boolean"
          },
          {
            "name": "read",
            "class": "object"
          },
          {
            "name": "shardKey",
            "class": "object"
          },
          {
            "name": "autoIndex",
            "class": "object"
          },
          {
            "name": "minimize",
            "class": "Boolean"
          },
          {
            "name": "discriminatorKey",
            "class": "String"
          },
          {
            "name": "versionKey",
            "class": "String"
          },
          {
            "name": "capped",
            "class": "Boolean"
          },
          {
            "name": "bufferCommands",
            "class": "Boolean"
          },
          {
            "name": "strict",
            "class": "Boolean"
          },
          {
            "name": "pluralization",
            "class": "Boolean"
          }
        ],
        "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
        "object_id": 84
      },
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "call",
      "id": 96,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "typePojoToMixed",
              "class": "Boolean"
            },
            {
              "name": "typeKey",
              "class": "String"
            },
            {
              "name": "id",
              "class": "Boolean"
            },
            {
              "name": "noVirtualId",
              "class": "Boolean"
            },
            {
              "name": "_id",
              "class": "Boolean"
            },
            {
              "name": "noId",
              "class": "Boolean"
            },
            {
              "name": "validateBeforeSave",
              "class": "Boolean"
            },
            {
              "name": "read",
              "class": "object"
            },
            {
              "name": "shardKey",
              "class": "object"
            },
            {
              "name": "autoIndex",
              "class": "object"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "discriminatorKey",
              "class": "String"
            },
            {
              "name": "versionKey",
              "class": "String"
            },
            {
              "name": "capped",
              "class": "Boolean"
            },
            {
              "name": "bufferCommands",
              "class": "Boolean"
            },
            {
              "name": "strict",
              "class": "Boolean"
            },
            {
              "name": "pluralization",
              "class": "Boolean"
            }
          ],
          "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
          "object_id": 84,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'writeConcern'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 97,
      "parent_id": 96,
      "elapsed": 0.0000010420044418424368
    },
    {
      "event": "call",
      "id": 98,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'schema'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 99,
      "parent_id": 98,
      "return_value": {
        "class": "Schema",
        "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
        "object_id": 4
      },
      "elapsed": 0.0000029589864425361156
    },
    {
      "event": "call",
      "id": 100,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 101,
      "parent_id": 100,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "typePojoToMixed",
            "class": "Boolean"
          },
          {
            "name": "typeKey",
            "class": "String"
          },
          {
            "name": "id",
            "class": "Boolean"
          },
          {
            "name": "noVirtualId",
            "class": "Boolean"
          },
          {
            "name": "_id",
            "class": "Boolean"
          },
          {
            "name": "noId",
            "class": "Boolean"
          },
          {
            "name": "validateBeforeSave",
            "class": "Boolean"
          },
          {
            "name": "read",
            "class": "object"
          },
          {
            "name": "shardKey",
            "class": "object"
          },
          {
            "name": "autoIndex",
            "class": "object"
          },
          {
            "name": "minimize",
            "class": "Boolean"
          },
          {
            "name": "discriminatorKey",
            "class": "String"
          },
          {
            "name": "versionKey",
            "class": "String"
          },
          {
            "name": "capped",
            "class": "Boolean"
          },
          {
            "name": "bufferCommands",
            "class": "Boolean"
          },
          {
            "name": "strict",
            "class": "Boolean"
          },
          {
            "name": "pluralization",
            "class": "Boolean"
          }
        ],
        "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
        "object_id": 84
      },
      "elapsed": 7.500057108700275e-7
    },
    {
      "event": "call",
      "id": 102,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "typePojoToMixed",
              "class": "Boolean"
            },
            {
              "name": "typeKey",
              "class": "String"
            },
            {
              "name": "id",
              "class": "Boolean"
            },
            {
              "name": "noVirtualId",
              "class": "Boolean"
            },
            {
              "name": "_id",
              "class": "Boolean"
            },
            {
              "name": "noId",
              "class": "Boolean"
            },
            {
              "name": "validateBeforeSave",
              "class": "Boolean"
            },
            {
              "name": "read",
              "class": "object"
            },
            {
              "name": "shardKey",
              "class": "object"
            },
            {
              "name": "autoIndex",
              "class": "object"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "discriminatorKey",
              "class": "String"
            },
            {
              "name": "versionKey",
              "class": "String"
            },
            {
              "name": "capped",
              "class": "Boolean"
            },
            {
              "name": "bufferCommands",
              "class": "Boolean"
            },
            {
              "name": "strict",
              "class": "Boolean"
            },
            {
              "name": "pluralization",
              "class": "Boolean"
            }
          ],
          "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
          "object_id": 84,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'read'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 103,
      "parent_id": 102,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 4.580069798976183e-7
    },
    {
      "event": "call",
      "id": 104,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1988,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 105,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1988,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 106,
      "parent_id": 105,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 1989
      },
      "elapsed": 6.67001586407423e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 107,
      "parent_id": 104,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 1989
      },
      "elapsed": 0.00004270800855010748
    },
    {
      "event": "call",
      "id": 108,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "NativeCollection",
          "value": "NativeCollection {\n  collection: Collection { s: [Object] },\n  Promise: [Function: Promise],\n  _closed: false,\n  opts: {\n    bufferCommands: true,\n    capped: false,\n    autoCreate: undefined,\n    Promise: [Function: Promise],\n    '$wasForceClosed': undefined\n  },\n  name: 'users',\n  collectionName: 'users',\n  conn: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  queue: [],\n  buffer: false,\n  emitter: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  }\n}",
          "object_id": 88,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'conn'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 109,
      "parent_id": 108,
      "return_value": {
        "class": "NativeConnection",
        "value": "<ref *1> NativeConnection {\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  collections: {\n    users: [NativeCollection],\n    addresses: [NativeCollection],\n    products: [NativeCollection],\n    brands: [NativeCollection],\n    categories: [NativeCollection],\n    merchants: [NativeCollection],\n    contacts: [NativeCollection],\n    cartitems: [NativeCollection],\n    carts: [NativeCollection],\n    orders: [NativeCollection],\n    reviews: [NativeCollection],\n    wishlists: [NativeCollection]\n  },\n  models: {\n    User: [Function],\n    Address: [Function],\n    Product: [Function],\n    Brand: [Function],\n    Category: [Function],\n    Merchant: [Function],\n    Contact: [Function],\n    CartItem: [Function],\n    Cart: [Function],\n    Order: [Function],\n    Review: [Function],\n    Wishlist: [Function]\n  },\n  config: { autoIndex: true, useFindAndModify: false },\n  replica: false,\n  options: null,\n  otherDbs: [],\n  relatedDbs: {},\n  states: [Object: null prototype] {\n    '0': 'disconnected',\n    '1': 'connected',\n    '2': 'connecting',\n    '3': 'disconnecting',\n    '99': 'uninitialized',\n    disconnected: 0,\n    connected: 1,\n    connecting: 2,\n    disconnecting: 3,\n    uninitialized: 99\n  },\n  _readyState: 1,\n  _closeCalled: false,\n  _hasOpened: true,\n  plugins: [],\n  id: 0,\n  _listening: false,\n  _connectionOptions: {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    promiseLibrary: [Function: Promise],\n    driverInfo: [Object]\n  },\n  name: 'mern_ecommerce',\n  host: '127.0.0.1',\n  port: 27017,\n  user: undefined,\n  pass: undefined,\n  client: MongoClient {\n    _events: [Object: null prototype],\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    s: [Object],\n    topology: [NativeTopology],\n    [Symbol(kCapture)]: false\n  },\n  '$initialConnection': Promise { [Circular *1] },\n  db: Db {\n    _events: [Object: null prototype],\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    s: [Object],\n    serverConfig: [Getter],\n    bufferMaxEntries: [Getter],\n    databaseName: [Getter],\n    [Symbol(kCapture)]: false\n  }\n}",
        "object_id": 3
      },
      "elapsed": 5.420006345957518e-7
    },
    {
      "event": "call",
      "id": 110,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "NativeConnection",
          "value": "<ref *1> NativeConnection {\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  collections: {\n    users: [NativeCollection],\n    addresses: [NativeCollection],\n    products: [NativeCollection],\n    brands: [NativeCollection],\n    categories: [NativeCollection],\n    merchants: [NativeCollection],\n    contacts: [NativeCollection],\n    cartitems: [NativeCollection],\n    carts: [NativeCollection],\n    orders: [NativeCollection],\n    reviews: [NativeCollection],\n    wishlists: [NativeCollection]\n  },\n  models: {\n    User: [Function],\n    Address: [Function],\n    Product: [Function],\n    Brand: [Function],\n    Category: [Function],\n    Merchant: [Function],\n    Contact: [Function],\n    CartItem: [Function],\n    Cart: [Function],\n    Order: [Function],\n    Review: [Function],\n    Wishlist: [Function]\n  },\n  config: { autoIndex: true, useFindAndModify: false },\n  replica: false,\n  options: null,\n  otherDbs: [],\n  relatedDbs: {},\n  states: [Object: null prototype] {\n    '0': 'disconnected',\n    '1': 'connected',\n    '2': 'connecting',\n    '3': 'disconnecting',\n    '99': 'uninitialized',\n    disconnected: 0,\n    connected: 1,\n    connecting: 2,\n    disconnecting: 3,\n    uninitialized: 99\n  },\n  _readyState: 1,\n  _closeCalled: false,\n  _hasOpened: true,\n  plugins: [],\n  id: 0,\n  _listening: false,\n  _connectionOptions: {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    promiseLibrary: [Function: Promise],\n    driverInfo: [Object]\n  },\n  name: 'mern_ecommerce',\n  host: '127.0.0.1',\n  port: 27017,\n  user: undefined,\n  pass: undefined,\n  client: MongoClient {\n    _events: [Object: null prototype],\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    s: [Object],\n    topology: [NativeTopology],\n    [Symbol(kCapture)]: false\n  },\n  '$initialConnection': Promise { [Circular *1] },\n  db: Db {\n    _events: [Object: null prototype],\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    s: [Object],\n    serverConfig: [Getter],\n    bufferMaxEntries: [Getter],\n    databaseName: [Getter],\n    [Symbol(kCapture)]: false\n  }\n}",
          "object_id": 3,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'base'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 111,
      "parent_id": 110,
      "return_value": {
        "class": "Mongoose",
        "value": "Mongoose {\n  connections: [ [NativeConnection] ],\n  models: {\n    User: [Function],\n    Address: [Function],\n    Product: [Function],\n    Brand: [Function],\n    Category: [Function],\n    Merchant: [Function],\n    Contact: [Function],\n    CartItem: [Function],\n    Cart: [Function],\n    Order: [Function],\n    Review: [Function],\n    Wishlist: [Function]\n  },\n  modelSchemas: {\n    User: [Schema],\n    Address: [Schema],\n    Product: [Schema],\n    Brand: [Schema],\n    Category: [Schema],\n    Merchant: [Schema],\n    Contact: [Schema],\n    CartItem: [Schema],\n    Cart: [Schema],\n    Order: [Schema],\n    Review: [Schema],\n    Wishlist: [Schema]\n  },\n  options: {\n    pluralization: true,\n    useCreateIndex: true,\n    [Symbol(mongoose:default)]: true\n  },\n  _pluralize: [Function: pluralize],\n  Schema: [Function: Schema] {\n    reserved: [Object: null prototype],\n    Types: [Object],\n    ObjectId: [Function]\n  },\n  model: [Function (anonymous)],\n  plugins: [\n    [Array], [Array],\n    [Array], [Array],\n    [Array], [Array],\n    [Array]\n  ]\n}",
        "object_id": 1
      },
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "call",
      "id": 112,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Mongoose",
          "value": "Mongoose {\n  connections: [ [NativeConnection] ],\n  models: {\n    User: [Function],\n    Address: [Function],\n    Product: [Function],\n    Brand: [Function],\n    Category: [Function],\n    Merchant: [Function],\n    Contact: [Function],\n    CartItem: [Function],\n    Cart: [Function],\n    Order: [Function],\n    Review: [Function],\n    Wishlist: [Function]\n  },\n  modelSchemas: {\n    User: [Schema],\n    Address: [Schema],\n    Product: [Schema],\n    Brand: [Schema],\n    Category: [Schema],\n    Merchant: [Schema],\n    Contact: [Schema],\n    CartItem: [Schema],\n    Cart: [Schema],\n    Order: [Schema],\n    Review: [Schema],\n    Wishlist: [Schema]\n  },\n  options: {\n    pluralization: true,\n    useCreateIndex: true,\n    [Symbol(mongoose:default)]: true\n  },\n  _pluralize: [Function: pluralize],\n  Schema: [Function: Schema] {\n    reserved: [Object: null prototype],\n    Types: [Object],\n    ObjectId: [Function]\n  },\n  model: [Function (anonymous)],\n  plugins: [\n    [Array], [Array],\n    [Array], [Array],\n    [Array], [Array],\n    [Array]\n  ]\n}",
          "object_id": 1,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 113,
      "parent_id": 112,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "pluralization",
            "class": "Boolean"
          },
          {
            "name": "useCreateIndex",
            "class": "Boolean"
          }
        ],
        "value": "{\n  pluralization: true,\n  useCreateIndex: true,\n  [Symbol(mongoose:default)]: true\n}",
        "object_id": 75
      },
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "call",
      "id": 114,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "pluralization",
              "class": "Boolean"
            },
            {
              "name": "useCreateIndex",
              "class": "Boolean"
            }
          ],
          "value": "{\n  pluralization: true,\n  useCreateIndex: true,\n  [Symbol(mongoose:default)]: true\n}",
          "object_id": 75,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'debug'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 115,
      "parent_id": 114,
      "elapsed": 9.170034900307655e-7
    },
    {
      "event": "call",
      "id": 116,
      "thread_id": 0,
      "method_id": "findOne",
      "static": false,
      "receiver": {
        "class": "Collection",
        "value": "[Collection users]",
        "object_id": 969
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            }
          ],
          "value": "{ _id: 669698d2424c6d0014cc559d }",
          "object_id": 1990,
          "name": "filter"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "projection",
              "class": "Object",
              "properties": []
            }
          ],
          "value": "{ projection: {} }",
          "object_id": 1987,
          "name": "options"
        }
      ],
      "defined_class": "users",
      "lineno": 6,
      "path": "mongodb/users"
    },
    {
      "event": "call",
      "id": 117,
      "thread_id": 0,
      "method_id": "find",
      "static": false,
      "receiver": {
        "class": "Collection",
        "value": "[Collection users]",
        "object_id": 969
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            }
          ],
          "value": "{ _id: 669698d2424c6d0014cc559d }",
          "object_id": 1990,
          "name": "filter"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "projection",
              "class": "Object",
              "properties": []
            },
            {
              "name": "session",
              "class": "ClientSession"
            }
          ],
          "value": "{\n  projection: {},\n  session: ClientSession {\n    _events: [Object: null prototype],\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    topology: [NativeTopology],\n    sessionPool: [ServerSessionPool],\n    hasEnded: false,\n    clientOptions: {},\n    supports: [Object],\n    clusterTime: undefined,\n    operationTime: null,\n    explicit: false,\n    owner: Symbol(),\n    defaultTransactionOptions: {},\n    transaction: [Transaction],\n    [Symbol(kCapture)]: false,\n    [Symbol(serverSession)]: undefined\n  }\n}",
          "object_id": 1991,
          "name": "options"
        }
      ],
      "defined_class": "users",
      "lineno": 7,
      "path": "mongodb/users"
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 118,
      "parent_id": 117,
      "return_value": {
        "class": "Cursor",
        "value": "Cursor {\n  _readableState: ReadableState {\n    state: 6193,\n    highWaterMark: 16,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: null,\n    errored: null,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: null\n  },\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  operation: FindOperation {\n    options: {\n      projection: {},\n      session: [ClientSession],\n      skip: 0,\n      limit: 0,\n      raw: undefined,\n      hint: null,\n      timeout: undefined,\n      slaveOk: true,\n      readPreference: [ReadPreference],\n      db: [Db],\n      promiseLibrary: [Function: Promise]\n    },\n    ns: MongoDBNamespace { db: 'mern_ecommerce', collection: 'users' },\n    cmd: {\n      find: 'mern_ecommerce.users',\n      limit: 0,\n      skip: 0,\n      query: [Object],\n      projection: {},\n      raw: undefined,\n      hint: null,\n      timeout: undefined,\n      slaveOk: true,\n      readPreference: [ReadPreference],\n      fields: {}\n    },\n    readPreference: ReadPreference { mode: 'primary', tags: undefined },\n    cursorState: {\n      cursorId: null,\n      cmd: [Object],\n      documents: [],\n      cursorIndex: 0,\n      dead: false,\n      killed: false,\n      init: false,\n      notified: false,\n      limit: 0,\n      skip: 0,\n      batchSize: 1000,\n      currentLimit: 0,\n      transforms: undefined,\n      raw: undefined,\n      session: [ClientSession]\n    }\n  },\n  pool: null,\n  server: null,\n  disconnectHandler: undefined,\n  bson: BSON {},\n  ns: 'mern_ecommerce.users',\n  namespace: MongoDBNamespace { db: 'mern_ecommerce', collection: 'users' },\n  cmd: {\n    find: 'mern_ecommerce.users',\n    limit: 0,\n    skip: 0,\n    query: { _id: 669698d2424c6d0014cc559d },\n    projection: {},\n    raw: undefined,\n    hint: null,\n    timeout: undefined,\n    slaveOk: true,\n    readPreference: ReadPreference { mode: 'primary', tags: undefined },\n    fields: {}\n  },\n  options: {\n    projection: {},\n    session: ClientSession {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      topology: [NativeTopology],\n      sessionPool: [ServerSessionPool],\n      hasEnded: false,\n      clientOptions: {},\n      supports: [Object],\n      clusterTime: undefined,\n      operationTime: null,\n      explicit: false,\n      owner: Symbol(),\n      defaultTransactionOptions: {},\n      transaction: [Transaction],\n      [Symbol(kCapture)]: false,\n      [Symbol(serverSession)]: undefined\n    },\n    skip: 0,\n    limit: 0,\n    raw: undefined,\n    hint: null,\n    timeout: undefined,\n    slaveOk: true,\n    readPreference: ReadPreference { mode: 'primary', tags: undefined },\n    db: Db {\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      s: [Object],\n      serverConfig: [Getter],\n      bufferMaxEntries: [Getter],\n      databaseName: [Getter],\n      [Symbol(kCapture)]: false\n    },\n    promiseLibrary: [Function: Promise]\n  },\n  topology: NativeTopology {\n    _events: [Object: null prototype] {\n      authenticated: [Function (anonymous)],\n      error: [Array],\n      timeout: [Array],\n      close: [Array],\n      parseError: [Array],\n      fullsetup: [Array],\n      all: [Array],\n      reconnect: [Array],\n      commandStarted: [Function (anonymous)],\n      commandSucceeded: [Function (anonymous)],\n      commandFailed: [Function (anonymous)],\n      serverOpening: [Function (anonymous)],\n      serverClosed: [Function (anonymous)],\n      serverDescriptionChanged: [Function (anonymous)],\n      serverHeartbeatStarted: [Function (anonymous)],\n      serverHeartbeatSucceeded: [Array],\n      serverHeartbeatFailed: [Function (anonymous)],\n      topologyOpening: [Function (anonymous)],\n      topologyClosed: [Function (anonymous)],\n      topologyDescriptionChanged: [Function (anonymous)],\n      joined: [Array],\n      left: [Function (anonymous)],\n      ping: [Function (anonymous)],\n      ha: [Function (anonymous)],\n      connectionPoolCreated: [Function (anonymous)],\n      connectionPoolClosed: [Function (anonymous)],\n      connectionCreated: [Function (anonymous)],\n      connectionReady: [Function (anonymous)],\n      connectionClosed: [Function (anonymous)],\n      connectionCheckOutStarted: [Function (anonymous)],\n      connectionCheckOutFailed: [Function (anonymous)],\n      connectionCheckedOut: [Function (anonymous)],\n      connectionCheckedIn: [Function (anonymous)],\n      connectionPoolCleared: [Function (anonymous)],\n      open: [Function],\n      reconnectFailed: [Function (anonymous)]\n    },\n    _eventsCount: 36,\n    _maxListeners: Infinity,\n    s: {\n      id: 0,\n      options: [Object],\n      seedlist: [Array],\n      state: 'connected',\n      description: [TopologyDescription],\n      serverSelectionTimeoutMS: 30000,\n      heartbeatFrequencyMS: 10000,\n      minHeartbeatFrequencyMS: 500,\n      Cursor: [class Cursor extends CoreCursor],\n      bson: BSON {},\n      servers: [Map],\n      sessionPool: [ServerSessionPool],\n      sessions: [Set],\n      promiseLibrary: [Function: Promise],\n      credentials: undefined,\n      clusterTime: null,\n      connectionTimers: Set(0) {},\n      sCapabilities: [ServerCapabilities]\n    },\n    [Symbol(kCapture)]: false,\n    [Symbol(waitQueue)]: Denque {\n      _head: 1,\n      _tail: 1,\n      _capacity: undefined,\n      _capacityMask: 3,\n      _list: [Array]\n    }\n  },\n  cursorState: {\n    cursorId: null,\n    cmd: {\n      find: 'mern_ecommerce.users',\n      limit: 0,\n      skip: 0,\n      query: [Object],\n      projection: {},\n      raw: undefined,\n      hint: null,\n      timeout: undefined,\n      slaveOk: true,\n      readPreference: [ReadPreference],\n      fields: {}\n    },\n    documents: [],\n    cursorIndex: 0,\n    dead: false,\n    killed: false,\n    init: false,\n    notified: false,\n    limit: 0,\n    skip: 0,\n    batchSize: 1000,\n    currentLimit: 0,\n    transforms: undefined,\n    raw: undefined,\n    session: ClientSession {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      topology: [NativeTopology],\n      sessionPool: [ServerSessionPool],\n      hasEnded: false,\n      clientOptions: {},\n      supports: [Object],\n      clusterTime: undefined,\n      operationTime: null,\n      explicit: false,\n      owner: Symbol(),\n      defaultTransactionOptions: {},\n      transaction: [Transaction],\n      [Symbol(kCapture)]: false,\n      [Symbol(serverSession)]: undefined\n    }\n  },\n  logger: Logger { className: 'Cursor' },\n  s: {\n    numberOfRetries: 5,\n    tailableRetryInterval: 500,\n    currentNumberOfRetries: 5,\n    state: 0,\n    promiseLibrary: [Function: Promise],\n    explicitlyIgnoreSession: false\n  },\n  [Symbol(kCapture)]: false\n}",
        "object_id": 1992
      },
      "elapsed": 0.00010666699381545186
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 119,
      "parent_id": 116,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "_id",
            "class": "ObjectID"
          },
          {
            "name": "merchant",
            "class": "object"
          },
          {
            "name": "provider",
            "class": "String"
          },
          {
            "name": "role",
            "class": "String"
          },
          {
            "name": "email",
            "class": "String"
          },
          {
            "name": "password",
            "class": "String"
          },
          {
            "name": "firstName",
            "class": "String"
          },
          {
            "name": "lastName",
            "class": "String"
          },
          {
            "name": "created",
            "class": "Date"
          },
          {
            "name": "__v",
            "class": "Number"
          }
        ],
        "value": "{\n  _id: 669698d2424c6d0014cc559d,\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  email: 'admin@example.com',\n  password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
        "object_id": 1993
      },
      "elapsed": 0.0033603749761823565
    },
    {
      "event": "call",
      "id": 120,
      "thread_id": 0,
      "method_id": "_wrapThunkCallback",
      "static": true,
      "parameters": [
        {
          "class": "Query",
          "value": "Query {\n  _mongooseOptions: {},\n  _transforms: [],\n  _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n  _executionCount: 1,\n  mongooseCollection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'User',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  op: 'findOne',\n  options: {},\n  _conditions: { _id: [ObjectID] },\n  _fields: {},\n  _update: undefined,\n  _path: undefined,\n  _distinct: undefined,\n  _collection: NodeCollection {\n    collection: [NativeCollection],\n    collectionName: 'users'\n  },\n  _traceFunction: undefined,\n  '$useProjection': true,\n  _error: null\n}",
          "object_id": 1981,
          "name": "query"
        },
        {
          "class": "Function",
          "value": "[Function (anonymous)]",
          "name": "cb"
        }
      ],
      "defined_class": "query",
      "path": "server/node_modules/mongoose/lib/query.js",
      "lineno": 4404
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 121,
      "parent_id": 120,
      "return_value": {
        "class": "Function",
        "value": "[Function (anonymous)]"
      },
      "elapsed": 7.909839041531086e-7
    },
    {
      "event": "call",
      "id": 122,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1988,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 123,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1988,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 124,
      "parent_id": 123,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 1994
      },
      "elapsed": 6.660120561718941e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 125,
      "parent_id": 122,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 1994
      },
      "elapsed": 0.00005154201062396169
    },
    {
      "event": "call",
      "id": 126,
      "thread_id": 0,
      "method_id": "completeOne",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "model"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            },
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            },
            {
              "name": "email",
              "class": "String"
            },
            {
              "name": "password",
              "class": "String"
            },
            {
              "name": "firstName",
              "class": "String"
            },
            {
              "name": "lastName",
              "class": "String"
            },
            {
              "name": "created",
              "class": "Date"
            },
            {
              "name": "__v",
              "class": "Number"
            }
          ],
          "value": "{\n  _id: 669698d2424c6d0014cc559d,\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  email: 'admin@example.com',\n  password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
          "object_id": 1993,
          "name": "doc"
        },
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "res"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1986,
          "name": "options"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1994,
          "name": "fields"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1995,
          "name": "userProvidedFields"
        },
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "pop"
        },
        {
          "class": "Function",
          "value": "[Function (anonymous)]",
          "name": "callback"
        }
      ],
      "defined_class": "query",
      "path": "server/node_modules/mongoose/lib/query.js",
      "lineno": 2842
    },
    {
      "event": "call",
      "id": 127,
      "thread_id": 0,
      "method_id": "Model",
      "static": false,
      "receiver": {
        "class": "model",
        "value": "model {}",
        "object_id": 1996
      },
      "parameters": [
        {
          "class": "undefined",
          "value": "undefined",
          "name": "doc"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1994,
          "name": "fields"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "skipId",
              "class": "Boolean"
            },
            {
              "name": "isNew",
              "class": "Boolean"
            },
            {
              "name": "willInit",
              "class": "Boolean"
            }
          ],
          "value": "{ skipId: true, isNew: false, willInit: true }",
          "object_id": 1997,
          "name": "skipId"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 100
    },
    {
      "event": "call",
      "id": 128,
      "thread_id": 0,
      "method_id": "Document",
      "static": false,
      "receiver": {
        "class": "model",
        "value": "model {}",
        "object_id": 1996
      },
      "parameters": [
        {
          "class": "undefined",
          "value": "undefined",
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1994,
          "name": "fields"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "skipId",
              "class": "Boolean"
            },
            {
              "name": "isNew",
              "class": "Boolean"
            },
            {
              "name": "willInit",
              "class": "Boolean"
            }
          ],
          "value": "{ skipId: true, isNew: false, willInit: true }",
          "object_id": 1997,
          "name": "skipId"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 65
    },
    {
      "event": "call",
      "id": 129,
      "thread_id": 0,
      "method_id": "InternalCache",
      "static": false,
      "receiver": {
        "class": "InternalCache",
        "value": "InternalCache {}",
        "object_id": 1998
      },
      "defined_class": "internal",
      "path": "server/node_modules/mongoose/lib/internal.js",
      "lineno": 12
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 130,
      "parent_id": 129,
      "elapsed": 0.000027125002816319466
    },
    {
      "event": "call",
      "id": 131,
      "thread_id": 0,
      "method_id": "$__applyDefaults",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: undefined,\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {}\n}",
          "object_id": 1996,
          "name": "doc"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1994,
          "name": "fields"
        },
        {
          "class": "Boolean",
          "value": "true",
          "name": "skipId"
        },
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "exclude"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1999,
          "name": "hasIncludedChildren"
        },
        {
          "class": "Boolean",
          "value": "true",
          "name": "isBeforeSetters"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "isNew",
              "class": "Boolean"
            }
          ],
          "value": "{ isNew: false }",
          "object_id": 2000,
          "name": "pathsToSkip"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 325
    },
    {
      "event": "call",
      "id": 132,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 1891,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 133,
      "thread_id": 0,
      "method_id": "cloneArray",
      "static": true,
      "parameters": [
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 1891,
          "name": "arr"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 129
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 134,
      "parent_id": 133,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2001
      },
      "elapsed": 9.579816833138466e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 135,
      "parent_id": 132,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2001
      },
      "elapsed": 0.000036541023291647434
    },
    {
      "event": "call",
      "id": 136,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 1893,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 137,
      "thread_id": 0,
      "method_id": "cloneArray",
      "static": true,
      "parameters": [
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 1893,
          "name": "arr"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 129
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 138,
      "parent_id": 137,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2002
      },
      "elapsed": 4.580069798976183e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 139,
      "parent_id": 136,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2002
      },
      "elapsed": 0.00003225001273676753
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 140,
      "parent_id": 131,
      "elapsed": 0.00029024999821558595
    },
    {
      "event": "call",
      "id": 141,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 142,
      "parent_id": 141,
      "return_value": {
        "class": "String",
        "value": "'_id'"
      },
      "elapsed": 0.000001541979145258665
    },
    {
      "event": "call",
      "id": 143,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 144,
      "parent_id": 143,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 72
      },
      "elapsed": 7.910130079835653e-7
    },
    {
      "event": "call",
      "id": 145,
      "thread_id": 0,
      "method_id": "applyQueue",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: undefined,\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: { merchant: null, provider: 'Email', role: 'ROLE MEMBER' },\n  '$locals': {},\n  '$op': null\n}",
          "object_id": 1996,
          "name": "doc"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2914
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 146,
      "parent_id": 145,
      "elapsed": 6.250047590583563e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 147,
      "parent_id": 128,
      "elapsed": 0.000711583998054266
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 148,
      "parent_id": 127,
      "elapsed": 0.0007549579895567149
    },
    {
      "event": "call",
      "id": 149,
      "thread_id": 0,
      "method_id": "init",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: undefined,\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: { merchant: null, provider: 'Email', role: 'ROLE MEMBER' },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996,
          "name": "self"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            },
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            },
            {
              "name": "email",
              "class": "String"
            },
            {
              "name": "password",
              "class": "String"
            },
            {
              "name": "firstName",
              "class": "String"
            },
            {
              "name": "lastName",
              "class": "String"
            },
            {
              "name": "created",
              "class": "Date"
            },
            {
              "name": "__v",
              "class": "Number"
            }
          ],
          "value": "{\n  _id: 669698d2424c6d0014cc559d,\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  email: 'admin@example.com',\n  password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
          "object_id": 1993,
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            }
          ],
          "value": "{ merchant: null, provider: 'Email', role: 'ROLE MEMBER' }",
          "object_id": 2003,
          "name": "doc"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2004,
          "name": "opts"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 607
    },
    {
      "event": "call",
      "id": 150,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 151,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 152,
      "parent_id": 151,
      "return_value": {
        "class": "String",
        "value": "'_id'"
      },
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "call",
      "id": 153,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 154,
      "parent_id": 153,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 72
      },
      "elapsed": 5.409820005297661e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 155,
      "parent_id": 150,
      "elapsed": 0.0001788749941624701
    },
    {
      "event": "call",
      "id": 156,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "1",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 157,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 158,
      "parent_id": 157,
      "return_value": {
        "class": "String",
        "value": "'merchant'"
      },
      "elapsed": 4.1601015254855156e-7
    },
    {
      "event": "call",
      "id": 159,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 160,
      "parent_id": 159,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 29
      },
      "elapsed": 9.170034900307655e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 161,
      "parent_id": 156,
      "elapsed": 0.000407584011554718
    },
    {
      "event": "call",
      "id": 162,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "2",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 163,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'provider'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 164,
      "parent_id": 163,
      "return_value": {
        "class": "String",
        "value": "'provider'"
      },
      "elapsed": 6.67001586407423e-7
    },
    {
      "event": "call",
      "id": 165,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'provider'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'provider'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 166,
      "parent_id": 165,
      "return_value": {
        "class": "SchemaString",
        "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'provider',\n  instance: 'String',\n  validators: [ [Object] ],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions {\n    type: [Function: String],\n    required: true,\n    default: 'Email'\n  },\n  _index: null,\n  isRequired: true,\n  requiredValidator: [Function (anonymous)],\n  originalRequiredValue: true,\n  defaultValue: 'Email',\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 33
      },
      "elapsed": 5.420006345957518e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 167,
      "parent_id": 162,
      "elapsed": 0.00017287497757934034
    },
    {
      "event": "call",
      "id": 168,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "3",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 169,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'role'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 170,
      "parent_id": 169,
      "return_value": {
        "class": "String",
        "value": "'role'"
      },
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "call",
      "id": 171,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'role'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'role'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 172,
      "parent_id": 171,
      "return_value": {
        "class": "SchemaString",
        "value": "SchemaString {\n  enumValues: [ 'ROLE ADMIN', 'ROLE MEMBER', 'ROLE MERCHANT' ],\n  regExp: null,\n  path: 'role',\n  instance: 'String',\n  validators: [ [Object] ],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions {\n    type: [Function: String],\n    default: 'ROLE MEMBER',\n    enum: [Array]\n  },\n  _index: null,\n  defaultValue: 'ROLE MEMBER',\n  enumValidator: [Function (anonymous)],\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 51
      },
      "elapsed": 4.159810487180948e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 173,
      "parent_id": 168,
      "elapsed": 0.00016187498113140464
    },
    {
      "event": "call",
      "id": 174,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "4",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 175,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'email'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 176,
      "parent_id": 175,
      "return_value": {
        "class": "String",
        "value": "'email'"
      },
      "elapsed": 7.500057108700275e-7
    },
    {
      "event": "call",
      "id": 177,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'email'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'email'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 178,
      "parent_id": 177,
      "return_value": {
        "class": "SchemaString",
        "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'email',\n  instance: 'String',\n  validators: [ [Object] ],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions {\n    type: [Function: String],\n    required: [Function: required]\n  },\n  _index: null,\n  isRequired: true,\n  requiredValidator: [Function (anonymous)],\n  originalRequiredValue: [Function: required],\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 9
      },
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 179,
      "parent_id": 174,
      "elapsed": 0.0001631659979466349
    },
    {
      "event": "call",
      "id": 180,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "5",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 181,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'password'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 182,
      "parent_id": 181,
      "return_value": {
        "class": "String",
        "value": "'password'"
      },
      "elapsed": 4.159810487180948e-7
    },
    {
      "event": "call",
      "id": 183,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'password'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'password'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 184,
      "parent_id": 183,
      "return_value": {
        "class": "SchemaString",
        "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'password',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 25
      },
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 185,
      "parent_id": 180,
      "elapsed": 0.00015183299547061324
    },
    {
      "event": "call",
      "id": 186,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "6",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 187,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'firstName'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 188,
      "parent_id": 187,
      "return_value": {
        "class": "String",
        "value": "'firstName'"
      },
      "elapsed": 3.33995558321476e-7
    },
    {
      "event": "call",
      "id": 189,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'firstName'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'firstName'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 190,
      "parent_id": 189,
      "return_value": {
        "class": "SchemaString",
        "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'firstName',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 17
      },
      "elapsed": 4.580069798976183e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 191,
      "parent_id": 186,
      "elapsed": 0.0001464999804738909
    },
    {
      "event": "call",
      "id": 192,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "7",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 193,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'lastName'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 194,
      "parent_id": 193,
      "return_value": {
        "class": "String",
        "value": "'lastName'"
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "call",
      "id": 195,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'lastName'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'lastName'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 196,
      "parent_id": 195,
      "return_value": {
        "class": "SchemaString",
        "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'lastName',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 21
      },
      "elapsed": 3.3300602808594704e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 197,
      "parent_id": 192,
      "elapsed": 0.0001448750263080001
    },
    {
      "event": "call",
      "id": 198,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "8",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 199,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'created'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 200,
      "parent_id": 199,
      "return_value": {
        "class": "String",
        "value": "'created'"
      },
      "elapsed": 3.3300602808594704e-7
    },
    {
      "event": "call",
      "id": 201,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'created'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'created'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 202,
      "parent_id": 201,
      "return_value": {
        "class": "SchemaDate",
        "value": "SchemaDate {\n  path: 'created',\n  instance: 'Date',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaDateOptions {\n    type: [Function: Date],\n    default: [Function: now]\n  },\n  _index: null,\n  defaultValue: [Function: now],\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 67
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 203,
      "parent_id": 198,
      "elapsed": 0.00014995801029726863
    },
    {
      "event": "call",
      "id": 204,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "9",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 205,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'__v'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 206,
      "parent_id": 205,
      "return_value": {
        "class": "String",
        "value": "'__v'"
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "call",
      "id": 207,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'__v'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'__v'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 208,
      "parent_id": 207,
      "return_value": {
        "class": "SchemaNumber",
        "value": "SchemaNumber {\n  path: '__v',\n  instance: 'Number',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaNumberOptions { type: [Function: Number] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 76
      },
      "elapsed": 3.329769242554903e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 209,
      "parent_id": 204,
      "elapsed": 0.00014354201266542077
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 210,
      "parent_id": 149,
      "elapsed": 0.0020122909918427467
    },
    {
      "event": "call",
      "id": 211,
      "thread_id": 0,
      "method_id": "markArraySubdocsPopulated",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: undefined,\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996,
          "name": "doc"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "populated"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 568
    },
    {
      "event": "call",
      "id": 212,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 213,
      "parent_id": 212,
      "return_value": {
        "class": "String",
        "value": "'_id'"
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "call",
      "id": 214,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 215,
      "parent_id": 214,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 72
      },
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 216,
      "parent_id": 211,
      "elapsed": 0.00015312500181607902
    },
    {
      "event": "call",
      "id": 217,
      "thread_id": 0,
      "method_id": "$__applyDefaults",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: undefined,\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996,
          "name": "doc"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1994,
          "name": "fields"
        },
        {
          "class": "Boolean",
          "value": "true",
          "name": "skipId"
        },
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "exclude"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 1999,
          "name": "hasIncludedChildren"
        },
        {
          "class": "Boolean",
          "value": "false",
          "name": "isBeforeSetters"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "pathsToSkip"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "isNew",
              "class": "Boolean"
            }
          ],
          "value": "{ isNew: false }",
          "object_id": 2005
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 325
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 218,
      "parent_id": 217,
      "elapsed": 0.000006459013093262911
    },
    {
      "event": "call",
      "id": 219,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 220,
      "parent_id": 219,
      "return_value": {
        "class": "String",
        "value": "'_id'"
      },
      "elapsed": 4.1601015254855156e-7
    },
    {
      "event": "call",
      "id": 221,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 222,
      "parent_id": 221,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 72
      },
      "elapsed": 5.420006345957518e-7
    },
    {
      "event": "call",
      "id": 223,
      "thread_id": 0,
      "method_id": "storeShard",
      "static": false,
      "receiver": {
        "class": "model",
        "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
        "object_id": 1996
      },
      "defined_class": "sharding",
      "path": "server/node_modules/mongoose/lib/plugins/sharding.js",
      "lineno": 57
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 224,
      "parent_id": 223,
      "elapsed": 0.0000012080126907676458
    },
    {
      "event": "call",
      "id": 225,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "err"
        },
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996
        }
      ],
      "defined_class": "query",
      "path": "server/node_modules/mongoose/lib/query.js",
      "lineno": 2859
    },
    {
      "event": "call",
      "id": 226,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2006,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 227,
      "parent_id": 226,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2006
      },
      "elapsed": 0.000003416993422433734
    },
    {
      "event": "call",
      "id": 228,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2006,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'provider'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 229,
      "parent_id": 228,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2006
      },
      "elapsed": 0.0000020830193534493446
    },
    {
      "event": "call",
      "id": 230,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2006,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'role'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 231,
      "parent_id": 230,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2006
      },
      "elapsed": 7.920025382190943e-7
    },
    {
      "event": "call",
      "id": 232,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2006,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 233,
      "parent_id": 232,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2006
      },
      "elapsed": 0.0000016659905668348074
    },
    {
      "event": "call",
      "id": 234,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2006,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'email'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 235,
      "parent_id": 234,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2006
      },
      "elapsed": 8.330098353326321e-7
    },
    {
      "event": "call",
      "id": 236,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2006,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'password'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 237,
      "parent_id": 236,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2006
      },
      "elapsed": 6.659829523414373e-7
    },
    {
      "event": "call",
      "id": 238,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2006,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'firstName'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 239,
      "parent_id": 238,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2006
      },
      "elapsed": 0.0000020840088836848736
    },
    {
      "event": "call",
      "id": 240,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2006,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'lastName'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 241,
      "parent_id": 240,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2006
      },
      "elapsed": 0.0000011249794624745846
    },
    {
      "event": "call",
      "id": 242,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2006,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'created'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 243,
      "parent_id": 242,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2006
      },
      "elapsed": 0.000003042019670829177
    },
    {
      "event": "call",
      "id": 244,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: {},\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    password: '$2a$10$vnKESzZ1Tu7ZrMUwnqibMOp0cORf2bsIn9bdWKjiQo7N3zNxbplKu',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 1996,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2006,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'__v'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 245,
      "parent_id": 244,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2006
      },
      "elapsed": 7.909839041531086e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 246,
      "parent_id": 225,
      "elapsed": 0.0009479169966652989
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 247,
      "parent_id": 126,
      "elapsed": 0.004433499998413026
    },
    {
      "event": "call",
      "id": 248,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 249,
      "parent_id": 248,
      "return_value": {
        "class": "String",
        "value": "'_id'"
      },
      "elapsed": 0.000001500011421740055
    },
    {
      "event": "call",
      "id": 250,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 251,
      "parent_id": 250,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 72
      },
      "elapsed": 9.170034900307655e-7
    },
    {
      "event": "call",
      "id": 252,
      "thread_id": 0,
      "method_id": "_checkContext",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "ctx"
        },
        {
          "class": "String",
          "value": "'findById'",
          "name": "fnName"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 1158
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 253,
      "parent_id": 252,
      "elapsed": 0.0000014170072972774506
    },
    {
      "event": "call",
      "id": 254,
      "thread_id": 0,
      "method_id": "_checkContext",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "ctx"
        },
        {
          "class": "String",
          "value": "'findOne'",
          "name": "fnName"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 1158
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 255,
      "parent_id": 254,
      "elapsed": 7.919734343886375e-7
    },
    {
      "event": "call",
      "id": 256,
      "thread_id": 0,
      "method_id": "Query",
      "static": false,
      "receiver": {
        "class": "Query",
        "value": "Query {}",
        "object_id": 2007
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2008,
          "name": "conditions"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2009,
          "name": "options"
        },
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "model"
        },
        {
          "class": "NativeCollection",
          "value": "NativeCollection {\n  collection: Collection { s: [Object] },\n  Promise: [Function: Promise],\n  _closed: false,\n  opts: {\n    bufferCommands: true,\n    capped: false,\n    autoCreate: undefined,\n    Promise: [Function: Promise],\n    '$wasForceClosed': undefined\n  },\n  name: 'users',\n  collectionName: 'users',\n  conn: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  queue: [],\n  buffer: false,\n  emitter: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  }\n}",
          "object_id": 88,
          "name": "collection"
        }
      ],
      "defined_class": "query",
      "path": "server/node_modules/mongoose/lib/query.js",
      "lineno": 59
    },
    {
      "event": "call",
      "id": 257,
      "thread_id": 0,
      "method_id": "prepareDiscriminatorCriteria",
      "static": true,
      "parameters": [
        {
          "class": "Query",
          "value": "Query {\n  _mongooseOptions: {},\n  _transforms: [],\n  _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n  _executionCount: 0,\n  mongooseCollection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'User',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  op: 'find',\n  options: {},\n  _conditions: {},\n  _fields: undefined,\n  _update: undefined,\n  _path: undefined,\n  _distinct: undefined,\n  _collection: NodeCollection {\n    collection: [NativeCollection],\n    collectionName: 'users'\n  },\n  _traceFunction: undefined\n}",
          "object_id": 2007,
          "name": "query"
        }
      ],
      "defined_class": "query",
      "path": "server/node_modules/mongoose/lib/query.js",
      "lineno": 2883
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 258,
      "parent_id": 257,
      "elapsed": 0.00000100000761449337
    },
    {
      "event": "call",
      "id": 259,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Query",
          "value": "Query {\n  _mongooseOptions: {},\n  _transforms: [],\n  _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n  _executionCount: 0,\n  mongooseCollection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'User',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  op: 'find',\n  options: {},\n  _conditions: {},\n  _fields: undefined,\n  _update: undefined,\n  _path: undefined,\n  _distinct: undefined,\n  _collection: NodeCollection {\n    collection: [NativeCollection],\n    collectionName: 'users'\n  },\n  _traceFunction: undefined,\n  '$useProjection': true\n}",
          "object_id": 2007,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'schema'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 260,
      "parent_id": 259,
      "return_value": {
        "class": "Schema",
        "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
        "object_id": 4
      },
      "elapsed": 7.500057108700275e-7
    },
    {
      "event": "call",
      "id": 261,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 262,
      "parent_id": 261,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "typePojoToMixed",
            "class": "Boolean"
          },
          {
            "name": "typeKey",
            "class": "String"
          },
          {
            "name": "id",
            "class": "Boolean"
          },
          {
            "name": "noVirtualId",
            "class": "Boolean"
          },
          {
            "name": "_id",
            "class": "Boolean"
          },
          {
            "name": "noId",
            "class": "Boolean"
          },
          {
            "name": "validateBeforeSave",
            "class": "Boolean"
          },
          {
            "name": "read",
            "class": "object"
          },
          {
            "name": "shardKey",
            "class": "object"
          },
          {
            "name": "autoIndex",
            "class": "object"
          },
          {
            "name": "minimize",
            "class": "Boolean"
          },
          {
            "name": "discriminatorKey",
            "class": "String"
          },
          {
            "name": "versionKey",
            "class": "String"
          },
          {
            "name": "capped",
            "class": "Boolean"
          },
          {
            "name": "bufferCommands",
            "class": "Boolean"
          },
          {
            "name": "strict",
            "class": "Boolean"
          },
          {
            "name": "pluralization",
            "class": "Boolean"
          }
        ],
        "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
        "object_id": 84
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "call",
      "id": 263,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "typePojoToMixed",
              "class": "Boolean"
            },
            {
              "name": "typeKey",
              "class": "String"
            },
            {
              "name": "id",
              "class": "Boolean"
            },
            {
              "name": "noVirtualId",
              "class": "Boolean"
            },
            {
              "name": "_id",
              "class": "Boolean"
            },
            {
              "name": "noId",
              "class": "Boolean"
            },
            {
              "name": "validateBeforeSave",
              "class": "Boolean"
            },
            {
              "name": "read",
              "class": "object"
            },
            {
              "name": "shardKey",
              "class": "object"
            },
            {
              "name": "autoIndex",
              "class": "object"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "discriminatorKey",
              "class": "String"
            },
            {
              "name": "versionKey",
              "class": "String"
            },
            {
              "name": "capped",
              "class": "Boolean"
            },
            {
              "name": "bufferCommands",
              "class": "Boolean"
            },
            {
              "name": "strict",
              "class": "Boolean"
            },
            {
              "name": "pluralization",
              "class": "Boolean"
            }
          ],
          "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
          "object_id": 84,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'collation'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 264,
      "parent_id": 263,
      "elapsed": 6.250047590583563e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 265,
      "parent_id": 256,
      "elapsed": 0.0006147499952930957
    },
    {
      "event": "call",
      "id": 266,
      "thread_id": 0,
      "method_id": "prepareDiscriminatorCriteria",
      "static": true,
      "parameters": [
        {
          "class": "Query",
          "value": "Query {\n  _mongooseOptions: {},\n  _transforms: [],\n  _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n  _executionCount: 0,\n  mongooseCollection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'User',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  op: 'findOne',\n  options: {},\n  _conditions: { _id: [ObjectID] },\n  _fields: { password: 0 },\n  _update: undefined,\n  _path: undefined,\n  _distinct: undefined,\n  _collection: NodeCollection {\n    collection: [NativeCollection],\n    collectionName: 'users'\n  },\n  _traceFunction: undefined,\n  '$useProjection': true,\n  _userProvidedFields: { password: 0 }\n}",
          "object_id": 2007,
          "name": "query"
        }
      ],
      "defined_class": "query",
      "path": "server/node_modules/mongoose/lib/query.js",
      "lineno": 2883
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 267,
      "parent_id": 266,
      "elapsed": 0.0000011250085663050413
    },
    {
      "event": "call",
      "id": 268,
      "thread_id": 0,
      "method_id": "_populateObj",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "model",
              "class": "String"
            },
            {
              "name": "populate",
              "class": "Object",
              "properties": [
                {
                  "name": "path",
                  "class": "String"
                },
                {
                  "name": "model",
                  "class": "String"
                }
              ]
            }
          ],
          "value": "{\n  path: 'merchant',\n  model: 'Merchant',\n  populate: { path: 'brand', model: 'Brand' }\n}",
          "object_id": 2010,
          "name": "obj"
        }
      ],
      "defined_class": "utils",
      "path": "server/node_modules/mongoose/lib/utils.js",
      "lineno": 534
    },
    {
      "event": "call",
      "id": 269,
      "thread_id": 0,
      "method_id": "_populateObj",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "model",
              "class": "String"
            }
          ],
          "value": "{ path: 'brand', model: 'Brand' }",
          "object_id": 2011,
          "name": "obj"
        }
      ],
      "defined_class": "utils",
      "path": "server/node_modules/mongoose/lib/utils.js",
      "lineno": 534
    },
    {
      "event": "call",
      "id": 270,
      "thread_id": 0,
      "method_id": "constructor",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "model",
              "class": "String"
            }
          ],
          "value": "{ path: 'brand', model: 'Brand' }",
          "object_id": 2012,
          "name": "obj"
        }
      ],
      "defined_class": "PopulateOptions",
      "path": "server/node_modules/mongoose/lib/options/PopulateOptions.js",
      "lineno": 6
    },
    {
      "event": "call",
      "id": 271,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "model",
              "class": "String"
            }
          ],
          "value": "{ path: 'brand', model: 'Brand' }",
          "object_id": 2012,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 272,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "model",
              "class": "String"
            }
          ],
          "value": "{ path: 'brand', model: 'Brand' }",
          "object_id": 2012,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "call",
      "id": 273,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'brand'",
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 274,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'brand'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 275,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'brand'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 276,
      "parent_id": 275,
      "elapsed": 6.250047590583563e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 277,
      "parent_id": 274,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.0000228749995585531
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 278,
      "parent_id": 273,
      "return_value": {
        "class": "String",
        "value": "'brand'"
      },
      "elapsed": 0.00005345902172848582
    },
    {
      "event": "call",
      "id": 279,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'Brand'",
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 280,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'Brand'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 281,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'Brand'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 282,
      "parent_id": 281,
      "elapsed": 5.829788278788328e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 283,
      "parent_id": 280,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.00002274999860674143
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 284,
      "parent_id": 279,
      "return_value": {
        "class": "String",
        "value": "'Brand'"
      },
      "elapsed": 0.00004720801371149719
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 285,
      "parent_id": 272,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "path",
            "class": "String"
          },
          {
            "name": "model",
            "class": "String"
          }
        ],
        "value": "{ path: 'brand', model: 'Brand' }",
        "object_id": 2013
      },
      "elapsed": 0.0001565830025356263
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 286,
      "parent_id": 271,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "path",
            "class": "String"
          },
          {
            "name": "model",
            "class": "String"
          }
        ],
        "value": "{ path: 'brand', model: 'Brand' }",
        "object_id": 2013
      },
      "elapsed": 0.00020154198864474893
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 287,
      "parent_id": 270,
      "elapsed": 0.00023683399194851518
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 288,
      "parent_id": 269,
      "return_value": {
        "class": "Array",
        "items": {
          "class": "PopulateOptions"
        },
        "value": "[ PopulateOptions { _docs: {}, path: 'brand', model: 'Brand' } ]",
        "size": 1,
        "object_id": 2014
      },
      "elapsed": 0.0002699580218177289
    },
    {
      "event": "call",
      "id": 289,
      "thread_id": 0,
      "method_id": "constructor",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "model",
              "class": "String"
            },
            {
              "name": "populate",
              "class": "Array",
              "items": {
                "class": "PopulateOptions"
              }
            }
          ],
          "value": "{\n  path: 'merchant',\n  model: 'Merchant',\n  populate: [ [PopulateOptions] ]\n}",
          "object_id": 2015,
          "name": "obj"
        }
      ],
      "defined_class": "PopulateOptions",
      "path": "server/node_modules/mongoose/lib/options/PopulateOptions.js",
      "lineno": 6
    },
    {
      "event": "call",
      "id": 290,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "model",
              "class": "String"
            },
            {
              "name": "populate",
              "class": "Array",
              "items": {
                "class": "PopulateOptions"
              }
            }
          ],
          "value": "{\n  path: 'merchant',\n  model: 'Merchant',\n  populate: [ [PopulateOptions] ]\n}",
          "object_id": 2015,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 291,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "model",
              "class": "String"
            },
            {
              "name": "populate",
              "class": "Array",
              "items": {
                "class": "PopulateOptions"
              }
            }
          ],
          "value": "{\n  path: 'merchant',\n  model: 'Merchant',\n  populate: [ [PopulateOptions] ]\n}",
          "object_id": 2015,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "call",
      "id": 292,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 293,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 294,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 295,
      "parent_id": 294,
      "elapsed": 5.420006345957518e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 296,
      "parent_id": 293,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.00002037500962615013
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 297,
      "parent_id": 292,
      "return_value": {
        "class": "String",
        "value": "'merchant'"
      },
      "elapsed": 0.00004429198452271521
    },
    {
      "event": "call",
      "id": 298,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'Merchant'",
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 299,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'Merchant'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 300,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'Merchant'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 301,
      "parent_id": 300,
      "elapsed": 4.999747034162283e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 302,
      "parent_id": 299,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.00002125001628883183
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 303,
      "parent_id": 298,
      "return_value": {
        "class": "String",
        "value": "'Merchant'"
      },
      "elapsed": 0.00007249999907799065
    },
    {
      "event": "call",
      "id": 304,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Array",
          "items": {
            "class": "PopulateOptions"
          },
          "value": "[ PopulateOptions { _docs: {}, path: 'brand', model: 'Brand' } ]",
          "size": 1,
          "object_id": 2014,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 305,
      "thread_id": 0,
      "method_id": "cloneArray",
      "static": true,
      "parameters": [
        {
          "class": "Array",
          "items": {
            "class": "PopulateOptions"
          },
          "value": "[ PopulateOptions { _docs: {}, path: 'brand', model: 'Brand' } ]",
          "size": 1,
          "object_id": 2014,
          "name": "arr"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 129
    },
    {
      "event": "call",
      "id": 306,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "PopulateOptions",
          "value": "PopulateOptions { _docs: {}, path: 'brand', model: 'Brand' }",
          "object_id": 2016,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "Boolean",
          "value": "true",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 307,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "PopulateOptions",
          "value": "PopulateOptions { _docs: {}, path: 'brand', model: 'Brand' }",
          "object_id": 2016,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 308,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "PopulateOptions",
          "value": "PopulateOptions { _docs: {}, path: 'brand', model: 'Brand' }",
          "object_id": 2016,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 309,
      "parent_id": 308,
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 310,
      "parent_id": 307,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.000028458016458898783
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 311,
      "parent_id": 306,
      "return_value": {
        "class": "PopulateOptions",
        "value": "PopulateOptions { _docs: {}, path: 'brand', model: 'Brand' }",
        "object_id": 2016
      },
      "elapsed": 0.00006299998494796455
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 312,
      "parent_id": 305,
      "return_value": {
        "class": "Array",
        "items": {
          "class": "PopulateOptions"
        },
        "value": "[ PopulateOptions { _docs: {}, path: 'brand', model: 'Brand' } ]",
        "size": 1,
        "object_id": 2017
      },
      "elapsed": 0.00010641699191182852
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 313,
      "parent_id": 304,
      "return_value": {
        "class": "Array",
        "items": {
          "class": "PopulateOptions"
        },
        "value": "[ PopulateOptions { _docs: {}, path: 'brand', model: 'Brand' } ]",
        "size": 1,
        "object_id": 2017
      },
      "elapsed": 0.0001488330017309636
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 314,
      "parent_id": 291,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "path",
            "class": "String"
          },
          {
            "name": "model",
            "class": "String"
          },
          {
            "name": "populate",
            "class": "Array",
            "items": {
              "class": "PopulateOptions"
            }
          }
        ],
        "value": "{\n  path: 'merchant',\n  model: 'Merchant',\n  populate: [ [PopulateOptions] ]\n}",
        "object_id": 2018
      },
      "elapsed": 0.00036941698635928333
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 315,
      "parent_id": 290,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "path",
            "class": "String"
          },
          {
            "name": "model",
            "class": "String"
          },
          {
            "name": "populate",
            "class": "Array",
            "items": {
              "class": "PopulateOptions"
            }
          }
        ],
        "value": "{\n  path: 'merchant',\n  model: 'Merchant',\n  populate: [ [PopulateOptions] ]\n}",
        "object_id": 2018
      },
      "elapsed": 0.00042825000127777457
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 316,
      "parent_id": 289,
      "elapsed": 0.000470208004117012
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 317,
      "parent_id": 268,
      "return_value": {
        "class": "Array",
        "items": {
          "class": "PopulateOptions"
        },
        "value": "[\n  PopulateOptions {\n    _docs: {},\n    path: 'merchant',\n    model: 'Merchant',\n    populate: [Array]\n  }\n]",
        "size": 1,
        "object_id": 2019
      },
      "elapsed": 0.0008226660138461739
    },
    {
      "event": "call",
      "id": 318,
      "thread_id": 0,
      "method_id": "constructor",
      "static": true,
      "defined_class": "CastError",
      "path": "server/node_modules/mongoose/lib/error/cast.js",
      "lineno": 21
    },
    {
      "event": "call",
      "id": 319,
      "thread_id": 0,
      "method_id": "formatMessage",
      "static": true,
      "defined_class": "cast",
      "path": "server/node_modules/mongoose/lib/error/cast.js",
      "lineno": 94
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 320,
      "parent_id": 319,
      "return_value": {
        "class": "String",
        "value": "'Cast to undefined failed for value undefined at path \"undefined\"'"
      },
      "elapsed": 0.0000012500095181167126
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 321,
      "parent_id": 318,
      "elapsed": 0.000082874990766868
    },
    {
      "event": "call",
      "id": 322,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'schema'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 323,
      "parent_id": 322,
      "return_value": {
        "class": "Schema",
        "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
        "object_id": 4
      },
      "elapsed": 0.0000012500095181167126
    },
    {
      "event": "call",
      "id": 324,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 325,
      "parent_id": 324,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "typePojoToMixed",
            "class": "Boolean"
          },
          {
            "name": "typeKey",
            "class": "String"
          },
          {
            "name": "id",
            "class": "Boolean"
          },
          {
            "name": "noVirtualId",
            "class": "Boolean"
          },
          {
            "name": "_id",
            "class": "Boolean"
          },
          {
            "name": "noId",
            "class": "Boolean"
          },
          {
            "name": "validateBeforeSave",
            "class": "Boolean"
          },
          {
            "name": "read",
            "class": "object"
          },
          {
            "name": "shardKey",
            "class": "object"
          },
          {
            "name": "autoIndex",
            "class": "object"
          },
          {
            "name": "minimize",
            "class": "Boolean"
          },
          {
            "name": "discriminatorKey",
            "class": "String"
          },
          {
            "name": "versionKey",
            "class": "String"
          },
          {
            "name": "capped",
            "class": "Boolean"
          },
          {
            "name": "bufferCommands",
            "class": "Boolean"
          },
          {
            "name": "strict",
            "class": "Boolean"
          },
          {
            "name": "pluralization",
            "class": "Boolean"
          }
        ],
        "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
        "object_id": 84
      },
      "elapsed": 6.250047590583563e-7
    },
    {
      "event": "call",
      "id": 326,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'schema'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 327,
      "parent_id": 326,
      "return_value": {
        "class": "Schema",
        "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
        "object_id": 4
      },
      "elapsed": 4.580069798976183e-7
    },
    {
      "event": "call",
      "id": 328,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 329,
      "parent_id": 328,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "typePojoToMixed",
            "class": "Boolean"
          },
          {
            "name": "typeKey",
            "class": "String"
          },
          {
            "name": "id",
            "class": "Boolean"
          },
          {
            "name": "noVirtualId",
            "class": "Boolean"
          },
          {
            "name": "_id",
            "class": "Boolean"
          },
          {
            "name": "noId",
            "class": "Boolean"
          },
          {
            "name": "validateBeforeSave",
            "class": "Boolean"
          },
          {
            "name": "read",
            "class": "object"
          },
          {
            "name": "shardKey",
            "class": "object"
          },
          {
            "name": "autoIndex",
            "class": "object"
          },
          {
            "name": "minimize",
            "class": "Boolean"
          },
          {
            "name": "discriminatorKey",
            "class": "String"
          },
          {
            "name": "versionKey",
            "class": "String"
          },
          {
            "name": "capped",
            "class": "Boolean"
          },
          {
            "name": "bufferCommands",
            "class": "Boolean"
          },
          {
            "name": "strict",
            "class": "Boolean"
          },
          {
            "name": "pluralization",
            "class": "Boolean"
          }
        ],
        "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
        "object_id": 84
      },
      "elapsed": 5.830079317092896e-7
    },
    {
      "event": "call",
      "id": 330,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "typePojoToMixed",
              "class": "Boolean"
            },
            {
              "name": "typeKey",
              "class": "String"
            },
            {
              "name": "id",
              "class": "Boolean"
            },
            {
              "name": "noVirtualId",
              "class": "Boolean"
            },
            {
              "name": "_id",
              "class": "Boolean"
            },
            {
              "name": "noId",
              "class": "Boolean"
            },
            {
              "name": "validateBeforeSave",
              "class": "Boolean"
            },
            {
              "name": "read",
              "class": "object"
            },
            {
              "name": "shardKey",
              "class": "object"
            },
            {
              "name": "autoIndex",
              "class": "object"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "discriminatorKey",
              "class": "String"
            },
            {
              "name": "versionKey",
              "class": "String"
            },
            {
              "name": "capped",
              "class": "Boolean"
            },
            {
              "name": "bufferCommands",
              "class": "Boolean"
            },
            {
              "name": "strict",
              "class": "Boolean"
            },
            {
              "name": "pluralization",
              "class": "Boolean"
            }
          ],
          "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
          "object_id": 84,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'strictQuery'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 331,
      "parent_id": 330,
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "call",
      "id": 332,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 333,
      "parent_id": 332,
      "return_value": {
        "class": "String",
        "value": "'_id'"
      },
      "elapsed": 0.0000016250123735517263
    },
    {
      "event": "call",
      "id": 334,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 335,
      "parent_id": 334,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 72
      },
      "elapsed": 0.0000017499842215329409
    },
    {
      "event": "call",
      "id": 336,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Array",
          "items": {
            "class": "Function"
          },
          "value": "[ [Function: resetId] ]",
          "size": 1,
          "object_id": 1873,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 337,
      "thread_id": 0,
      "method_id": "cloneArray",
      "static": true,
      "parameters": [
        {
          "class": "Array",
          "items": {
            "class": "Function"
          },
          "value": "[ [Function: resetId] ]",
          "size": 1,
          "object_id": 1873,
          "name": "arr"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 129
    },
    {
      "event": "call",
      "id": 338,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "[Function: resetId]",
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "Boolean",
          "value": "true",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 339,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "[Function: resetId]",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 340,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "[Function: resetId]",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 341,
      "parent_id": 340,
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 342,
      "parent_id": 339,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.000025332992663607
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 343,
      "parent_id": 338,
      "return_value": {
        "class": "Function",
        "value": "[Function: resetId]"
      },
      "elapsed": 0.00005599998985417187
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 344,
      "parent_id": 337,
      "return_value": {
        "class": "Array",
        "items": {
          "class": "Function"
        },
        "value": "[ [Function: resetId] ]",
        "size": 1,
        "object_id": 2020
      },
      "elapsed": 0.00009712498285807669
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 345,
      "parent_id": 336,
      "return_value": {
        "class": "Array",
        "items": {
          "class": "Function"
        },
        "value": "[ [Function: resetId] ]",
        "size": 1,
        "object_id": 2020
      },
      "elapsed": 0.00013537501217797399
    },
    {
      "event": "call",
      "id": 346,
      "thread_id": 0,
      "method_id": "resetId",
      "static": false,
      "receiver": {
        "class": "Query",
        "value": "Query {\n  _mongooseOptions: { populate: [Object] },\n  _transforms: [],\n  _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n  _executionCount: 1,\n  mongooseCollection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'User',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  op: 'findOne',\n  options: {},\n  _conditions: { _id: [ObjectID] },\n  _fields: { password: 0 },\n  _update: undefined,\n  _path: undefined,\n  _distinct: undefined,\n  _collection: NodeCollection {\n    collection: [NativeCollection],\n    collectionName: 'users'\n  },\n  _traceFunction: undefined,\n  '$useProjection': true,\n  _userProvidedFields: { password: 0 }\n}",
        "object_id": 2007
      },
      "parameters": [
        {
          "class": "ObjectID",
          "value": "ObjectID {\n  _bsontype: 'ObjectID',\n  id: Buffer(12) [Uint8Array] [\n    102, 150, 152, 210,  66,\n     76, 109,   0,  20, 204,\n     85, 157\n  ]\n}",
          "object_id": 2021,
          "name": "v"
        },
        {
          "class": "ObjectId",
          "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 72
        }
      ],
      "defined_class": "objectid",
      "path": "server/node_modules/mongoose/lib/schema/objectid.js",
      "lineno": 299
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 347,
      "parent_id": 346,
      "return_value": {
        "class": "ObjectID",
        "value": "ObjectID {\n  _bsontype: 'ObjectID',\n  id: Buffer(12) [Uint8Array] [\n    102, 150, 152, 210,  66,\n     76, 109,   0,  20, 204,\n     85, 157\n  ]\n}",
        "object_id": 2021
      },
      "elapsed": 0.0000017500133253633976
    },
    {
      "event": "call",
      "id": 348,
      "thread_id": 0,
      "method_id": "analyzeSchema",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 189
    },
    {
      "event": "call",
      "id": 349,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'email'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'email',\n  instance: 'String',\n  validators: [ [Object] ],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions {\n    type: [Function: String],\n    required: [Function: required]\n  },\n  _index: null,\n  isRequired: true,\n  requiredValidator: [Function (anonymous)],\n  originalRequiredValue: [Function: required],\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 9,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 350,
      "parent_id": 349,
      "elapsed": 0.0000028329959604889154
    },
    {
      "event": "call",
      "id": 351,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'phoneNumber'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'phoneNumber',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 13,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 352,
      "parent_id": 351,
      "elapsed": 0.0000014580145943909883
    },
    {
      "event": "call",
      "id": 353,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'firstName'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'firstName',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 17,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 354,
      "parent_id": 353,
      "elapsed": 0.0000011659867595881224
    },
    {
      "event": "call",
      "id": 355,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'lastName'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'lastName',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 21,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 356,
      "parent_id": 355,
      "elapsed": 0.00000100000761449337
    },
    {
      "event": "call",
      "id": 357,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'password'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'password',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 25,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 358,
      "parent_id": 357,
      "elapsed": 0.0000010829826351255178
    },
    {
      "event": "call",
      "id": 359,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        },
        {
          "class": "ObjectId",
          "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 29,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 360,
      "parent_id": 359,
      "elapsed": 8.749775588512421e-7
    },
    {
      "event": "call",
      "id": 361,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'provider'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'provider',\n  instance: 'String',\n  validators: [ [Object] ],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions {\n    type: [Function: String],\n    required: true,\n    default: 'Email'\n  },\n  _index: null,\n  isRequired: true,\n  requiredValidator: [Function (anonymous)],\n  originalRequiredValue: true,\n  defaultValue: 'Email',\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 33,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 362,
      "parent_id": 361,
      "elapsed": 0.00000100000761449337
    },
    {
      "event": "call",
      "id": 363,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'googleId'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'googleId',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 37,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 364,
      "parent_id": 363,
      "elapsed": 8.750066626816988e-7
    },
    {
      "event": "call",
      "id": 365,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'facebookId'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'facebookId',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 41,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 366,
      "parent_id": 365,
      "elapsed": 0.00000100000761449337
    },
    {
      "event": "call",
      "id": 367,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'avatar'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'avatar',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 45,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 368,
      "parent_id": 367,
      "elapsed": 8.330098353326321e-7
    },
    {
      "event": "call",
      "id": 369,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'role'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [ 'ROLE ADMIN', 'ROLE MEMBER', 'ROLE MERCHANT' ],\n  regExp: null,\n  path: 'role',\n  instance: 'String',\n  validators: [ [Object] ],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions {\n    type: [Function: String],\n    default: 'ROLE MEMBER',\n    enum: [Array]\n  },\n  _index: null,\n  defaultValue: 'ROLE MEMBER',\n  enumValidator: [Function (anonymous)],\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 51,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 370,
      "parent_id": 369,
      "elapsed": 7.500057108700275e-7
    },
    {
      "event": "call",
      "id": 371,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'resetPasswordToken'",
          "name": "path"
        },
        {
          "class": "SchemaString",
          "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'resetPasswordToken',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 56,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 372,
      "parent_id": 371,
      "elapsed": 0.0001508339773863554
    },
    {
      "event": "call",
      "id": 373,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'resetPasswordExpires'",
          "name": "path"
        },
        {
          "class": "SchemaDate",
          "value": "SchemaDate {\n  path: 'resetPasswordExpires',\n  instance: 'Date',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaDateOptions { type: [Function: Date] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 60,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 374,
      "parent_id": 373,
      "elapsed": 0.000003249995643272996
    },
    {
      "event": "call",
      "id": 375,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'updated'",
          "name": "path"
        },
        {
          "class": "SchemaDate",
          "value": "SchemaDate {\n  path: 'updated',\n  instance: 'Date',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaDateOptions { type: [Function: Date] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 62,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 376,
      "parent_id": 375,
      "elapsed": 0.000002167013008147478
    },
    {
      "event": "call",
      "id": 377,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'created'",
          "name": "path"
        },
        {
          "class": "SchemaDate",
          "value": "SchemaDate {\n  path: 'created',\n  instance: 'Date',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaDateOptions {\n    type: [Function: Date],\n    default: [Function: now]\n  },\n  _index: null,\n  defaultValue: [Function: now],\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 67,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 378,
      "parent_id": 377,
      "elapsed": 0.000002166023477911949
    },
    {
      "event": "call",
      "id": 379,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "ObjectId",
          "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 72,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 380,
      "parent_id": 379,
      "elapsed": 0.000002207991201430559
    },
    {
      "event": "call",
      "id": 381,
      "thread_id": 0,
      "method_id": "analyzePath",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'__v'",
          "name": "path"
        },
        {
          "class": "SchemaNumber",
          "value": "SchemaNumber {\n  path: '__v',\n  instance: 'Number',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaNumberOptions { type: [Function: Number] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 76,
          "name": "type"
        }
      ],
      "defined_class": "queryhelpers",
      "path": "server/node_modules/mongoose/lib/queryhelpers.js",
      "lineno": 224
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 382,
      "parent_id": 381,
      "elapsed": 0.0000018329883459955454
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 383,
      "parent_id": 348,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2022
      },
      "elapsed": 0.0007755419937893748
    },
    {
      "event": "call",
      "id": 384,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2023,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 385,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2023,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 386,
      "parent_id": 385,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 2024
      },
      "elapsed": 6.250047590583563e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 387,
      "parent_id": 384,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 2024
      },
      "elapsed": 0.00003783300053328276
    },
    {
      "event": "call",
      "id": 388,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'schema'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 389,
      "parent_id": 388,
      "return_value": {
        "class": "Schema",
        "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
        "object_id": 4
      },
      "elapsed": 6.250047590583563e-7
    },
    {
      "event": "call",
      "id": 390,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 391,
      "parent_id": 390,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "typePojoToMixed",
            "class": "Boolean"
          },
          {
            "name": "typeKey",
            "class": "String"
          },
          {
            "name": "id",
            "class": "Boolean"
          },
          {
            "name": "noVirtualId",
            "class": "Boolean"
          },
          {
            "name": "_id",
            "class": "Boolean"
          },
          {
            "name": "noId",
            "class": "Boolean"
          },
          {
            "name": "validateBeforeSave",
            "class": "Boolean"
          },
          {
            "name": "read",
            "class": "object"
          },
          {
            "name": "shardKey",
            "class": "object"
          },
          {
            "name": "autoIndex",
            "class": "object"
          },
          {
            "name": "minimize",
            "class": "Boolean"
          },
          {
            "name": "discriminatorKey",
            "class": "String"
          },
          {
            "name": "versionKey",
            "class": "String"
          },
          {
            "name": "capped",
            "class": "Boolean"
          },
          {
            "name": "bufferCommands",
            "class": "Boolean"
          },
          {
            "name": "strict",
            "class": "Boolean"
          },
          {
            "name": "pluralization",
            "class": "Boolean"
          }
        ],
        "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
        "object_id": 84
      },
      "elapsed": 0.000001374981366097927
    },
    {
      "event": "call",
      "id": 392,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "typePojoToMixed",
              "class": "Boolean"
            },
            {
              "name": "typeKey",
              "class": "String"
            },
            {
              "name": "id",
              "class": "Boolean"
            },
            {
              "name": "noVirtualId",
              "class": "Boolean"
            },
            {
              "name": "_id",
              "class": "Boolean"
            },
            {
              "name": "noId",
              "class": "Boolean"
            },
            {
              "name": "validateBeforeSave",
              "class": "Boolean"
            },
            {
              "name": "read",
              "class": "object"
            },
            {
              "name": "shardKey",
              "class": "object"
            },
            {
              "name": "autoIndex",
              "class": "object"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "discriminatorKey",
              "class": "String"
            },
            {
              "name": "versionKey",
              "class": "String"
            },
            {
              "name": "capped",
              "class": "Boolean"
            },
            {
              "name": "bufferCommands",
              "class": "Boolean"
            },
            {
              "name": "strict",
              "class": "Boolean"
            },
            {
              "name": "pluralization",
              "class": "Boolean"
            }
          ],
          "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
          "object_id": 84,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'safe'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 393,
      "parent_id": 392,
      "elapsed": 9.170034900307655e-7
    },
    {
      "event": "call",
      "id": 394,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 395,
      "parent_id": 394,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "typePojoToMixed",
            "class": "Boolean"
          },
          {
            "name": "typeKey",
            "class": "String"
          },
          {
            "name": "id",
            "class": "Boolean"
          },
          {
            "name": "noVirtualId",
            "class": "Boolean"
          },
          {
            "name": "_id",
            "class": "Boolean"
          },
          {
            "name": "noId",
            "class": "Boolean"
          },
          {
            "name": "validateBeforeSave",
            "class": "Boolean"
          },
          {
            "name": "read",
            "class": "object"
          },
          {
            "name": "shardKey",
            "class": "object"
          },
          {
            "name": "autoIndex",
            "class": "object"
          },
          {
            "name": "minimize",
            "class": "Boolean"
          },
          {
            "name": "discriminatorKey",
            "class": "String"
          },
          {
            "name": "versionKey",
            "class": "String"
          },
          {
            "name": "capped",
            "class": "Boolean"
          },
          {
            "name": "bufferCommands",
            "class": "Boolean"
          },
          {
            "name": "strict",
            "class": "Boolean"
          },
          {
            "name": "pluralization",
            "class": "Boolean"
          }
        ],
        "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
        "object_id": 84
      },
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "call",
      "id": 396,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "typePojoToMixed",
              "class": "Boolean"
            },
            {
              "name": "typeKey",
              "class": "String"
            },
            {
              "name": "id",
              "class": "Boolean"
            },
            {
              "name": "noVirtualId",
              "class": "Boolean"
            },
            {
              "name": "_id",
              "class": "Boolean"
            },
            {
              "name": "noId",
              "class": "Boolean"
            },
            {
              "name": "validateBeforeSave",
              "class": "Boolean"
            },
            {
              "name": "read",
              "class": "object"
            },
            {
              "name": "shardKey",
              "class": "object"
            },
            {
              "name": "autoIndex",
              "class": "object"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "discriminatorKey",
              "class": "String"
            },
            {
              "name": "versionKey",
              "class": "String"
            },
            {
              "name": "capped",
              "class": "Boolean"
            },
            {
              "name": "bufferCommands",
              "class": "Boolean"
            },
            {
              "name": "strict",
              "class": "Boolean"
            },
            {
              "name": "pluralization",
              "class": "Boolean"
            }
          ],
          "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
          "object_id": 84,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'writeConcern'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 397,
      "parent_id": 396,
      "elapsed": 4.5899651013314724e-7
    },
    {
      "event": "call",
      "id": 398,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'schema'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 399,
      "parent_id": 398,
      "return_value": {
        "class": "Schema",
        "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
        "object_id": 4
      },
      "elapsed": 4.1601015254855156e-7
    },
    {
      "event": "call",
      "id": 400,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 401,
      "parent_id": 400,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "typePojoToMixed",
            "class": "Boolean"
          },
          {
            "name": "typeKey",
            "class": "String"
          },
          {
            "name": "id",
            "class": "Boolean"
          },
          {
            "name": "noVirtualId",
            "class": "Boolean"
          },
          {
            "name": "_id",
            "class": "Boolean"
          },
          {
            "name": "noId",
            "class": "Boolean"
          },
          {
            "name": "validateBeforeSave",
            "class": "Boolean"
          },
          {
            "name": "read",
            "class": "object"
          },
          {
            "name": "shardKey",
            "class": "object"
          },
          {
            "name": "autoIndex",
            "class": "object"
          },
          {
            "name": "minimize",
            "class": "Boolean"
          },
          {
            "name": "discriminatorKey",
            "class": "String"
          },
          {
            "name": "versionKey",
            "class": "String"
          },
          {
            "name": "capped",
            "class": "Boolean"
          },
          {
            "name": "bufferCommands",
            "class": "Boolean"
          },
          {
            "name": "strict",
            "class": "Boolean"
          },
          {
            "name": "pluralization",
            "class": "Boolean"
          }
        ],
        "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
        "object_id": 84
      },
      "elapsed": 4.1601015254855156e-7
    },
    {
      "event": "call",
      "id": 402,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "typePojoToMixed",
              "class": "Boolean"
            },
            {
              "name": "typeKey",
              "class": "String"
            },
            {
              "name": "id",
              "class": "Boolean"
            },
            {
              "name": "noVirtualId",
              "class": "Boolean"
            },
            {
              "name": "_id",
              "class": "Boolean"
            },
            {
              "name": "noId",
              "class": "Boolean"
            },
            {
              "name": "validateBeforeSave",
              "class": "Boolean"
            },
            {
              "name": "read",
              "class": "object"
            },
            {
              "name": "shardKey",
              "class": "object"
            },
            {
              "name": "autoIndex",
              "class": "object"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "discriminatorKey",
              "class": "String"
            },
            {
              "name": "versionKey",
              "class": "String"
            },
            {
              "name": "capped",
              "class": "Boolean"
            },
            {
              "name": "bufferCommands",
              "class": "Boolean"
            },
            {
              "name": "strict",
              "class": "Boolean"
            },
            {
              "name": "pluralization",
              "class": "Boolean"
            }
          ],
          "value": "{\n  typePojoToMixed: true,\n  typeKey: 'type',\n  id: true,\n  noVirtualId: false,\n  _id: true,\n  noId: false,\n  validateBeforeSave: true,\n  read: null,\n  shardKey: null,\n  autoIndex: null,\n  minimize: true,\n  discriminatorKey: '__t',\n  versionKey: '__v',\n  capped: false,\n  bufferCommands: true,\n  strict: true,\n  pluralization: true\n}",
          "object_id": 84,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'read'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 403,
      "parent_id": 402,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 3.7497375160455704e-7
    },
    {
      "event": "call",
      "id": 404,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "password",
              "class": "Number"
            }
          ],
          "value": "{ password: 0 }",
          "object_id": 2025,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 405,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "password",
              "class": "Number"
            }
          ],
          "value": "{ password: 0 }",
          "object_id": 2025,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "call",
      "id": 406,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 407,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 408,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 409,
      "parent_id": 408,
      "elapsed": 4.999747034162283e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 410,
      "parent_id": 407,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.000023708009393885732
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 411,
      "parent_id": 406,
      "return_value": {
        "class": "Number",
        "value": "0"
      },
      "elapsed": 0.000056249991757795215
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 412,
      "parent_id": 405,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "password",
            "class": "Number"
          }
        ],
        "value": "{ password: 0 }",
        "object_id": 2026
      },
      "elapsed": 0.00008520801202394068
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 413,
      "parent_id": 404,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "password",
            "class": "Number"
          }
        ],
        "value": "{ password: 0 }",
        "object_id": 2026
      },
      "elapsed": 0.00013504200614988804
    },
    {
      "event": "call",
      "id": 414,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "NativeCollection",
          "value": "NativeCollection {\n  collection: Collection { s: [Object] },\n  Promise: [Function: Promise],\n  _closed: false,\n  opts: {\n    bufferCommands: true,\n    capped: false,\n    autoCreate: undefined,\n    Promise: [Function: Promise],\n    '$wasForceClosed': undefined\n  },\n  name: 'users',\n  collectionName: 'users',\n  conn: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  queue: [],\n  buffer: false,\n  emitter: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  }\n}",
          "object_id": 88,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'conn'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 415,
      "parent_id": 414,
      "return_value": {
        "class": "NativeConnection",
        "value": "<ref *1> NativeConnection {\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  collections: {\n    users: [NativeCollection],\n    addresses: [NativeCollection],\n    products: [NativeCollection],\n    brands: [NativeCollection],\n    categories: [NativeCollection],\n    merchants: [NativeCollection],\n    contacts: [NativeCollection],\n    cartitems: [NativeCollection],\n    carts: [NativeCollection],\n    orders: [NativeCollection],\n    reviews: [NativeCollection],\n    wishlists: [NativeCollection]\n  },\n  models: {\n    User: [Function],\n    Address: [Function],\n    Product: [Function],\n    Brand: [Function],\n    Category: [Function],\n    Merchant: [Function],\n    Contact: [Function],\n    CartItem: [Function],\n    Cart: [Function],\n    Order: [Function],\n    Review: [Function],\n    Wishlist: [Function]\n  },\n  config: { autoIndex: true, useFindAndModify: false },\n  replica: false,\n  options: null,\n  otherDbs: [],\n  relatedDbs: {},\n  states: [Object: null prototype] {\n    '0': 'disconnected',\n    '1': 'connected',\n    '2': 'connecting',\n    '3': 'disconnecting',\n    '99': 'uninitialized',\n    disconnected: 0,\n    connected: 1,\n    connecting: 2,\n    disconnecting: 3,\n    uninitialized: 99\n  },\n  _readyState: 1,\n  _closeCalled: false,\n  _hasOpened: true,\n  plugins: [],\n  id: 0,\n  _listening: false,\n  _connectionOptions: {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    promiseLibrary: [Function: Promise],\n    driverInfo: [Object]\n  },\n  name: 'mern_ecommerce',\n  host: '127.0.0.1',\n  port: 27017,\n  user: undefined,\n  pass: undefined,\n  client: MongoClient {\n    _events: [Object: null prototype],\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    s: [Object],\n    topology: [NativeTopology],\n    [Symbol(kCapture)]: false\n  },\n  '$initialConnection': Promise { [Circular *1] },\n  db: Db {\n    _events: [Object: null prototype],\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    s: [Object],\n    serverConfig: [Getter],\n    bufferMaxEntries: [Getter],\n    databaseName: [Getter],\n    [Symbol(kCapture)]: false\n  }\n}",
        "object_id": 3
      },
      "elapsed": 0.0000017919810488820076
    },
    {
      "event": "call",
      "id": 416,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "NativeConnection",
          "value": "<ref *1> NativeConnection {\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  collections: {\n    users: [NativeCollection],\n    addresses: [NativeCollection],\n    products: [NativeCollection],\n    brands: [NativeCollection],\n    categories: [NativeCollection],\n    merchants: [NativeCollection],\n    contacts: [NativeCollection],\n    cartitems: [NativeCollection],\n    carts: [NativeCollection],\n    orders: [NativeCollection],\n    reviews: [NativeCollection],\n    wishlists: [NativeCollection]\n  },\n  models: {\n    User: [Function],\n    Address: [Function],\n    Product: [Function],\n    Brand: [Function],\n    Category: [Function],\n    Merchant: [Function],\n    Contact: [Function],\n    CartItem: [Function],\n    Cart: [Function],\n    Order: [Function],\n    Review: [Function],\n    Wishlist: [Function]\n  },\n  config: { autoIndex: true, useFindAndModify: false },\n  replica: false,\n  options: null,\n  otherDbs: [],\n  relatedDbs: {},\n  states: [Object: null prototype] {\n    '0': 'disconnected',\n    '1': 'connected',\n    '2': 'connecting',\n    '3': 'disconnecting',\n    '99': 'uninitialized',\n    disconnected: 0,\n    connected: 1,\n    connecting: 2,\n    disconnecting: 3,\n    uninitialized: 99\n  },\n  _readyState: 1,\n  _closeCalled: false,\n  _hasOpened: true,\n  plugins: [],\n  id: 0,\n  _listening: false,\n  _connectionOptions: {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    promiseLibrary: [Function: Promise],\n    driverInfo: [Object]\n  },\n  name: 'mern_ecommerce',\n  host: '127.0.0.1',\n  port: 27017,\n  user: undefined,\n  pass: undefined,\n  client: MongoClient {\n    _events: [Object: null prototype],\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    s: [Object],\n    topology: [NativeTopology],\n    [Symbol(kCapture)]: false\n  },\n  '$initialConnection': Promise { [Circular *1] },\n  db: Db {\n    _events: [Object: null prototype],\n    _eventsCount: 3,\n    _maxListeners: undefined,\n    s: [Object],\n    serverConfig: [Getter],\n    bufferMaxEntries: [Getter],\n    databaseName: [Getter],\n    [Symbol(kCapture)]: false\n  }\n}",
          "object_id": 3,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'base'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 417,
      "parent_id": 416,
      "return_value": {
        "class": "Mongoose",
        "value": "Mongoose {\n  connections: [ [NativeConnection] ],\n  models: {\n    User: [Function],\n    Address: [Function],\n    Product: [Function],\n    Brand: [Function],\n    Category: [Function],\n    Merchant: [Function],\n    Contact: [Function],\n    CartItem: [Function],\n    Cart: [Function],\n    Order: [Function],\n    Review: [Function],\n    Wishlist: [Function]\n  },\n  modelSchemas: {\n    User: [Schema],\n    Address: [Schema],\n    Product: [Schema],\n    Brand: [Schema],\n    Category: [Schema],\n    Merchant: [Schema],\n    Contact: [Schema],\n    CartItem: [Schema],\n    Cart: [Schema],\n    Order: [Schema],\n    Review: [Schema],\n    Wishlist: [Schema]\n  },\n  options: {\n    pluralization: true,\n    useCreateIndex: true,\n    [Symbol(mongoose:default)]: true\n  },\n  _pluralize: [Function: pluralize],\n  Schema: [Function: Schema] {\n    reserved: [Object: null prototype],\n    Types: [Object],\n    ObjectId: [Function]\n  },\n  model: [Function (anonymous)],\n  plugins: [\n    [Array], [Array],\n    [Array], [Array],\n    [Array], [Array],\n    [Array]\n  ]\n}",
        "object_id": 1
      },
      "elapsed": 7.079797796905041e-7
    },
    {
      "event": "call",
      "id": 418,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Mongoose",
          "value": "Mongoose {\n  connections: [ [NativeConnection] ],\n  models: {\n    User: [Function],\n    Address: [Function],\n    Product: [Function],\n    Brand: [Function],\n    Category: [Function],\n    Merchant: [Function],\n    Contact: [Function],\n    CartItem: [Function],\n    Cart: [Function],\n    Order: [Function],\n    Review: [Function],\n    Wishlist: [Function]\n  },\n  modelSchemas: {\n    User: [Schema],\n    Address: [Schema],\n    Product: [Schema],\n    Brand: [Schema],\n    Category: [Schema],\n    Merchant: [Schema],\n    Contact: [Schema],\n    CartItem: [Schema],\n    Cart: [Schema],\n    Order: [Schema],\n    Review: [Schema],\n    Wishlist: [Schema]\n  },\n  options: {\n    pluralization: true,\n    useCreateIndex: true,\n    [Symbol(mongoose:default)]: true\n  },\n  _pluralize: [Function: pluralize],\n  Schema: [Function: Schema] {\n    reserved: [Object: null prototype],\n    Types: [Object],\n    ObjectId: [Function]\n  },\n  model: [Function (anonymous)],\n  plugins: [\n    [Array], [Array],\n    [Array], [Array],\n    [Array], [Array],\n    [Array]\n  ]\n}",
          "object_id": 1,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 419,
      "parent_id": 418,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "pluralization",
            "class": "Boolean"
          },
          {
            "name": "useCreateIndex",
            "class": "Boolean"
          }
        ],
        "value": "{\n  pluralization: true,\n  useCreateIndex: true,\n  [Symbol(mongoose:default)]: true\n}",
        "object_id": 75
      },
      "elapsed": 4.999747034162283e-7
    },
    {
      "event": "call",
      "id": 420,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "pluralization",
              "class": "Boolean"
            },
            {
              "name": "useCreateIndex",
              "class": "Boolean"
            }
          ],
          "value": "{\n  pluralization: true,\n  useCreateIndex: true,\n  [Symbol(mongoose:default)]: true\n}",
          "object_id": 75,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'debug'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 421,
      "parent_id": 420,
      "elapsed": 5.420006345957518e-7
    },
    {
      "event": "call",
      "id": 422,
      "thread_id": 0,
      "method_id": "findOne",
      "static": false,
      "receiver": {
        "class": "Collection",
        "value": "[Collection users]",
        "object_id": 969
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            }
          ],
          "value": "{ _id: 669698d2424c6d0014cc559d }",
          "object_id": 2027,
          "name": "filter"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "projection",
              "class": "Object",
              "properties": [
                {
                  "name": "password",
                  "class": "Number"
                }
              ]
            }
          ],
          "value": "{ projection: { password: 0 } }",
          "object_id": 2024,
          "name": "options"
        }
      ],
      "defined_class": "users",
      "lineno": 6,
      "path": "mongodb/users"
    },
    {
      "event": "call",
      "id": 423,
      "thread_id": 0,
      "method_id": "find",
      "static": false,
      "receiver": {
        "class": "Collection",
        "value": "[Collection users]",
        "object_id": 969
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            }
          ],
          "value": "{ _id: 669698d2424c6d0014cc559d }",
          "object_id": 2027,
          "name": "filter"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "projection",
              "class": "Object",
              "properties": [
                {
                  "name": "password",
                  "class": "Number"
                }
              ]
            },
            {
              "name": "session",
              "class": "ClientSession"
            }
          ],
          "value": "{\n  projection: { password: 0 },\n  session: ClientSession {\n    _events: [Object: null prototype],\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    topology: [NativeTopology],\n    sessionPool: [ServerSessionPool],\n    hasEnded: false,\n    clientOptions: {},\n    supports: [Object],\n    clusterTime: undefined,\n    operationTime: null,\n    explicit: false,\n    owner: Symbol(),\n    defaultTransactionOptions: {},\n    transaction: [Transaction],\n    [Symbol(kCapture)]: false,\n    [Symbol(serverSession)]: undefined\n  }\n}",
          "object_id": 2028,
          "name": "options"
        }
      ],
      "defined_class": "users",
      "lineno": 7,
      "path": "mongodb/users"
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 424,
      "parent_id": 423,
      "return_value": {
        "class": "Cursor",
        "value": "Cursor {\n  _readableState: ReadableState {\n    state: 6193,\n    highWaterMark: 16,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: null,\n    errored: null,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: null\n  },\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  operation: FindOperation {\n    options: {\n      projection: [Object],\n      session: [ClientSession],\n      skip: 0,\n      limit: 0,\n      raw: undefined,\n      hint: null,\n      timeout: undefined,\n      slaveOk: true,\n      readPreference: [ReadPreference],\n      db: [Db],\n      promiseLibrary: [Function: Promise]\n    },\n    ns: MongoDBNamespace { db: 'mern_ecommerce', collection: 'users' },\n    cmd: {\n      find: 'mern_ecommerce.users',\n      limit: 0,\n      skip: 0,\n      query: [Object],\n      projection: [Object],\n      raw: undefined,\n      hint: null,\n      timeout: undefined,\n      slaveOk: true,\n      readPreference: [ReadPreference],\n      fields: [Object]\n    },\n    readPreference: ReadPreference { mode: 'primary', tags: undefined },\n    cursorState: {\n      cursorId: null,\n      cmd: [Object],\n      documents: [],\n      cursorIndex: 0,\n      dead: false,\n      killed: false,\n      init: false,\n      notified: false,\n      limit: 0,\n      skip: 0,\n      batchSize: 1000,\n      currentLimit: 0,\n      transforms: undefined,\n      raw: undefined,\n      session: [ClientSession]\n    }\n  },\n  pool: null,\n  server: null,\n  disconnectHandler: undefined,\n  bson: BSON {},\n  ns: 'mern_ecommerce.users',\n  namespace: MongoDBNamespace { db: 'mern_ecommerce', collection: 'users' },\n  cmd: {\n    find: 'mern_ecommerce.users',\n    limit: 0,\n    skip: 0,\n    query: { _id: 669698d2424c6d0014cc559d },\n    projection: { password: 0 },\n    raw: undefined,\n    hint: null,\n    timeout: undefined,\n    slaveOk: true,\n    readPreference: ReadPreference { mode: 'primary', tags: undefined },\n    fields: { password: 0 }\n  },\n  options: {\n    projection: { password: 0 },\n    session: ClientSession {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      topology: [NativeTopology],\n      sessionPool: [ServerSessionPool],\n      hasEnded: false,\n      clientOptions: {},\n      supports: [Object],\n      clusterTime: undefined,\n      operationTime: null,\n      explicit: false,\n      owner: Symbol(),\n      defaultTransactionOptions: {},\n      transaction: [Transaction],\n      [Symbol(kCapture)]: false,\n      [Symbol(serverSession)]: undefined\n    },\n    skip: 0,\n    limit: 0,\n    raw: undefined,\n    hint: null,\n    timeout: undefined,\n    slaveOk: true,\n    readPreference: ReadPreference { mode: 'primary', tags: undefined },\n    db: Db {\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      s: [Object],\n      serverConfig: [Getter],\n      bufferMaxEntries: [Getter],\n      databaseName: [Getter],\n      [Symbol(kCapture)]: false\n    },\n    promiseLibrary: [Function: Promise]\n  },\n  topology: NativeTopology {\n    _events: [Object: null prototype] {\n      authenticated: [Function (anonymous)],\n      error: [Array],\n      timeout: [Array],\n      close: [Array],\n      parseError: [Array],\n      fullsetup: [Array],\n      all: [Array],\n      reconnect: [Array],\n      commandStarted: [Function (anonymous)],\n      commandSucceeded: [Function (anonymous)],\n      commandFailed: [Function (anonymous)],\n      serverOpening: [Function (anonymous)],\n      serverClosed: [Function (anonymous)],\n      serverDescriptionChanged: [Function (anonymous)],\n      serverHeartbeatStarted: [Function (anonymous)],\n      serverHeartbeatSucceeded: [Array],\n      serverHeartbeatFailed: [Function (anonymous)],\n      topologyOpening: [Function (anonymous)],\n      topologyClosed: [Function (anonymous)],\n      topologyDescriptionChanged: [Function (anonymous)],\n      joined: [Array],\n      left: [Function (anonymous)],\n      ping: [Function (anonymous)],\n      ha: [Function (anonymous)],\n      connectionPoolCreated: [Function (anonymous)],\n      connectionPoolClosed: [Function (anonymous)],\n      connectionCreated: [Function (anonymous)],\n      connectionReady: [Function (anonymous)],\n      connectionClosed: [Function (anonymous)],\n      connectionCheckOutStarted: [Function (anonymous)],\n      connectionCheckOutFailed: [Function (anonymous)],\n      connectionCheckedOut: [Function (anonymous)],\n      connectionCheckedIn: [Function (anonymous)],\n      connectionPoolCleared: [Function (anonymous)],\n      open: [Function],\n      reconnectFailed: [Function (anonymous)]\n    },\n    _eventsCount: 36,\n    _maxListeners: Infinity,\n    s: {\n      id: 0,\n      options: [Object],\n      seedlist: [Array],\n      state: 'connected',\n      description: [TopologyDescription],\n      serverSelectionTimeoutMS: 30000,\n      heartbeatFrequencyMS: 10000,\n      minHeartbeatFrequencyMS: 500,\n      Cursor: [class Cursor extends CoreCursor],\n      bson: BSON {},\n      servers: [Map],\n      sessionPool: [ServerSessionPool],\n      sessions: [Set],\n      promiseLibrary: [Function: Promise],\n      credentials: undefined,\n      clusterTime: null,\n      connectionTimers: Set(0) {},\n      sCapabilities: [ServerCapabilities]\n    },\n    [Symbol(kCapture)]: false,\n    [Symbol(waitQueue)]: Denque {\n      _head: 2,\n      _tail: 2,\n      _capacity: undefined,\n      _capacityMask: 3,\n      _list: [Array]\n    }\n  },\n  cursorState: {\n    cursorId: null,\n    cmd: {\n      find: 'mern_ecommerce.users',\n      limit: 0,\n      skip: 0,\n      query: [Object],\n      projection: [Object],\n      raw: undefined,\n      hint: null,\n      timeout: undefined,\n      slaveOk: true,\n      readPreference: [ReadPreference],\n      fields: [Object]\n    },\n    documents: [],\n    cursorIndex: 0,\n    dead: false,\n    killed: false,\n    init: false,\n    notified: false,\n    limit: 0,\n    skip: 0,\n    batchSize: 1000,\n    currentLimit: 0,\n    transforms: undefined,\n    raw: undefined,\n    session: ClientSession {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      topology: [NativeTopology],\n      sessionPool: [ServerSessionPool],\n      hasEnded: false,\n      clientOptions: {},\n      supports: [Object],\n      clusterTime: undefined,\n      operationTime: null,\n      explicit: false,\n      owner: Symbol(),\n      defaultTransactionOptions: {},\n      transaction: [Transaction],\n      [Symbol(kCapture)]: false,\n      [Symbol(serverSession)]: undefined\n    }\n  },\n  logger: Logger { className: 'Cursor' },\n  s: {\n    numberOfRetries: 5,\n    tailableRetryInterval: 500,\n    currentNumberOfRetries: 5,\n    state: 0,\n    promiseLibrary: [Function: Promise],\n    explicitlyIgnoreSession: false\n  },\n  [Symbol(kCapture)]: false\n}",
        "object_id": 2029
      },
      "elapsed": 0.00009708400466479361
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 425,
      "parent_id": 422,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "_id",
            "class": "ObjectID"
          },
          {
            "name": "merchant",
            "class": "object"
          },
          {
            "name": "provider",
            "class": "String"
          },
          {
            "name": "role",
            "class": "String"
          },
          {
            "name": "email",
            "class": "String"
          },
          {
            "name": "firstName",
            "class": "String"
          },
          {
            "name": "lastName",
            "class": "String"
          },
          {
            "name": "created",
            "class": "Date"
          },
          {
            "name": "__v",
            "class": "Number"
          }
        ],
        "value": "{\n  _id: 669698d2424c6d0014cc559d,\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
        "object_id": 2030
      },
      "elapsed": 0.0031478339806199074
    },
    {
      "event": "call",
      "id": 426,
      "thread_id": 0,
      "method_id": "_wrapThunkCallback",
      "static": true,
      "parameters": [
        {
          "class": "Query",
          "value": "Query {\n  _mongooseOptions: { populate: [Object] },\n  _transforms: [],\n  _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n  _executionCount: 1,\n  mongooseCollection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'User',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  op: 'findOne',\n  options: {},\n  _conditions: { _id: [ObjectID] },\n  _fields: { password: 0 },\n  _update: undefined,\n  _path: undefined,\n  _distinct: undefined,\n  _collection: NodeCollection {\n    collection: [NativeCollection],\n    collectionName: 'users'\n  },\n  _traceFunction: undefined,\n  '$useProjection': true,\n  _userProvidedFields: { password: 0 },\n  _error: null\n}",
          "object_id": 2007,
          "name": "query"
        },
        {
          "class": "Function",
          "value": "[Function (anonymous)]",
          "name": "cb"
        }
      ],
      "defined_class": "query",
      "path": "server/node_modules/mongoose/lib/query.js",
      "lineno": 4404
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 427,
      "parent_id": 426,
      "return_value": {
        "class": "Function",
        "value": "[Function (anonymous)]"
      },
      "elapsed": 7.500057108700275e-7
    },
    {
      "event": "call",
      "id": 428,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "password",
              "class": "Number"
            }
          ],
          "value": "{ password: 0 }",
          "object_id": 2025,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 429,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "password",
              "class": "Number"
            }
          ],
          "value": "{ password: 0 }",
          "object_id": 2025,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "call",
      "id": 430,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 431,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 432,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 433,
      "parent_id": 432,
      "elapsed": 6.67001586407423e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 434,
      "parent_id": 431,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.00003012499655596912
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 435,
      "parent_id": 430,
      "return_value": {
        "class": "Number",
        "value": "0"
      },
      "elapsed": 0.00006137500167824328
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 436,
      "parent_id": 429,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "password",
            "class": "Number"
          }
        ],
        "value": "{ password: 0 }",
        "object_id": 2031
      },
      "elapsed": 0.00009045799379236996
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 437,
      "parent_id": 428,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "password",
            "class": "Number"
          }
        ],
        "value": "{ password: 0 }",
        "object_id": 2031
      },
      "elapsed": 0.00013570798910222948
    },
    {
      "event": "call",
      "id": 438,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Query",
          "value": "Query {\n  _mongooseOptions: { populate: [Object] },\n  _transforms: [],\n  _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },\n  _executionCount: 1,\n  mongooseCollection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'User',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  op: 'findOne',\n  options: {},\n  _conditions: { _id: [ObjectID] },\n  _fields: { password: 0 },\n  _update: undefined,\n  _path: undefined,\n  _distinct: undefined,\n  _collection: NodeCollection {\n    collection: [NativeCollection],\n    collectionName: 'users'\n  },\n  _traceFunction: undefined,\n  '$useProjection': true,\n  _userProvidedFields: { password: 0 },\n  _error: null\n}",
          "object_id": 2007,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 439,
      "parent_id": 438,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 2023
      },
      "elapsed": 5.420006345957518e-7
    },
    {
      "event": "call",
      "id": 440,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2023,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'session'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 441,
      "parent_id": 440,
      "elapsed": 0.0000010420044418424368
    },
    {
      "event": "call",
      "id": 442,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "password",
              "class": "Number"
            }
          ],
          "value": "{ password: 0 }",
          "object_id": 2025,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 443,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "password",
              "class": "Number"
            }
          ],
          "value": "{ password: 0 }",
          "object_id": 2025,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "call",
      "id": 444,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 445,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 446,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 447,
      "parent_id": 446,
      "elapsed": 4.5899651013314724e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 448,
      "parent_id": 445,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.00002129099448211491
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 449,
      "parent_id": 444,
      "return_value": {
        "class": "Number",
        "value": "0"
      },
      "elapsed": 0.00004895799793303013
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 450,
      "parent_id": 443,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "password",
            "class": "Number"
          }
        ],
        "value": "{ password: 0 }",
        "object_id": 2032
      },
      "elapsed": 0.00007745798211544752
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 451,
      "parent_id": 442,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "password",
            "class": "Number"
          }
        ],
        "value": "{ password: 0 }",
        "object_id": 2032
      },
      "elapsed": 0.00011616598931141198
    },
    {
      "event": "call",
      "id": 452,
      "thread_id": 0,
      "method_id": "_checkContext",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "ctx"
        },
        {
          "class": "String",
          "value": "'populate'",
          "name": "fnName"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 1158
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 453,
      "parent_id": 452,
      "elapsed": 8.330098353326321e-7
    },
    {
      "event": "call",
      "id": 454,
      "thread_id": 0,
      "method_id": "makeSingles",
      "static": true,
      "parameters": [
        {
          "class": "Array",
          "items": {
            "class": "PopulateOptions"
          },
          "value": "[\n  PopulateOptions {\n    _docs: {},\n    path: 'merchant',\n    model: 'Merchant',\n    populate: [Array],\n    _queryProjection: [Object]\n  }\n]",
          "size": 1,
          "object_id": 2033,
          "name": "arr"
        }
      ],
      "defined_class": "utils",
      "path": "server/node_modules/mongoose/lib/utils.js",
      "lineno": 515
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 455,
      "parent_id": 454,
      "return_value": {
        "class": "Array",
        "items": {
          "class": "PopulateOptions"
        },
        "value": "[\n  PopulateOptions {\n    _docs: {},\n    path: 'merchant',\n    model: 'Merchant',\n    populate: [Array],\n    _queryProjection: [Object]\n  }\n]",
        "size": 1,
        "object_id": 2034
      },
      "elapsed": 0.000030625000363215804
    },
    {
      "event": "call",
      "id": 456,
      "thread_id": 0,
      "method_id": "_populate",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "model"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            },
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            },
            {
              "name": "email",
              "class": "String"
            },
            {
              "name": "firstName",
              "class": "String"
            },
            {
              "name": "lastName",
              "class": "String"
            },
            {
              "name": "created",
              "class": "Date"
            },
            {
              "name": "__v",
              "class": "Number"
            }
          ],
          "value": "{\n  _id: 669698d2424c6d0014cc559d,\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
          "object_id": 2030,
          "name": "docs"
        },
        {
          "class": "Array",
          "items": {
            "class": "PopulateOptions"
          },
          "value": "[\n  PopulateOptions {\n    _docs: {},\n    path: 'merchant',\n    model: 'Merchant',\n    populate: [Array],\n    _queryProjection: [Object]\n  }\n]",
          "size": 1,
          "object_id": 2035,
          "name": "paths"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2036,
          "name": "cache"
        },
        {
          "class": "Function",
          "value": "[Function (anonymous)]",
          "name": "callback"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 4293
    },
    {
      "event": "call",
      "id": 457,
      "thread_id": 0,
      "method_id": "populate",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "model"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            },
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            },
            {
              "name": "email",
              "class": "String"
            },
            {
              "name": "firstName",
              "class": "String"
            },
            {
              "name": "lastName",
              "class": "String"
            },
            {
              "name": "created",
              "class": "Date"
            },
            {
              "name": "__v",
              "class": "Number"
            }
          ],
          "value": "{\n  _id: 669698d2424c6d0014cc559d,\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
          "object_id": 2030,
          "name": "docs"
        },
        {
          "class": "PopulateOptions",
          "value": "PopulateOptions {\n  _docs: {},\n  path: 'merchant',\n  model: 'Merchant',\n  populate: [ [PopulateOptions] ],\n  _queryProjection: { password: 0 }\n}",
          "object_id": 2037,
          "name": "options"
        },
        {
          "class": "Function",
          "value": "[Function: next]",
          "name": "callback"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 4322
    },
    {
      "event": "call",
      "id": 458,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 459,
      "parent_id": 458,
      "return_value": {
        "class": "String",
        "value": "'merchant'"
      },
      "elapsed": 0.0000012919772416353226
    },
    {
      "event": "call",
      "id": 460,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 461,
      "parent_id": 460,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 29
      },
      "elapsed": 0.0000017079873941838741
    },
    {
      "event": "call",
      "id": 462,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "ObjectId",
          "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 29,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 463,
      "parent_id": 462,
      "return_value": {
        "class": "SchemaObjectIdOptions",
        "value": "SchemaObjectIdOptions {\n  type: [Function: ObjectId] {\n    schemaName: 'ObjectId',\n    defaultOptions: {},\n    get: [Function (anonymous)],\n    set: [Function: set],\n    _checkRequired: [Function (anonymous)],\n    _cast: [Function: castObjectId],\n    cast: [Function: cast],\n    checkRequired: [Function (anonymous)]\n  },\n  ref: 'Merchant',\n  default: null\n}",
        "object_id": 1930
      },
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "call",
      "id": 464,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "SchemaObjectIdOptions",
          "value": "SchemaObjectIdOptions {\n  type: [Function: ObjectId] {\n    schemaName: 'ObjectId',\n    defaultOptions: {},\n    get: [Function (anonymous)],\n    set: [Function: set],\n    _checkRequired: [Function (anonymous)],\n    _cast: [Function: castObjectId],\n    cast: [Function: cast],\n    checkRequired: [Function (anonymous)]\n  },\n  ref: 'Merchant',\n  default: null\n}",
          "object_id": 1930,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'refPath'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 465,
      "parent_id": 464,
      "elapsed": 0.0000010840012691915035
    },
    {
      "event": "call",
      "id": 466,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 467,
      "parent_id": 466,
      "return_value": {
        "class": "String",
        "value": "'merchant'"
      },
      "elapsed": 7.500057108700275e-7
    },
    {
      "event": "call",
      "id": 468,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 469,
      "parent_id": 468,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 29
      },
      "elapsed": 5.830079317092896e-7
    },
    {
      "event": "call",
      "id": 470,
      "thread_id": 0,
      "method_id": "_getModelNames",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            },
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            },
            {
              "name": "email",
              "class": "String"
            },
            {
              "name": "firstName",
              "class": "String"
            },
            {
              "name": "lastName",
              "class": "String"
            },
            {
              "name": "created",
              "class": "Date"
            },
            {
              "name": "__v",
              "class": "Number"
            }
          ],
          "value": "{\n  _id: 669698d2424c6d0014cc559d,\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
          "object_id": 2030,
          "name": "doc"
        },
        {
          "class": "ObjectId",
          "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 29,
          "name": "schema"
        }
      ],
      "defined_class": "getModelsMapForPopulate",
      "path": "server/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js",
      "lineno": 330
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 471,
      "parent_id": 470,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "modelNames",
            "class": "Array",
            "items": {
              "class": "String"
            }
          },
          {
            "name": "isRefPath",
            "class": "Boolean"
          },
          {
            "name": "refPath",
            "class": "undefined"
          }
        ],
        "value": "{ modelNames: [ 'Merchant' ], isRefPath: false, refPath: undefined }",
        "object_id": 2038
      },
      "elapsed": 0.000010207993909716606
    },
    {
      "event": "call",
      "id": 472,
      "thread_id": 0,
      "method_id": "getVirtual",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "name"
        }
      ],
      "defined_class": "getVirtual",
      "path": "server/node_modules/mongoose/lib/helpers/populate/getVirtual.js",
      "lineno": 9
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 473,
      "parent_id": 472,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 0.000004041008651256561
    },
    {
      "event": "call",
      "id": 474,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 475,
      "parent_id": 474,
      "return_value": {
        "class": "String",
        "value": "'merchant'"
      },
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "call",
      "id": 476,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 477,
      "parent_id": 476,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 29
      },
      "elapsed": 0.000003583991201594472
    },
    {
      "event": "call",
      "id": 478,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 479,
      "parent_id": 478,
      "return_value": {
        "class": "String",
        "value": "'merchant'"
      },
      "elapsed": 9.170034900307655e-7
    },
    {
      "event": "call",
      "id": 480,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 481,
      "parent_id": 480,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 29
      },
      "elapsed": 6.67001586407423e-7
    },
    {
      "event": "call",
      "id": 482,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "PopulateOptions",
          "value": "PopulateOptions {\n  _docs: {},\n  path: 'merchant',\n  model: 'Merchant',\n  populate: [ [PopulateOptions] ],\n  _queryProjection: { password: 0 },\n  isVirtual: false,\n  virtual: null\n}",
          "object_id": 2037,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 483,
      "parent_id": 482,
      "elapsed": 7.080088835209608e-7
    },
    {
      "event": "call",
      "id": 484,
      "thread_id": 0,
      "method_id": "convertTo_id",
      "static": true,
      "parameters": [
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "val"
        },
        {
          "class": "ObjectId",
          "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 29,
          "name": "schema"
        }
      ],
      "defined_class": "getModelsMapForPopulate",
      "path": "server/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js",
      "lineno": 464
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 485,
      "parent_id": 484,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 0.0000017499842215329409
    },
    {
      "event": "call",
      "id": 486,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "PopulateOptions",
          "value": "PopulateOptions {\n  _docs: { '669698d2424c6d0014cc559d': null },\n  path: 'merchant',\n  model: 'Merchant',\n  populate: [ [PopulateOptions] ],\n  _queryProjection: { password: 0 },\n  isVirtual: false,\n  virtual: null\n}",
          "object_id": 2037,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'match'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 487,
      "parent_id": 486,
      "elapsed": 5.410111043602228e-7
    },
    {
      "event": "call",
      "id": 488,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "PopulateOptions",
          "value": "PopulateOptions {\n  _docs: { '669698d2424c6d0014cc559d': null },\n  path: 'merchant',\n  model: 'Merchant',\n  populate: [ [PopulateOptions] ],\n  _queryProjection: { password: 0 },\n  isVirtual: false,\n  virtual: null\n}",
          "object_id": 2037,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'virtual'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 489,
      "parent_id": 488,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 4.580069798976183e-7
    },
    {
      "event": "call",
      "id": 490,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "PopulateOptions",
          "value": "PopulateOptions {\n  _docs: { '669698d2424c6d0014cc559d': null },\n  path: 'merchant',\n  model: 'Merchant',\n  populate: [ [PopulateOptions] ],\n  _queryProjection: { password: 0 },\n  isVirtual: false,\n  virtual: null\n}",
          "object_id": 2037,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'virtual'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 491,
      "parent_id": 490,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "call",
      "id": 492,
      "thread_id": 0,
      "method_id": "_formatMatch",
      "static": true,
      "parameters": [
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "match"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 4649
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 493,
      "parent_id": 492,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 2039
      },
      "elapsed": 0.000001667009200900793
    },
    {
      "event": "call",
      "id": 494,
      "thread_id": 0,
      "method_id": "flatten",
      "static": true,
      "parameters": [
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "item"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 4343
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 495,
      "parent_id": 494,
      "return_value": {
        "class": "Boolean",
        "value": "true"
      },
      "elapsed": 2.500019036233425e-7
    },
    {
      "event": "call",
      "id": 496,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "model",
              "class": "Function"
            },
            {
              "name": "options",
              "class": "Object",
              "properties": [
                {
                  "name": "model",
                  "class": "Function"
                },
                {
                  "name": "_docs",
                  "class": "Object",
                  "properties": [
                    {
                      "name": "669698d2424c6d0014cc559d",
                      "class": "object"
                    }
                  ]
                },
                {
                  "name": "path",
                  "class": "String"
                },
                {
                  "name": "populate",
                  "class": "Array",
                  "items": {
                    "class": "PopulateOptions"
                  }
                },
                {
                  "name": "_queryProjection",
                  "class": "Object",
                  "properties": [
                    {
                      "name": "password",
                      "class": "Number"
                    }
                  ]
                },
                {
                  "name": "isVirtual",
                  "class": "Boolean"
                },
                {
                  "name": "virtual",
                  "class": "object"
                }
              ]
            },
            {
              "name": "match",
              "class": "object"
            },
            {
              "name": "docs",
              "class": "Array",
              "items": {
                "class": "Object",
                "properties": [
                  {
                    "name": "_id",
                    "class": "ObjectID"
                  },
                  {
                    "name": "merchant",
                    "class": "object"
                  },
                  {
                    "name": "provider",
                    "class": "String"
                  },
                  {
                    "name": "role",
                    "class": "String"
                  },
                  {
                    "name": "email",
                    "class": "String"
                  },
                  {
                    "name": "firstName",
                    "class": "String"
                  },
                  {
                    "name": "lastName",
                    "class": "String"
                  },
                  {
                    "name": "created",
                    "class": "Date"
                  },
                  {
                    "name": "__v",
                    "class": "Number"
                  }
                ]
              }
            },
            {
              "name": "ids",
              "class": "Array"
            },
            {
              "name": "allIds",
              "class": "Array"
            },
            {
              "name": "localField",
              "class": "Set"
            },
            {
              "name": "foreignField",
              "class": "Set"
            },
            {
              "name": "justOne",
              "class": "Boolean"
            },
            {
              "name": "isVirtual",
              "class": "Boolean"
            },
            {
              "name": "virtual",
              "class": "object"
            },
            {
              "name": "count",
              "class": "Boolean"
            }
          ],
          "value": "{\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'Merchant',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  options: {\n    model: [Function],\n    _docs: [Object],\n    path: 'merchant',\n    populate: [Array],\n    _queryProjection: [Object],\n    isVirtual: false,\n    virtual: null\n  },\n  match: null,\n  docs: [ [Object] ],\n  ids: [ null ],\n  allIds: [ null ],\n  localField: Set(1) { 'merchant' },\n  foreignField: Set(1) { '_id' },\n  justOne: true,\n  isVirtual: false,\n  virtual: null,\n  count: false,\n  [Symbol(mongoose.PopulateOptions#Model)]: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'Merchant',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  }\n}",
          "object_id": 2040,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 497,
      "parent_id": 496,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "model",
            "class": "Function"
          },
          {
            "name": "_docs",
            "class": "Object",
            "properties": [
              {
                "name": "669698d2424c6d0014cc559d",
                "class": "object"
              }
            ]
          },
          {
            "name": "path",
            "class": "String"
          },
          {
            "name": "populate",
            "class": "Array",
            "items": {
              "class": "PopulateOptions"
            }
          },
          {
            "name": "_queryProjection",
            "class": "Object",
            "properties": [
              {
                "name": "password",
                "class": "Number"
              }
            ]
          },
          {
            "name": "isVirtual",
            "class": "Boolean"
          },
          {
            "name": "virtual",
            "class": "object"
          }
        ],
        "value": "{\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'Merchant',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  _docs: { '669698d2424c6d0014cc559d': null },\n  path: 'merchant',\n  populate: [ [PopulateOptions] ],\n  _queryProjection: { password: 0 },\n  isVirtual: false,\n  virtual: null\n}",
        "object_id": 2041
      },
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "call",
      "id": 498,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "model",
              "class": "Function"
            },
            {
              "name": "_docs",
              "class": "Object",
              "properties": [
                {
                  "name": "669698d2424c6d0014cc559d",
                  "class": "object"
                }
              ]
            },
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "populate",
              "class": "Array",
              "items": {
                "class": "PopulateOptions"
              }
            },
            {
              "name": "_queryProjection",
              "class": "Object",
              "properties": [
                {
                  "name": "password",
                  "class": "Number"
                }
              ]
            },
            {
              "name": "isVirtual",
              "class": "Boolean"
            },
            {
              "name": "virtual",
              "class": "object"
            }
          ],
          "value": "{\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'Merchant',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  _docs: { '669698d2424c6d0014cc559d': null },\n  path: 'merchant',\n  populate: [ [PopulateOptions] ],\n  _queryProjection: { password: 0 },\n  isVirtual: false,\n  virtual: null\n}",
          "object_id": 2041,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 499,
      "parent_id": 498,
      "elapsed": 0.0000012920063454657793
    },
    {
      "event": "call",
      "id": 500,
      "thread_id": 0,
      "method_id": "_checkContext",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "ctx"
        },
        {
          "class": "String",
          "value": "'populate'",
          "name": "fnName"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 1158
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 501,
      "parent_id": 500,
      "elapsed": 0.0000011250085663050413
    },
    {
      "event": "call",
      "id": 502,
      "thread_id": 0,
      "method_id": "makeSingles",
      "static": true,
      "parameters": [
        {
          "class": "Array",
          "items": {
            "class": "Object",
            "properties": [
              {
                "name": "_docs",
                "class": "Object",
                "properties": []
              },
              {
                "name": "path",
                "class": "String"
              },
              {
                "name": "model",
                "class": "String"
              }
            ]
          },
          "value": "[ { _docs: {}, path: 'merchant.brand', model: 'Brand' } ]",
          "size": 1,
          "object_id": 2042,
          "name": "arr"
        }
      ],
      "defined_class": "utils",
      "path": "server/node_modules/mongoose/lib/utils.js",
      "lineno": 515
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 503,
      "parent_id": 502,
      "return_value": {
        "class": "Array",
        "items": {
          "class": "Object",
          "properties": [
            {
              "name": "_docs",
              "class": "Object",
              "properties": []
            },
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "model",
              "class": "String"
            }
          ]
        },
        "value": "[ { _docs: {}, path: 'merchant.brand', model: 'Brand' } ]",
        "size": 1,
        "object_id": 2043
      },
      "elapsed": 0.00006454199319705367
    },
    {
      "event": "call",
      "id": 504,
      "thread_id": 0,
      "method_id": "_populateObj",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "_docs",
              "class": "Object",
              "properties": []
            },
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "model",
              "class": "String"
            }
          ],
          "value": "{ _docs: {}, path: 'merchant.brand', model: 'Brand' }",
          "object_id": 2044,
          "name": "obj"
        }
      ],
      "defined_class": "utils",
      "path": "server/node_modules/mongoose/lib/utils.js",
      "lineno": 534
    },
    {
      "event": "call",
      "id": 505,
      "thread_id": 0,
      "method_id": "constructor",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "_docs",
              "class": "Object",
              "properties": []
            },
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "model",
              "class": "String"
            }
          ],
          "value": "{ _docs: {}, path: 'merchant.brand', model: 'Brand' }",
          "object_id": 2045,
          "name": "obj"
        }
      ],
      "defined_class": "PopulateOptions",
      "path": "server/node_modules/mongoose/lib/options/PopulateOptions.js",
      "lineno": 6
    },
    {
      "event": "call",
      "id": 506,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "_docs",
              "class": "Object",
              "properties": []
            },
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "model",
              "class": "String"
            }
          ],
          "value": "{ _docs: {}, path: 'merchant.brand', model: 'Brand' }",
          "object_id": 2045,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 507,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "_docs",
              "class": "Object",
              "properties": []
            },
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "model",
              "class": "String"
            }
          ],
          "value": "{ _docs: {}, path: 'merchant.brand', model: 'Brand' }",
          "object_id": 2045,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "call",
      "id": 508,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2046,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 509,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2046,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 510,
      "parent_id": 509,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 2047
      },
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 511,
      "parent_id": 508,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 2047
      },
      "elapsed": 0.000035667006159201264
    },
    {
      "event": "call",
      "id": 512,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 513,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 514,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 515,
      "parent_id": 514,
      "elapsed": 7.500057108700275e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 516,
      "parent_id": 513,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.000024874985683709383
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 517,
      "parent_id": 512,
      "return_value": {
        "class": "String",
        "value": "'merchant.brand'"
      },
      "elapsed": 0.00006654098979197443
    },
    {
      "event": "call",
      "id": 518,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'Brand'",
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 519,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'Brand'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 520,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'Brand'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 521,
      "parent_id": 520,
      "elapsed": 5.420006345957518e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 522,
      "parent_id": 519,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.00002158299321308732
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 523,
      "parent_id": 518,
      "return_value": {
        "class": "String",
        "value": "'Brand'"
      },
      "elapsed": 0.00004595797508955002
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 524,
      "parent_id": 507,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "_docs",
            "class": "Object",
            "properties": []
          },
          {
            "name": "path",
            "class": "String"
          },
          {
            "name": "model",
            "class": "String"
          }
        ],
        "value": "{ _docs: {}, path: 'merchant.brand', model: 'Brand' }",
        "object_id": 2048
      },
      "elapsed": 0.00023008399875834584
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 525,
      "parent_id": 506,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "_docs",
            "class": "Object",
            "properties": []
          },
          {
            "name": "path",
            "class": "String"
          },
          {
            "name": "model",
            "class": "String"
          }
        ],
        "value": "{ _docs: {}, path: 'merchant.brand', model: 'Brand' }",
        "object_id": 2048
      },
      "elapsed": 0.0002787080011330545
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 526,
      "parent_id": 505,
      "elapsed": 0.00031687499722465873
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 527,
      "parent_id": 504,
      "return_value": {
        "class": "Array",
        "items": {
          "class": "PopulateOptions"
        },
        "value": "[\n  PopulateOptions { _docs: {}, path: 'merchant.brand', model: 'Brand' }\n]",
        "size": 1,
        "object_id": 2049
      },
      "elapsed": 0.00035841698991134763
    },
    {
      "event": "call",
      "id": 528,
      "thread_id": 0,
      "method_id": "_populate",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "model"
        },
        {
          "class": "Array",
          "items": {
            "class": "Object",
            "properties": [
              {
                "name": "_id",
                "class": "ObjectID"
              },
              {
                "name": "merchant",
                "class": "object"
              },
              {
                "name": "provider",
                "class": "String"
              },
              {
                "name": "role",
                "class": "String"
              },
              {
                "name": "email",
                "class": "String"
              },
              {
                "name": "firstName",
                "class": "String"
              },
              {
                "name": "lastName",
                "class": "String"
              },
              {
                "name": "created",
                "class": "Date"
              },
              {
                "name": "__v",
                "class": "Number"
              }
            ]
          },
          "value": "[\n  {\n    _id: [ObjectID],\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  }\n]",
          "size": 1,
          "object_id": 2050,
          "name": "docs"
        },
        {
          "class": "Array",
          "items": {
            "class": "PopulateOptions"
          },
          "value": "[\n  PopulateOptions { _docs: {}, path: 'merchant.brand', model: 'Brand' }\n]",
          "size": 1,
          "object_id": 2051,
          "name": "paths"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2052,
          "name": "cache"
        },
        {
          "class": "Function",
          "value": "[Function (anonymous)]",
          "name": "callback"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 4293
    },
    {
      "event": "call",
      "id": 529,
      "thread_id": 0,
      "method_id": "populate",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "model"
        },
        {
          "class": "Array",
          "items": {
            "class": "Object",
            "properties": [
              {
                "name": "_id",
                "class": "ObjectID"
              },
              {
                "name": "merchant",
                "class": "object"
              },
              {
                "name": "provider",
                "class": "String"
              },
              {
                "name": "role",
                "class": "String"
              },
              {
                "name": "email",
                "class": "String"
              },
              {
                "name": "firstName",
                "class": "String"
              },
              {
                "name": "lastName",
                "class": "String"
              },
              {
                "name": "created",
                "class": "Date"
              },
              {
                "name": "__v",
                "class": "Number"
              }
            ]
          },
          "value": "[\n  {\n    _id: [ObjectID],\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  }\n]",
          "size": 1,
          "object_id": 2050,
          "name": "docs"
        },
        {
          "class": "PopulateOptions",
          "value": "PopulateOptions { _docs: {}, path: 'merchant.brand', model: 'Brand' }",
          "object_id": 2053,
          "name": "options"
        },
        {
          "class": "Function",
          "value": "[Function: next]",
          "name": "callback"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 4322
    },
    {
      "event": "call",
      "id": 530,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 531,
      "parent_id": 530,
      "return_value": {
        "class": "String",
        "value": "'merchant.brand'"
      },
      "elapsed": 0.0000010830117389559746
    },
    {
      "event": "call",
      "id": 532,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 533,
      "parent_id": 532,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 0.000002374988980591297
    },
    {
      "event": "call",
      "id": 534,
      "thread_id": 0,
      "method_id": "getMapPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 834
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 535,
      "parent_id": 534,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 0.000002542015863582492
    },
    {
      "event": "call",
      "id": 536,
      "thread_id": 0,
      "method_id": "search",
      "static": true,
      "parameters": [
        {
          "class": "Array",
          "items": {
            "class": "String"
          },
          "value": "[ 'merchant', 'brand' ]",
          "size": 2,
          "object_id": 2054,
          "name": "parts"
        },
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "subdoc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2055,
          "name": "nestedPath"
        }
      ],
      "defined_class": "getSchemaTypes",
      "path": "server/node_modules/mongoose/lib/helpers/populate/getSchemaTypes.js",
      "lineno": 28
    },
    {
      "event": "call",
      "id": 537,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 538,
      "parent_id": 537,
      "return_value": {
        "class": "String",
        "value": "'merchant.brand'"
      },
      "elapsed": 5.420006345957518e-7
    },
    {
      "event": "call",
      "id": 539,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 540,
      "parent_id": 539,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 9.579816833138466e-7
    },
    {
      "event": "call",
      "id": 541,
      "thread_id": 0,
      "method_id": "getMapPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 834
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 542,
      "parent_id": 541,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 0.000001500011421740055
    },
    {
      "event": "call",
      "id": 543,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 544,
      "parent_id": 543,
      "return_value": {
        "class": "String",
        "value": "'merchant'"
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "call",
      "id": 545,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 546,
      "parent_id": 545,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 29
      },
      "elapsed": 6.659829523414373e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 547,
      "parent_id": 536,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 29
      },
      "elapsed": 0.00040012499084696174
    },
    {
      "event": "call",
      "id": 548,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "ObjectId",
          "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 29,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 549,
      "parent_id": 548,
      "return_value": {
        "class": "SchemaObjectIdOptions",
        "value": "SchemaObjectIdOptions {\n  type: [Function: ObjectId] {\n    schemaName: 'ObjectId',\n    defaultOptions: {},\n    get: [Function (anonymous)],\n    set: [Function: set],\n    _checkRequired: [Function (anonymous)],\n    _cast: [Function: castObjectId],\n    cast: [Function: cast],\n    checkRequired: [Function (anonymous)]\n  },\n  ref: 'Merchant',\n  default: null\n}",
        "object_id": 1930
      },
      "elapsed": 4.580069798976183e-7
    },
    {
      "event": "call",
      "id": 550,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "SchemaObjectIdOptions",
          "value": "SchemaObjectIdOptions {\n  type: [Function: ObjectId] {\n    schemaName: 'ObjectId',\n    defaultOptions: {},\n    get: [Function (anonymous)],\n    set: [Function: set],\n    _checkRequired: [Function (anonymous)],\n    _cast: [Function: castObjectId],\n    cast: [Function: cast],\n    checkRequired: [Function (anonymous)]\n  },\n  ref: 'Merchant',\n  default: null\n}",
          "object_id": 1930,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'refPath'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 551,
      "parent_id": 550,
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "call",
      "id": 552,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 553,
      "parent_id": 552,
      "return_value": {
        "class": "String",
        "value": "'merchant.brand'"
      },
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "call",
      "id": 554,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 555,
      "parent_id": 554,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 7.920025382190943e-7
    },
    {
      "event": "call",
      "id": 556,
      "thread_id": 0,
      "method_id": "getMapPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 834
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 557,
      "parent_id": 556,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 0.000003749999450519681
    },
    {
      "event": "call",
      "id": 558,
      "thread_id": 0,
      "method_id": "search",
      "static": true,
      "parameters": [
        {
          "class": "Array",
          "items": {
            "class": "String"
          },
          "value": "[ 'merchant', 'brand' ]",
          "size": 2,
          "object_id": 2056,
          "name": "parts"
        },
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            },
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            },
            {
              "name": "email",
              "class": "String"
            },
            {
              "name": "firstName",
              "class": "String"
            },
            {
              "name": "lastName",
              "class": "String"
            },
            {
              "name": "created",
              "class": "Date"
            },
            {
              "name": "__v",
              "class": "Number"
            }
          ],
          "value": "{\n  _id: 669698d2424c6d0014cc559d,\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
          "object_id": 2030,
          "name": "subdoc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2057,
          "name": "nestedPath"
        }
      ],
      "defined_class": "getSchemaTypes",
      "path": "server/node_modules/mongoose/lib/helpers/populate/getSchemaTypes.js",
      "lineno": 28
    },
    {
      "event": "call",
      "id": 559,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 560,
      "parent_id": 559,
      "return_value": {
        "class": "String",
        "value": "'merchant.brand'"
      },
      "elapsed": 0.0000010830117389559746
    },
    {
      "event": "call",
      "id": 561,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 562,
      "parent_id": 561,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 0.0000016250123735517263
    },
    {
      "event": "call",
      "id": 563,
      "thread_id": 0,
      "method_id": "getMapPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 834
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 564,
      "parent_id": 563,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 0.0000018329883459955454
    },
    {
      "event": "call",
      "id": 565,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 566,
      "parent_id": 565,
      "return_value": {
        "class": "String",
        "value": "'merchant'"
      },
      "elapsed": 4.1601015254855156e-7
    },
    {
      "event": "call",
      "id": 567,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 568,
      "parent_id": 567,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 29
      },
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "call",
      "id": 569,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            },
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            },
            {
              "name": "email",
              "class": "String"
            },
            {
              "name": "firstName",
              "class": "String"
            },
            {
              "name": "lastName",
              "class": "String"
            },
            {
              "name": "created",
              "class": "Date"
            },
            {
              "name": "__v",
              "class": "Number"
            }
          ],
          "value": "{\n  _id: 669698d2424c6d0014cc559d,\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
          "object_id": 2030,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 570,
      "parent_id": 569,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 9.159848559647799e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 571,
      "parent_id": 558,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 29
      },
      "elapsed": 0.0004688749904744327
    },
    {
      "event": "call",
      "id": 572,
      "thread_id": 0,
      "method_id": "_getModelNames",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            },
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            },
            {
              "name": "email",
              "class": "String"
            },
            {
              "name": "firstName",
              "class": "String"
            },
            {
              "name": "lastName",
              "class": "String"
            },
            {
              "name": "created",
              "class": "Date"
            },
            {
              "name": "__v",
              "class": "Number"
            }
          ],
          "value": "{\n  _id: 669698d2424c6d0014cc559d,\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
          "object_id": 2030,
          "name": "doc"
        },
        {
          "class": "ObjectId",
          "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 29,
          "name": "schema"
        }
      ],
      "defined_class": "getModelsMapForPopulate",
      "path": "server/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js",
      "lineno": 330
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 573,
      "parent_id": 572,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "modelNames",
            "class": "Array",
            "items": {
              "class": "String"
            }
          },
          {
            "name": "isRefPath",
            "class": "Boolean"
          },
          {
            "name": "refPath",
            "class": "undefined"
          }
        ],
        "value": "{ modelNames: [ 'Brand' ], isRefPath: false, refPath: undefined }",
        "object_id": 2058
      },
      "elapsed": 0.000006459013093262911
    },
    {
      "event": "call",
      "id": 574,
      "thread_id": 0,
      "method_id": "getVirtual",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "name"
        }
      ],
      "defined_class": "getVirtual",
      "path": "server/node_modules/mongoose/lib/helpers/populate/getVirtual.js",
      "lineno": 9
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 575,
      "parent_id": 574,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 0.0000040000013541430235
    },
    {
      "event": "call",
      "id": 576,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 577,
      "parent_id": 576,
      "return_value": {
        "class": "String",
        "value": "'merchant.brand'"
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "call",
      "id": 578,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 579,
      "parent_id": 578,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "call",
      "id": 580,
      "thread_id": 0,
      "method_id": "getMapPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 834
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 581,
      "parent_id": 580,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 0.000001541979145258665
    },
    {
      "event": "call",
      "id": 582,
      "thread_id": 0,
      "method_id": "search",
      "static": true,
      "parameters": [
        {
          "class": "Array",
          "items": {
            "class": "String"
          },
          "value": "[ 'merchant', 'brand' ]",
          "size": 2,
          "object_id": 2059,
          "name": "parts"
        },
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 2097
    },
    {
      "event": "call",
      "id": 583,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 584,
      "parent_id": 583,
      "return_value": {
        "class": "String",
        "value": "'merchant.brand'"
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "call",
      "id": 585,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 586,
      "parent_id": 585,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 6.659829523414373e-7
    },
    {
      "event": "call",
      "id": 587,
      "thread_id": 0,
      "method_id": "getMapPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant.brand'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 834
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 588,
      "parent_id": 587,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 0.0000012500095181167126
    },
    {
      "event": "call",
      "id": 589,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 590,
      "parent_id": 589,
      "return_value": {
        "class": "String",
        "value": "'merchant'"
      },
      "elapsed": 3.329769242554903e-7
    },
    {
      "event": "call",
      "id": 591,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 592,
      "parent_id": 591,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 29
      },
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 593,
      "parent_id": 582,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "schema",
            "class": "ObjectId"
          },
          {
            "name": "pathType",
            "class": "String"
          }
        ],
        "value": "{\n  schema: ObjectId {\n    path: 'merchant',\n    instance: 'ObjectID',\n    validators: [],\n    getters: [],\n    setters: [],\n    options: [SchemaObjectIdOptions],\n    _index: null,\n    defaultValue: null,\n    [Symbol(mongoose#schemaType)]: true\n  },\n  pathType: 'real'\n}",
        "object_id": 2060
      },
      "elapsed": 0.00038904199027456343
    },
    {
      "event": "call",
      "id": 594,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "PopulateOptions",
          "value": "PopulateOptions {\n  _docs: {},\n  path: 'merchant.brand',\n  model: 'Brand',\n  isVirtual: false,\n  virtual: null\n}",
          "object_id": 2053,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 595,
      "parent_id": 594,
      "elapsed": 4.1601015254855156e-7
    },
    {
      "event": "call",
      "id": 596,
      "thread_id": 0,
      "method_id": "convertTo_id",
      "static": true,
      "parameters": [
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "val"
        },
        {
          "class": "ObjectId",
          "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
          "object_id": 29,
          "name": "schema"
        }
      ],
      "defined_class": "getModelsMapForPopulate",
      "path": "server/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js",
      "lineno": 464
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 597,
      "parent_id": 596,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 0.000001167005393654108
    },
    {
      "event": "call",
      "id": 598,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "PopulateOptions",
          "value": "PopulateOptions {\n  _docs: { '669698d2424c6d0014cc559d': null },\n  path: 'merchant.brand',\n  model: 'Brand',\n  isVirtual: false,\n  virtual: null\n}",
          "object_id": 2053,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'match'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 599,
      "parent_id": 598,
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "call",
      "id": 600,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "PopulateOptions",
          "value": "PopulateOptions {\n  _docs: { '669698d2424c6d0014cc559d': null },\n  path: 'merchant.brand',\n  model: 'Brand',\n  isVirtual: false,\n  virtual: null\n}",
          "object_id": 2053,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'virtual'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 601,
      "parent_id": 600,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "call",
      "id": 602,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "PopulateOptions",
          "value": "PopulateOptions {\n  _docs: { '669698d2424c6d0014cc559d': null },\n  path: 'merchant.brand',\n  model: 'Brand',\n  isVirtual: false,\n  virtual: null\n}",
          "object_id": 2053,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'virtual'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 603,
      "parent_id": 602,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 2.910092007368803e-7
    },
    {
      "event": "call",
      "id": 604,
      "thread_id": 0,
      "method_id": "_formatMatch",
      "static": true,
      "parameters": [
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "match"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 4649
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 605,
      "parent_id": 604,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 2061
      },
      "elapsed": 0.0000017079873941838741
    },
    {
      "event": "call",
      "id": 606,
      "thread_id": 0,
      "method_id": "flatten",
      "static": true,
      "parameters": [
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "item"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 4343
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 607,
      "parent_id": 606,
      "return_value": {
        "class": "Boolean",
        "value": "true"
      },
      "elapsed": 2.499727997928858e-7
    },
    {
      "event": "call",
      "id": 608,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "model",
              "class": "Function"
            },
            {
              "name": "options",
              "class": "Object",
              "properties": [
                {
                  "name": "model",
                  "class": "Function"
                },
                {
                  "name": "_docs",
                  "class": "Object",
                  "properties": [
                    {
                      "name": "669698d2424c6d0014cc559d",
                      "class": "object"
                    }
                  ]
                },
                {
                  "name": "path",
                  "class": "String"
                },
                {
                  "name": "isVirtual",
                  "class": "Boolean"
                },
                {
                  "name": "virtual",
                  "class": "object"
                }
              ]
            },
            {
              "name": "match",
              "class": "object"
            },
            {
              "name": "docs",
              "class": "Array",
              "items": {
                "class": "Object",
                "properties": [
                  {
                    "name": "_id",
                    "class": "ObjectID"
                  },
                  {
                    "name": "merchant",
                    "class": "object"
                  },
                  {
                    "name": "provider",
                    "class": "String"
                  },
                  {
                    "name": "role",
                    "class": "String"
                  },
                  {
                    "name": "email",
                    "class": "String"
                  },
                  {
                    "name": "firstName",
                    "class": "String"
                  },
                  {
                    "name": "lastName",
                    "class": "String"
                  },
                  {
                    "name": "created",
                    "class": "Date"
                  },
                  {
                    "name": "__v",
                    "class": "Number"
                  }
                ]
              }
            },
            {
              "name": "ids",
              "class": "Array"
            },
            {
              "name": "allIds",
              "class": "Array"
            },
            {
              "name": "localField",
              "class": "Set"
            },
            {
              "name": "foreignField",
              "class": "Set"
            },
            {
              "name": "justOne",
              "class": "Boolean"
            },
            {
              "name": "isVirtual",
              "class": "Boolean"
            },
            {
              "name": "virtual",
              "class": "object"
            },
            {
              "name": "count",
              "class": "Boolean"
            }
          ],
          "value": "{\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'Brand',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  options: {\n    model: [Function],\n    _docs: [Object],\n    path: 'merchant.brand',\n    isVirtual: false,\n    virtual: null\n  },\n  match: null,\n  docs: [ [Object] ],\n  ids: [ null ],\n  allIds: [ null ],\n  localField: Set(1) { 'merchant.brand' },\n  foreignField: Set(1) { '_id' },\n  justOne: true,\n  isVirtual: false,\n  virtual: null,\n  count: false,\n  [Symbol(mongoose.PopulateOptions#Model)]: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'Brand',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  }\n}",
          "object_id": 2062,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 609,
      "parent_id": 608,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "model",
            "class": "Function"
          },
          {
            "name": "_docs",
            "class": "Object",
            "properties": [
              {
                "name": "669698d2424c6d0014cc559d",
                "class": "object"
              }
            ]
          },
          {
            "name": "path",
            "class": "String"
          },
          {
            "name": "isVirtual",
            "class": "Boolean"
          },
          {
            "name": "virtual",
            "class": "object"
          }
        ],
        "value": "{\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'Brand',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  _docs: { '669698d2424c6d0014cc559d': null },\n  path: 'merchant.brand',\n  isVirtual: false,\n  virtual: null\n}",
        "object_id": 2063
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "call",
      "id": 610,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "model",
              "class": "Function"
            },
            {
              "name": "_docs",
              "class": "Object",
              "properties": [
                {
                  "name": "669698d2424c6d0014cc559d",
                  "class": "object"
                }
              ]
            },
            {
              "name": "path",
              "class": "String"
            },
            {
              "name": "isVirtual",
              "class": "Boolean"
            },
            {
              "name": "virtual",
              "class": "object"
            }
          ],
          "value": "{\n  model: [Function: model] {\n    hooks: [Kareem],\n    base: [Mongoose],\n    modelName: 'Brand',\n    model: [Function: model],\n    db: [NativeConnection],\n    discriminators: undefined,\n    events: [EventEmitter],\n    '$appliedMethods': true,\n    '$appliedHooks': true,\n    _middleware: [Kareem],\n    '$__insertMany': [Function (anonymous)],\n    schema: [Schema],\n    collection: [NativeCollection],\n    Query: [Function],\n    '$init': [Promise],\n    '$caught': true,\n    [Symbol(mongoose#Model)]: true\n  },\n  _docs: { '669698d2424c6d0014cc559d': null },\n  path: 'merchant.brand',\n  isVirtual: false,\n  virtual: null\n}",
          "object_id": 2063,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 611,
      "parent_id": 610,
      "elapsed": 9.170034900307655e-7
    },
    {
      "event": "call",
      "id": 612,
      "thread_id": 0,
      "method_id": "next",
      "static": true,
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 4305
    },
    {
      "event": "call",
      "id": 613,
      "thread_id": 0,
      "method_id": "next",
      "static": true,
      "parameters": [
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "err"
        },
        {
          "class": "Array",
          "items": {
            "class": "Object",
            "properties": [
              {
                "name": "_id",
                "class": "ObjectID"
              },
              {
                "name": "merchant",
                "class": "object"
              },
              {
                "name": "provider",
                "class": "String"
              },
              {
                "name": "role",
                "class": "String"
              },
              {
                "name": "email",
                "class": "String"
              },
              {
                "name": "firstName",
                "class": "String"
              },
              {
                "name": "lastName",
                "class": "String"
              },
              {
                "name": "created",
                "class": "Date"
              },
              {
                "name": "__v",
                "class": "Number"
              }
            ]
          },
          "value": "[\n  {\n    _id: [ObjectID],\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  }\n]",
          "size": 1,
          "object_id": 2050
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 4305
    },
    {
      "event": "call",
      "id": 614,
      "thread_id": 0,
      "method_id": "completeOne",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "model"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            },
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            },
            {
              "name": "email",
              "class": "String"
            },
            {
              "name": "firstName",
              "class": "String"
            },
            {
              "name": "lastName",
              "class": "String"
            },
            {
              "name": "created",
              "class": "Date"
            },
            {
              "name": "__v",
              "class": "Number"
            }
          ],
          "value": "{\n  _id: 669698d2424c6d0014cc559d,\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
          "object_id": 2030,
          "name": "doc"
        },
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "res"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2023,
          "name": "options"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "password",
              "class": "Number"
            }
          ],
          "value": "{ password: 0 }",
          "object_id": 2031,
          "name": "fields"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "password",
              "class": "Number"
            }
          ],
          "value": "{ password: 0 }",
          "object_id": 2064,
          "name": "userProvidedFields"
        },
        {
          "class": "Array",
          "items": {
            "class": "PopulateOptions"
          },
          "value": "[\n  PopulateOptions {\n    _docs: [Object],\n    path: 'merchant',\n    model: 'Merchant',\n    populate: [Array],\n    _queryProjection: [Object],\n    isVirtual: false,\n    virtual: null,\n    [Symbol(mongoose.PopulateOptions#Model)]: [Function]\n  }\n]",
          "size": 1,
          "object_id": 2033,
          "name": "pop"
        },
        {
          "class": "Function",
          "value": "[Function (anonymous)]",
          "name": "callback"
        }
      ],
      "defined_class": "query",
      "path": "server/node_modules/mongoose/lib/query.js",
      "lineno": 2842
    },
    {
      "event": "call",
      "id": 615,
      "thread_id": 0,
      "method_id": "Model",
      "static": false,
      "receiver": {
        "class": "model",
        "value": "model {}",
        "object_id": 2065
      },
      "parameters": [
        {
          "class": "undefined",
          "value": "undefined",
          "name": "doc"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "password",
              "class": "Number"
            }
          ],
          "value": "{ password: 0 }",
          "object_id": 2031,
          "name": "fields"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "skipId",
              "class": "Boolean"
            },
            {
              "name": "isNew",
              "class": "Boolean"
            },
            {
              "name": "willInit",
              "class": "Boolean"
            }
          ],
          "value": "{ skipId: true, isNew: false, willInit: true }",
          "object_id": 2066,
          "name": "skipId"
        }
      ],
      "defined_class": "model",
      "path": "server/node_modules/mongoose/lib/model.js",
      "lineno": 100
    },
    {
      "event": "call",
      "id": 616,
      "thread_id": 0,
      "method_id": "Document",
      "static": false,
      "receiver": {
        "class": "model",
        "value": "model {}",
        "object_id": 2065
      },
      "parameters": [
        {
          "class": "undefined",
          "value": "undefined",
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "password",
              "class": "Number"
            }
          ],
          "value": "{ password: 0 }",
          "object_id": 2031,
          "name": "fields"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "skipId",
              "class": "Boolean"
            },
            {
              "name": "isNew",
              "class": "Boolean"
            },
            {
              "name": "willInit",
              "class": "Boolean"
            }
          ],
          "value": "{ skipId: true, isNew: false, willInit: true }",
          "object_id": 2066,
          "name": "skipId"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 65
    },
    {
      "event": "call",
      "id": 617,
      "thread_id": 0,
      "method_id": "InternalCache",
      "static": false,
      "receiver": {
        "class": "InternalCache",
        "value": "InternalCache {}",
        "object_id": 2067
      },
      "defined_class": "internal",
      "path": "server/node_modules/mongoose/lib/internal.js",
      "lineno": 12
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 618,
      "parent_id": 617,
      "elapsed": 0.000004542001988738775
    },
    {
      "event": "call",
      "id": 619,
      "thread_id": 0,
      "method_id": "$__applyDefaults",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: undefined,\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {}\n}",
          "object_id": 2065,
          "name": "doc"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "password",
              "class": "Number"
            }
          ],
          "value": "{ password: 0 }",
          "object_id": 2031,
          "name": "fields"
        },
        {
          "class": "Boolean",
          "value": "true",
          "name": "skipId"
        },
        {
          "class": "Boolean",
          "value": "true",
          "name": "exclude"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2068,
          "name": "hasIncludedChildren"
        },
        {
          "class": "Boolean",
          "value": "true",
          "name": "isBeforeSetters"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "isNew",
              "class": "Boolean"
            }
          ],
          "value": "{ isNew: false }",
          "object_id": 2069,
          "name": "pathsToSkip"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 325
    },
    {
      "event": "call",
      "id": 620,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 1891,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 621,
      "thread_id": 0,
      "method_id": "cloneArray",
      "static": true,
      "parameters": [
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 1891,
          "name": "arr"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 129
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 622,
      "parent_id": 621,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2070
      },
      "elapsed": 8.33999365568161e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 623,
      "parent_id": 620,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2070
      },
      "elapsed": 0.000035500008380040526
    },
    {
      "event": "call",
      "id": 624,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 1893,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 625,
      "thread_id": 0,
      "method_id": "cloneArray",
      "static": true,
      "parameters": [
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 1893,
          "name": "arr"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 129
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 626,
      "parent_id": 625,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2071
      },
      "elapsed": 0.0000010829826351255178
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 627,
      "parent_id": 624,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2071
      },
      "elapsed": 0.00005050000618211925
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 628,
      "parent_id": 619,
      "elapsed": 0.0006837910041213036
    },
    {
      "event": "call",
      "id": 629,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 630,
      "parent_id": 629,
      "return_value": {
        "class": "String",
        "value": "'_id'"
      },
      "elapsed": 0.0000014999823179095984
    },
    {
      "event": "call",
      "id": 631,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 632,
      "parent_id": 631,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 72
      },
      "elapsed": 0.00000100000761449337
    },
    {
      "event": "call",
      "id": 633,
      "thread_id": 0,
      "method_id": "applyQueue",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: undefined,\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: { merchant: null, provider: 'Email', role: 'ROLE MEMBER' },\n  '$locals': {},\n  '$op': null\n}",
          "object_id": 2065,
          "name": "doc"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2914
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 634,
      "parent_id": 633,
      "elapsed": 0.0000017079873941838741
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 635,
      "parent_id": 616,
      "elapsed": 0.001080708985682577
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 636,
      "parent_id": 615,
      "elapsed": 0.001121750014135614
    },
    {
      "event": "call",
      "id": 637,
      "thread_id": 0,
      "method_id": "init",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: undefined,\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: { merchant: null, provider: 'Email', role: 'ROLE MEMBER' },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "self"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "_id",
              "class": "ObjectID"
            },
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            },
            {
              "name": "email",
              "class": "String"
            },
            {
              "name": "firstName",
              "class": "String"
            },
            {
              "name": "lastName",
              "class": "String"
            },
            {
              "name": "created",
              "class": "Date"
            },
            {
              "name": "__v",
              "class": "Number"
            }
          ],
          "value": "{\n  _id: 669698d2424c6d0014cc559d,\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
          "object_id": 2030,
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            }
          ],
          "value": "{ merchant: null, provider: 'Email', role: 'ROLE MEMBER' }",
          "object_id": 2072,
          "name": "doc"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "populated",
              "class": "Array",
              "items": {
                "class": "PopulateOptions"
              }
            }
          ],
          "value": "{ populated: [ [PopulateOptions] ] }",
          "object_id": 2073,
          "name": "opts"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 607
    },
    {
      "event": "call",
      "id": 638,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 639,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 640,
      "parent_id": 639,
      "return_value": {
        "class": "String",
        "value": "'_id'"
      },
      "elapsed": 4.5902561396360397e-7
    },
    {
      "event": "call",
      "id": 641,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 642,
      "parent_id": 641,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 72
      },
      "elapsed": 5.420006345957518e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 643,
      "parent_id": 638,
      "elapsed": 0.00016333299572579563
    },
    {
      "event": "call",
      "id": 644,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "1",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 645,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 646,
      "parent_id": 645,
      "return_value": {
        "class": "String",
        "value": "'merchant'"
      },
      "elapsed": 4.580069798976183e-7
    },
    {
      "event": "call",
      "id": 647,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 648,
      "parent_id": 647,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: 'merchant',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaObjectIdOptions {\n    type: [Function],\n    ref: 'Merchant',\n    default: null\n  },\n  _index: null,\n  defaultValue: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 29
      },
      "elapsed": 4.999747034162283e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 649,
      "parent_id": 644,
      "elapsed": 0.0001435830199625343
    },
    {
      "event": "call",
      "id": 650,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "2",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 651,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'provider'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 652,
      "parent_id": 651,
      "return_value": {
        "class": "String",
        "value": "'provider'"
      },
      "elapsed": 4.1601015254855156e-7
    },
    {
      "event": "call",
      "id": 653,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'provider'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'provider'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 654,
      "parent_id": 653,
      "return_value": {
        "class": "SchemaString",
        "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'provider',\n  instance: 'String',\n  validators: [ [Object] ],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions {\n    type: [Function: String],\n    required: true,\n    default: 'Email'\n  },\n  _index: null,\n  isRequired: true,\n  requiredValidator: [Function (anonymous)],\n  originalRequiredValue: true,\n  defaultValue: 'Email',\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 33
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 655,
      "parent_id": 650,
      "elapsed": 0.00014770799316465855
    },
    {
      "event": "call",
      "id": 656,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "3",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 657,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'role'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 658,
      "parent_id": 657,
      "return_value": {
        "class": "String",
        "value": "'role'"
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "call",
      "id": 659,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'role'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'role'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 660,
      "parent_id": 659,
      "return_value": {
        "class": "SchemaString",
        "value": "SchemaString {\n  enumValues: [ 'ROLE ADMIN', 'ROLE MEMBER', 'ROLE MERCHANT' ],\n  regExp: null,\n  path: 'role',\n  instance: 'String',\n  validators: [ [Object] ],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions {\n    type: [Function: String],\n    default: 'ROLE MEMBER',\n    enum: [Array]\n  },\n  _index: null,\n  defaultValue: 'ROLE MEMBER',\n  enumValidator: [Function (anonymous)],\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 51
      },
      "elapsed": 4.5899651013314724e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 661,
      "parent_id": 656,
      "elapsed": 0.00014787499094381928
    },
    {
      "event": "call",
      "id": 662,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "4",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 663,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'email'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 664,
      "parent_id": 663,
      "return_value": {
        "class": "String",
        "value": "'email'"
      },
      "elapsed": 7.909839041531086e-7
    },
    {
      "event": "call",
      "id": 665,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'email'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'email'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 666,
      "parent_id": 665,
      "return_value": {
        "class": "SchemaString",
        "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'email',\n  instance: 'String',\n  validators: [ [Object] ],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions {\n    type: [Function: String],\n    required: [Function: required]\n  },\n  _index: null,\n  isRequired: true,\n  requiredValidator: [Function (anonymous)],\n  originalRequiredValue: [Function: required],\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 9
      },
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 667,
      "parent_id": 662,
      "elapsed": 0.0001514590112492442
    },
    {
      "event": "call",
      "id": 668,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "5",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 669,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'firstName'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 670,
      "parent_id": 669,
      "return_value": {
        "class": "String",
        "value": "'firstName'"
      },
      "elapsed": 3.3300602808594704e-7
    },
    {
      "event": "call",
      "id": 671,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'firstName'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'firstName'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 672,
      "parent_id": 671,
      "return_value": {
        "class": "SchemaString",
        "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'firstName',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 17
      },
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 673,
      "parent_id": 668,
      "elapsed": 0.00013554200995713472
    },
    {
      "event": "call",
      "id": 674,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "6",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 675,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'lastName'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 676,
      "parent_id": 675,
      "return_value": {
        "class": "String",
        "value": "'lastName'"
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "call",
      "id": 677,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'lastName'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'lastName'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 678,
      "parent_id": 677,
      "return_value": {
        "class": "SchemaString",
        "value": "SchemaString {\n  enumValues: [],\n  regExp: null,\n  path: 'lastName',\n  instance: 'String',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaStringOptions { type: [Function: String] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 21
      },
      "elapsed": 3.7500285543501377e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 679,
      "parent_id": 674,
      "elapsed": 0.00014237500727176666
    },
    {
      "event": "call",
      "id": 680,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "7",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 681,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'created'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 682,
      "parent_id": 681,
      "return_value": {
        "class": "String",
        "value": "'created'"
      },
      "elapsed": 3.3300602808594704e-7
    },
    {
      "event": "call",
      "id": 683,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'created'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'created'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 684,
      "parent_id": 683,
      "return_value": {
        "class": "SchemaDate",
        "value": "SchemaDate {\n  path: 'created',\n  instance: 'Date',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaDateOptions {\n    type: [Function: Date],\n    default: [Function: now]\n  },\n  _index: null,\n  defaultValue: [Function: now],\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 67
      },
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 685,
      "parent_id": 680,
      "elapsed": 0.00015437498223036528
    },
    {
      "event": "call",
      "id": 686,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "8",
          "name": "index"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 621
    },
    {
      "event": "call",
      "id": 687,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'__v'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 688,
      "parent_id": 687,
      "return_value": {
        "class": "String",
        "value": "'__v'"
      },
      "elapsed": 2.910092007368803e-7
    },
    {
      "event": "call",
      "id": 689,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'__v'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'__v'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 690,
      "parent_id": 689,
      "return_value": {
        "class": "SchemaNumber",
        "value": "SchemaNumber {\n  path: '__v',\n  instance: 'Number',\n  validators: [],\n  getters: [],\n  setters: [],\n  options: SchemaNumberOptions { type: [Function: Number] },\n  _index: null,\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 76
      },
      "elapsed": 9.160139597952366e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 691,
      "parent_id": 686,
      "elapsed": 0.00021029100753366947
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 692,
      "parent_id": 637,
      "elapsed": 0.0015735829947516322
    },
    {
      "event": "call",
      "id": 693,
      "thread_id": 0,
      "method_id": "markArraySubdocsPopulated",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: undefined,\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "doc"
        },
        {
          "class": "Array",
          "items": {
            "class": "PopulateOptions"
          },
          "value": "[\n  PopulateOptions {\n    _docs: [Object],\n    path: 'merchant',\n    model: 'Merchant',\n    populate: [Array],\n    _queryProjection: [Object],\n    isVirtual: false,\n    virtual: null,\n    [Symbol(mongoose.PopulateOptions#Model)]: [Function]\n  }\n]",
          "size": 1,
          "object_id": 2033,
          "name": "populated"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 568
    },
    {
      "event": "call",
      "id": 694,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 695,
      "parent_id": 694,
      "return_value": {
        "class": "String",
        "value": "'_id'"
      },
      "elapsed": 6.67001586407423e-7
    },
    {
      "event": "call",
      "id": 696,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 697,
      "parent_id": 696,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 72
      },
      "elapsed": 6.250047590583563e-7
    },
    {
      "event": "call",
      "id": 698,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 699,
      "parent_id": 698,
      "return_value": {
        "class": "String",
        "value": "'_id'"
      },
      "elapsed": 4.580069798976183e-7
    },
    {
      "event": "call",
      "id": 700,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 701,
      "parent_id": 700,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 72
      },
      "elapsed": 0.000002375018084421754
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 702,
      "parent_id": 693,
      "elapsed": 0.0003903330070897937
    },
    {
      "event": "call",
      "id": 703,
      "thread_id": 0,
      "method_id": "$__applyDefaults",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: undefined,\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "doc"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "password",
              "class": "Number"
            }
          ],
          "value": "{ password: 0 }",
          "object_id": 2031,
          "name": "fields"
        },
        {
          "class": "Boolean",
          "value": "true",
          "name": "skipId"
        },
        {
          "class": "Boolean",
          "value": "true",
          "name": "exclude"
        },
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2068,
          "name": "hasIncludedChildren"
        },
        {
          "class": "Boolean",
          "value": "false",
          "name": "isBeforeSetters"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "pathsToSkip"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "isNew",
              "class": "Boolean"
            }
          ],
          "value": "{ isNew: false }",
          "object_id": 2074
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 325
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 704,
      "parent_id": 703,
      "elapsed": 0.0000075830030255019665
    },
    {
      "event": "call",
      "id": 705,
      "thread_id": 0,
      "method_id": "_pathToPositionalSyntax",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 823
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 706,
      "parent_id": 705,
      "return_value": {
        "class": "String",
        "value": "'_id'"
      },
      "elapsed": 4.169996827840805e-7
    },
    {
      "event": "call",
      "id": 707,
      "thread_id": 0,
      "method_id": "_getPath",
      "static": true,
      "parameters": [
        {
          "class": "Schema",
          "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
          "object_id": 4,
          "name": "schema"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "cleanPath"
        }
      ],
      "defined_class": "schema",
      "path": "server/node_modules/mongoose/lib/schema.js",
      "lineno": 805
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 708,
      "parent_id": 707,
      "return_value": {
        "class": "ObjectId",
        "value": "ObjectId {\n  path: '_id',\n  instance: 'ObjectID',\n  validators: [],\n  getters: [],\n  setters: [ [Function: resetId] ],\n  options: SchemaObjectIdOptions { auto: true, type: 'ObjectId' },\n  _index: null,\n  defaultValue: [Function: defaultId] { '$runBeforeSetters': true },\n  [Symbol(mongoose#schemaType)]: true\n}",
        "object_id": 72
      },
      "elapsed": 5.410111043602228e-7
    },
    {
      "event": "call",
      "id": 709,
      "thread_id": 0,
      "method_id": "storeShard",
      "static": false,
      "receiver": {
        "class": "model",
        "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
        "object_id": 2065
      },
      "defined_class": "sharding",
      "path": "server/node_modules/mongoose/lib/plugins/sharding.js",
      "lineno": 57
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 710,
      "parent_id": 709,
      "elapsed": 0.0000016660196706652641
    },
    {
      "event": "call",
      "id": 711,
      "thread_id": 0,
      "method_id": "_init",
      "static": true,
      "parameters": [
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "err"
        },
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: null,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065
        }
      ],
      "defined_class": "query",
      "path": "server/node_modules/mongoose/lib/query.js",
      "lineno": 2859
    },
    {
      "event": "call",
      "id": 712,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2075,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'merchant'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 713,
      "parent_id": 712,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2075
      },
      "elapsed": 0.0000017079873941838741
    },
    {
      "event": "call",
      "id": 714,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2075,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'provider'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 715,
      "parent_id": 714,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2075
      },
      "elapsed": 0.0000011250085663050413
    },
    {
      "event": "call",
      "id": 716,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2075,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'role'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 717,
      "parent_id": 716,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2075
      },
      "elapsed": 6.67001586407423e-7
    },
    {
      "event": "call",
      "id": 718,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2075,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'_id'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 719,
      "parent_id": 718,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2075
      },
      "elapsed": 9.170034900307655e-7
    },
    {
      "event": "call",
      "id": 720,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2075,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'email'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 721,
      "parent_id": 720,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2075
      },
      "elapsed": 7.499766070395708e-7
    },
    {
      "event": "call",
      "id": 722,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2075,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'firstName'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 723,
      "parent_id": 722,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2075
      },
      "elapsed": 6.67001586407423e-7
    },
    {
      "event": "call",
      "id": 724,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2075,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'lastName'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 725,
      "parent_id": 724,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2075
      },
      "elapsed": 5.830079317092896e-7
    },
    {
      "event": "call",
      "id": 726,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2075,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'created'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 727,
      "parent_id": 726,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2075
      },
      "elapsed": 0.0000017500133253633976
    },
    {
      "event": "call",
      "id": 728,
      "thread_id": 0,
      "method_id": "docReducer",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "doc"
        },
        {
          "class": "Array",
          "value": "[]",
          "size": 0,
          "object_id": 2075,
          "name": "seed"
        },
        {
          "class": "String",
          "value": "'__v'",
          "name": "path"
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 2862
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 729,
      "parent_id": 728,
      "return_value": {
        "class": "Array",
        "value": "[]",
        "size": 0,
        "object_id": 2075
      },
      "elapsed": 0.00000100000761449337
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 730,
      "parent_id": 711,
      "elapsed": 0.0006490419909823686
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 731,
      "parent_id": 614,
      "elapsed": 0.004533415980404243
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 732,
      "parent_id": 613,
      "elapsed": 0.004753124987473711
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 733,
      "parent_id": 612,
      "elapsed": 0.004798000009031966
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 734,
      "parent_id": 529,
      "elapsed": 0.008912375022191554
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 735,
      "parent_id": 528,
      "elapsed": 0.009051583998370916
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 736,
      "parent_id": 457,
      "elapsed": 0.012152458017226309
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 737,
      "parent_id": 456,
      "elapsed": 0.012286209006560966
    },
    {
      "event": "call",
      "id": 738,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'constructor'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 739,
      "parent_id": 738,
      "return_value": {
        "class": "Function",
        "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}"
      },
      "elapsed": 0.0000012080126907676458
    },
    {
      "event": "call",
      "id": 740,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Function",
          "value": "<ref *1> [Function: model] {\n  hooks: Kareem { _pres: [Map], _posts: [Map] },\n  base: Mongoose {\n    connections: [Array],\n    models: [Object],\n    modelSchemas: [Object],\n    options: [Object],\n    _pluralize: [Function: pluralize],\n    Schema: [Function],\n    model: [Function (anonymous)],\n    plugins: [Array]\n  },\n  modelName: 'User',\n  model: [Function: model],\n  db: NativeConnection {\n    base: [Mongoose],\n    collections: [Object],\n    models: [Object],\n    config: [Object],\n    replica: false,\n    options: null,\n    otherDbs: [],\n    relatedDbs: {},\n    states: [Object: null prototype],\n    _readyState: 1,\n    _closeCalled: false,\n    _hasOpened: true,\n    plugins: [],\n    id: 0,\n    _listening: false,\n    _connectionOptions: [Object],\n    name: 'mern_ecommerce',\n    host: '127.0.0.1',\n    port: 27017,\n    user: undefined,\n    pass: undefined,\n    client: [MongoClient],\n    '$initialConnection': [Promise],\n    db: [Db]\n  },\n  discriminators: undefined,\n  events: EventEmitter {\n    _events: [Object: null prototype] {},\n    _eventsCount: 0,\n    _maxListeners: undefined,\n    [Symbol(kCapture)]: false\n  },\n  '$appliedMethods': true,\n  '$appliedHooks': true,\n  _middleware: Kareem { _pres: [Map], _posts: [Map] },\n  '$__insertMany': [Function (anonymous)],\n  schema: Schema {\n    obj: [Object],\n    paths: [Object],\n    aliases: {},\n    subpaths: {},\n    virtuals: [Object],\n    singleNestedPaths: {},\n    nested: {},\n    inherits: {},\n    callQueue: [],\n    _indexes: [],\n    methods: {},\n    methodOptions: {},\n    statics: {},\n    tree: [Object],\n    query: {},\n    childSchemas: [],\n    plugins: [Array],\n    '$id': 1,\n    s: [Object],\n    _userProvidedOptions: {},\n    options: [Object],\n    '$globalPluginsApplied': true,\n    _requiredpaths: [Array]\n  },\n  collection: NativeCollection {\n    collection: [Collection],\n    Promise: [Function: Promise],\n    _closed: false,\n    opts: [Object],\n    name: 'users',\n    collectionName: 'users',\n    conn: [NativeConnection],\n    queue: [],\n    buffer: false,\n    emitter: [EventEmitter]\n  },\n  Query: [Function (anonymous)] { base: [Object] },\n  '$init': Promise { [Circular *1] },\n  '$caught': true,\n  [Symbol(mongoose#Model)]: true\n}",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'base'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 741,
      "parent_id": 740,
      "return_value": {
        "class": "Mongoose",
        "value": "Mongoose {\n  connections: [ [NativeConnection] ],\n  models: {\n    User: [Function],\n    Address: [Function],\n    Product: [Function],\n    Brand: [Function],\n    Category: [Function],\n    Merchant: [Function],\n    Contact: [Function],\n    CartItem: [Function],\n    Cart: [Function],\n    Order: [Function],\n    Review: [Function],\n    Wishlist: [Function]\n  },\n  modelSchemas: {\n    User: [Schema],\n    Address: [Schema],\n    Product: [Schema],\n    Brand: [Schema],\n    Category: [Schema],\n    Merchant: [Schema],\n    Contact: [Schema],\n    CartItem: [Schema],\n    Cart: [Schema],\n    Order: [Schema],\n    Review: [Schema],\n    Wishlist: [Schema]\n  },\n  options: {\n    pluralization: true,\n    useCreateIndex: true,\n    [Symbol(mongoose:default)]: true\n  },\n  _pluralize: [Function: pluralize],\n  Schema: [Function: Schema] {\n    reserved: [Object: null prototype],\n    Types: [Object],\n    ObjectId: [Function]\n  },\n  model: [Function (anonymous)],\n  plugins: [\n    [Array], [Array],\n    [Array], [Array],\n    [Array], [Array],\n    [Array]\n  ]\n}",
        "object_id": 1
      },
      "elapsed": 0.0000010409858077764511
    },
    {
      "event": "call",
      "id": 742,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Mongoose",
          "value": "Mongoose {\n  connections: [ [NativeConnection] ],\n  models: {\n    User: [Function],\n    Address: [Function],\n    Product: [Function],\n    Brand: [Function],\n    Category: [Function],\n    Merchant: [Function],\n    Contact: [Function],\n    CartItem: [Function],\n    Cart: [Function],\n    Order: [Function],\n    Review: [Function],\n    Wishlist: [Function]\n  },\n  modelSchemas: {\n    User: [Schema],\n    Address: [Schema],\n    Product: [Schema],\n    Brand: [Schema],\n    Category: [Schema],\n    Merchant: [Schema],\n    Contact: [Schema],\n    CartItem: [Schema],\n    Cart: [Schema],\n    Order: [Schema],\n    Review: [Schema],\n    Wishlist: [Schema]\n  },\n  options: {\n    pluralization: true,\n    useCreateIndex: true,\n    [Symbol(mongoose:default)]: true\n  },\n  _pluralize: [Function: pluralize],\n  Schema: [Function: Schema] {\n    reserved: [Object: null prototype],\n    Types: [Object],\n    ObjectId: [Function]\n  },\n  model: [Function (anonymous)],\n  plugins: [\n    [Array], [Array],\n    [Array], [Array],\n    [Array], [Array],\n    [Array]\n  ]\n}",
          "object_id": 1,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'options'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 743,
      "parent_id": 742,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "pluralization",
            "class": "Boolean"
          },
          {
            "name": "useCreateIndex",
            "class": "Boolean"
          }
        ],
        "value": "{\n  pluralization: true,\n  useCreateIndex: true,\n  [Symbol(mongoose:default)]: true\n}",
        "object_id": 75
      },
      "elapsed": 8.750066626816988e-7
    },
    {
      "event": "call",
      "id": 744,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "pluralization",
              "class": "Boolean"
            },
            {
              "name": "useCreateIndex",
              "class": "Boolean"
            }
          ],
          "value": "{\n  pluralization: true,\n  useCreateIndex: true,\n  [Symbol(mongoose:default)]: true\n}",
          "object_id": 75,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'toJSON'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 745,
      "parent_id": 744,
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "call",
      "id": 746,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'schema'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 747,
      "parent_id": 746,
      "return_value": {
        "class": "Schema",
        "value": "Schema {\n  obj: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object]\n  },\n  paths: {\n    email: [SchemaString],\n    phoneNumber: [SchemaString],\n    firstName: [SchemaString],\n    lastName: [SchemaString],\n    password: [SchemaString],\n    merchant: [ObjectId],\n    provider: [SchemaString],\n    googleId: [SchemaString],\n    facebookId: [SchemaString],\n    avatar: [SchemaString],\n    role: [SchemaString],\n    resetPasswordToken: [SchemaString],\n    resetPasswordExpires: [SchemaDate],\n    updated: [SchemaDate],\n    created: [SchemaDate],\n    _id: [ObjectId],\n    __v: [SchemaNumber]\n  },\n  aliases: {},\n  subpaths: {},\n  virtuals: { id: [VirtualType] },\n  singleNestedPaths: {},\n  nested: {},\n  inherits: {},\n  callQueue: [],\n  _indexes: [],\n  methods: {},\n  methodOptions: {},\n  statics: {},\n  tree: {\n    email: [Object],\n    phoneNumber: [Object],\n    firstName: [Object],\n    lastName: [Object],\n    password: [Object],\n    merchant: [Object],\n    provider: [Object],\n    googleId: [Object],\n    facebookId: [Object],\n    avatar: [Object],\n    role: [Object],\n    resetPasswordToken: [Object],\n    resetPasswordExpires: [Object],\n    updated: [Function: Date],\n    created: [Object],\n    _id: [Object],\n    __v: [Function: Number],\n    id: [VirtualType]\n  },\n  query: {},\n  childSchemas: [],\n  plugins: [ [Object], [Object], [Object], [Object], [Object] ],\n  '$id': 1,\n  s: { hooks: [Kareem] },\n  _userProvidedOptions: {},\n  options: {\n    typePojoToMixed: true,\n    typeKey: 'type',\n    id: true,\n    noVirtualId: false,\n    _id: true,\n    noId: false,\n    validateBeforeSave: true,\n    read: null,\n    shardKey: null,\n    autoIndex: null,\n    minimize: true,\n    discriminatorKey: '__t',\n    versionKey: '__v',\n    capped: false,\n    bufferCommands: true,\n    strict: true,\n    pluralization: true\n  },\n  '$globalPluginsApplied': true,\n  _requiredpaths: [ 'provider', 'email' ]\n}",
        "object_id": 4
      },
      "elapsed": 5.839974619448185e-7
    },
    {
      "event": "call",
      "id": 748,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2076,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 749,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2076,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 750,
      "parent_id": 749,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 2077
      },
      "elapsed": 5.830079317092896e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 751,
      "parent_id": 748,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 2077
      },
      "elapsed": 0.00004416698357090354
    },
    {
      "event": "call",
      "id": 752,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2078,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 753,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [],
          "value": "{}",
          "object_id": 2078,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 754,
      "parent_id": 753,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 2079
      },
      "elapsed": 3.3300602808594704e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 755,
      "parent_id": 752,
      "return_value": {
        "class": "Object",
        "properties": [],
        "value": "{}",
        "object_id": 2079
      },
      "elapsed": 0.00003358299727551639
    },
    {
      "event": "call",
      "id": 756,
      "thread_id": 0,
      "method_id": "clone",
      "static": false,
      "receiver": {
        "class": "Object",
        "properties": [
          {
            "name": "specialProperties",
            "class": "Set"
          },
          {
            "name": "toCollectionName",
            "class": "Function"
          },
          {
            "name": "deepEqual",
            "class": "Function"
          },
          {
            "name": "last",
            "class": "Function"
          },
          {
            "name": "clone",
            "class": "Function"
          },
          {
            "name": "promiseOrCallback",
            "class": "Function"
          },
          {
            "name": "omit",
            "class": "Function"
          },
          {
            "name": "options",
            "class": "Function"
          },
          {
            "name": "random",
            "class": "Function"
          },
          {
            "name": "merge",
            "class": "Function"
          },
          {
            "name": "toObject",
            "class": "Function"
          },
          {
            "name": "isObject",
            "class": "Function"
          },
          {
            "name": "isPOJO",
            "class": "Function"
          },
          {
            "name": "isNativeObject",
            "class": "Function"
          },
          {
            "name": "isEmptyObject",
            "class": "Function"
          },
          {
            "name": "hasKey",
            "class": "Function"
          },
          {
            "name": "args",
            "class": "Function"
          },
          {
            "name": "tick",
            "class": "Function"
          },
          {
            "name": "isMongooseType",
            "class": "Function"
          },
          {
            "name": "isMongooseObject",
            "class": "Function"
          },
          {
            "name": "expires",
            "class": "Function"
          },
          {
            "name": "populate",
            "class": "Function"
          },
          {
            "name": "getValue",
            "class": "Function"
          },
          {
            "name": "setValue",
            "class": "Function"
          },
          {
            "name": "object",
            "class": "Object",
            "properties": [
              {
                "name": "vals",
                "class": "Function"
              },
              {
                "name": "shallowCopy",
                "class": "Function"
              },
              {
                "name": "hasOwnProperty",
                "class": "Function"
              }
            ]
          },
          {
            "name": "isNullOrUndefined",
            "class": "Function"
          },
          {
            "name": "array",
            "class": "Object",
            "properties": [
              {
                "name": "flatten",
                "class": "Function"
              },
              {
                "name": "unique",
                "class": "Function"
              }
            ]
          },
          {
            "name": "hasUserDefinedProperty",
            "class": "Function"
          },
          {
            "name": "isArrayIndex",
            "class": "Function"
          },
          {
            "name": "buffer",
            "class": "Object",
            "properties": [
              {
                "name": "areEqual",
                "class": "Function"
              }
            ]
          },
          {
            "name": "getFunctionName",
            "class": "Function"
          },
          {
            "name": "decorate",
            "class": "Function"
          },
          {
            "name": "mergeClone",
            "class": "Function"
          },
          {
            "name": "each",
            "class": "Function"
          },
          {
            "name": "getOption",
            "class": "Function"
          },
          {
            "name": "noop",
            "class": "Function"
          }
        ],
        "value": "{\n  specialProperties: Set(3) { '__proto__', 'constructor', 'prototype' },\n  toCollectionName: [Function (anonymous)],\n  deepEqual: [Function: deepEqual],\n  last: [Function (anonymous)],\n  clone: [Function: clone],\n  promiseOrCallback: [Function: promiseOrCallback],\n  omit: [Function: omit],\n  options: [Function (anonymous)],\n  random: [Function (anonymous)],\n  merge: [Function: merge],\n  toObject: [Function: toObject],\n  isObject: [Function (anonymous)],\n  isPOJO: [Function: isPOJO],\n  isNativeObject: [Function (anonymous)],\n  isEmptyObject: [Function (anonymous)],\n  hasKey: [Function: hasKey],\n  args: [Function (anonymous)],\n  tick: [Function: tick],\n  isMongooseType: [Function (anonymous)],\n  isMongooseObject: [Function (anonymous)],\n  expires: [Function: expires],\n  populate: [Function: populate],\n  getValue: [Function (anonymous)],\n  setValue: [Function (anonymous)],\n  object: {\n    vals: [Function: vals],\n    shallowCopy: [Function (anonymous)],\n    hasOwnProperty: [Function (anonymous)]\n  },\n  isNullOrUndefined: [Function (anonymous)],\n  array: { flatten: [Function: flatten], unique: [Function (anonymous)] },\n  hasUserDefinedProperty: [Function (anonymous)],\n  isArrayIndex: [Function (anonymous)],\n  buffer: { areEqual: [Function (anonymous)] },\n  getFunctionName: [Function (anonymous)],\n  decorate: [Function (anonymous)],\n  mergeClone: [Function (anonymous)],\n  each: [Function (anonymous)],\n  getOption: [Function (anonymous)],\n  noop: [Function (anonymous)]\n}",
        "object_id": 6
      },
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            }
          ],
          "value": "{ flattenMaps: undefined }",
          "object_id": 2080,
          "name": "obj"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 757,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            }
          ],
          "value": "{ flattenMaps: undefined }",
          "object_id": 2080,
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "call",
      "id": 758,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "undefined",
          "value": "undefined",
          "name": "obj"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 759,
      "parent_id": 758,
      "elapsed": 2.910092007368803e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 760,
      "parent_id": 757,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "flattenMaps",
            "class": "undefined"
          }
        ],
        "value": "{ flattenMaps: undefined }",
        "object_id": 2081
      },
      "elapsed": 0.00002358300844207406
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 761,
      "parent_id": 756,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "flattenMaps",
            "class": "undefined"
          }
        ],
        "value": "{ flattenMaps: undefined }",
        "object_id": 2081
      },
      "elapsed": 0.00006520800525322556
    },
    {
      "event": "call",
      "id": 762,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            }
          ],
          "value": "{ flattenMaps: undefined }",
          "object_id": 2080,
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_parentOptions'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 763,
      "parent_id": 762,
      "elapsed": 7.500057108700275e-7
    },
    {
      "event": "call",
      "id": 764,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            },
            {
              "name": "_id",
              "class": "ObjectID"
            },
            {
              "name": "email",
              "class": "String"
            },
            {
              "name": "firstName",
              "class": "String"
            },
            {
              "name": "lastName",
              "class": "String"
            },
            {
              "name": "created",
              "class": "Date"
            },
            {
              "name": "__v",
              "class": "Number"
            }
          ],
          "value": "{\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  _id: ObjectID { _bsontype: 'ObjectID', id: [Buffer [Uint8Array]] },\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
          "object_id": 2072,
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            },
            {
              "name": "_isNested",
              "class": "Boolean"
            },
            {
              "name": "json",
              "class": "Boolean"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "_parentOptions",
              "class": "Object",
              "properties": [
                {
                  "name": "flattenMaps",
                  "class": "undefined"
                },
                {
                  "name": "flattenDecimals",
                  "class": "Boolean"
                },
                {
                  "name": "transform",
                  "class": "Boolean"
                },
                {
                  "name": "_isNested",
                  "class": "Boolean"
                },
                {
                  "name": "json",
                  "class": "Boolean"
                },
                {
                  "name": "minimize",
                  "class": "Boolean"
                }
              ]
            },
            {
              "name": "_skipSingleNestedGetters",
              "class": "Boolean"
            }
          ],
          "value": "{\n  flattenMaps: undefined,\n  _isNested: true,\n  json: true,\n  minimize: true,\n  _parentOptions: {\n    flattenMaps: undefined,\n    flattenDecimals: true,\n    transform: true,\n    _isNested: true,\n    json: true,\n    minimize: true\n  },\n  _skipSingleNestedGetters: true\n}",
          "object_id": 2081,
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 765,
      "thread_id": 0,
      "method_id": "cloneObject",
      "static": true,
      "parameters": [
        {
          "class": "Object",
          "properties": [
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            },
            {
              "name": "_id",
              "class": "ObjectID"
            },
            {
              "name": "email",
              "class": "String"
            },
            {
              "name": "firstName",
              "class": "String"
            },
            {
              "name": "lastName",
              "class": "String"
            },
            {
              "name": "created",
              "class": "Date"
            },
            {
              "name": "__v",
              "class": "Number"
            }
          ],
          "value": "{\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  _id: ObjectID { _bsontype: 'ObjectID', id: [Buffer [Uint8Array]] },\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
          "object_id": 2072,
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            },
            {
              "name": "_isNested",
              "class": "Boolean"
            },
            {
              "name": "json",
              "class": "Boolean"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "_parentOptions",
              "class": "Object",
              "properties": [
                {
                  "name": "flattenMaps",
                  "class": "undefined"
                },
                {
                  "name": "flattenDecimals",
                  "class": "Boolean"
                },
                {
                  "name": "transform",
                  "class": "Boolean"
                },
                {
                  "name": "_isNested",
                  "class": "Boolean"
                },
                {
                  "name": "json",
                  "class": "Boolean"
                },
                {
                  "name": "minimize",
                  "class": "Boolean"
                }
              ]
            },
            {
              "name": "_skipSingleNestedGetters",
              "class": "Boolean"
            }
          ],
          "value": "{\n  flattenMaps: undefined,\n  _isNested: true,\n  json: true,\n  minimize: true,\n  _parentOptions: {\n    flattenMaps: undefined,\n    flattenDecimals: true,\n    transform: true,\n    _isNested: true,\n    json: true,\n    minimize: true\n  },\n  _skipSingleNestedGetters: true\n}",
          "object_id": 2081,
          "name": "options"
        },
        {
          "class": "undefined",
          "value": "undefined",
          "name": "isArrayChild"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 103
    },
    {
      "event": "call",
      "id": 766,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "object",
          "value": "null",
          "object_id": 0,
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            },
            {
              "name": "_isNested",
              "class": "Boolean"
            },
            {
              "name": "json",
              "class": "Boolean"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "_parentOptions",
              "class": "Object",
              "properties": [
                {
                  "name": "flattenMaps",
                  "class": "undefined"
                },
                {
                  "name": "flattenDecimals",
                  "class": "Boolean"
                },
                {
                  "name": "transform",
                  "class": "Boolean"
                },
                {
                  "name": "_isNested",
                  "class": "Boolean"
                },
                {
                  "name": "json",
                  "class": "Boolean"
                },
                {
                  "name": "minimize",
                  "class": "Boolean"
                }
              ]
            },
            {
              "name": "_skipSingleNestedGetters",
              "class": "Boolean"
            }
          ],
          "value": "{\n  flattenMaps: undefined,\n  _isNested: true,\n  json: true,\n  minimize: true,\n  _parentOptions: {\n    flattenMaps: undefined,\n    flattenDecimals: true,\n    transform: true,\n    _isNested: true,\n    json: true,\n    minimize: true\n  },\n  _skipSingleNestedGetters: true\n}",
          "object_id": 2081,
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 767,
      "parent_id": 766,
      "return_value": {
        "class": "object",
        "value": "null",
        "object_id": 0
      },
      "elapsed": 2.0800507627427578e-7
    },
    {
      "event": "call",
      "id": 768,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'Email'",
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            },
            {
              "name": "_isNested",
              "class": "Boolean"
            },
            {
              "name": "json",
              "class": "Boolean"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "_parentOptions",
              "class": "Object",
              "properties": [
                {
                  "name": "flattenMaps",
                  "class": "undefined"
                },
                {
                  "name": "flattenDecimals",
                  "class": "Boolean"
                },
                {
                  "name": "transform",
                  "class": "Boolean"
                },
                {
                  "name": "_isNested",
                  "class": "Boolean"
                },
                {
                  "name": "json",
                  "class": "Boolean"
                },
                {
                  "name": "minimize",
                  "class": "Boolean"
                }
              ]
            },
            {
              "name": "_skipSingleNestedGetters",
              "class": "Boolean"
            }
          ],
          "value": "{\n  flattenMaps: undefined,\n  _isNested: true,\n  json: true,\n  minimize: true,\n  _parentOptions: {\n    flattenMaps: undefined,\n    flattenDecimals: true,\n    transform: true,\n    _isNested: true,\n    json: true,\n    minimize: true\n  },\n  _skipSingleNestedGetters: true\n}",
          "object_id": 2081,
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 769,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'Email'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 770,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'Email'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 771,
      "parent_id": 770,
      "elapsed": 5.410111043602228e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 772,
      "parent_id": 769,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.000022499996703118086
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 773,
      "parent_id": 768,
      "return_value": {
        "class": "String",
        "value": "'Email'"
      },
      "elapsed": 0.00005175001570023596
    },
    {
      "event": "call",
      "id": 774,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'ROLE ADMIN'",
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            },
            {
              "name": "_isNested",
              "class": "Boolean"
            },
            {
              "name": "json",
              "class": "Boolean"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "_parentOptions",
              "class": "Object",
              "properties": [
                {
                  "name": "flattenMaps",
                  "class": "undefined"
                },
                {
                  "name": "flattenDecimals",
                  "class": "Boolean"
                },
                {
                  "name": "transform",
                  "class": "Boolean"
                },
                {
                  "name": "_isNested",
                  "class": "Boolean"
                },
                {
                  "name": "json",
                  "class": "Boolean"
                },
                {
                  "name": "minimize",
                  "class": "Boolean"
                }
              ]
            },
            {
              "name": "_skipSingleNestedGetters",
              "class": "Boolean"
            }
          ],
          "value": "{\n  flattenMaps: undefined,\n  _isNested: true,\n  json: true,\n  minimize: true,\n  _parentOptions: {\n    flattenMaps: undefined,\n    flattenDecimals: true,\n    transform: true,\n    _isNested: true,\n    json: true,\n    minimize: true\n  },\n  _skipSingleNestedGetters: true\n}",
          "object_id": 2081,
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 775,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'ROLE ADMIN'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 776,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'ROLE ADMIN'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 777,
      "parent_id": 776,
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 778,
      "parent_id": 775,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.000021791987819597125
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 779,
      "parent_id": 774,
      "return_value": {
        "class": "String",
        "value": "'ROLE ADMIN'"
      },
      "elapsed": 0.00004754099063575268
    },
    {
      "event": "call",
      "id": 780,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "ObjectID",
          "value": "ObjectID {\n  _bsontype: 'ObjectID',\n  id: Buffer(12) [Uint8Array] [\n    102, 150, 152, 210,  66,\n     76, 109,   0,  20, 204,\n     85, 157\n  ]\n}",
          "object_id": 2082,
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            },
            {
              "name": "_isNested",
              "class": "Boolean"
            },
            {
              "name": "json",
              "class": "Boolean"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "_parentOptions",
              "class": "Object",
              "properties": [
                {
                  "name": "flattenMaps",
                  "class": "undefined"
                },
                {
                  "name": "flattenDecimals",
                  "class": "Boolean"
                },
                {
                  "name": "transform",
                  "class": "Boolean"
                },
                {
                  "name": "_isNested",
                  "class": "Boolean"
                },
                {
                  "name": "json",
                  "class": "Boolean"
                },
                {
                  "name": "minimize",
                  "class": "Boolean"
                }
              ]
            },
            {
              "name": "_skipSingleNestedGetters",
              "class": "Boolean"
            }
          ],
          "value": "{\n  flattenMaps: undefined,\n  _isNested: true,\n  json: true,\n  minimize: true,\n  _parentOptions: {\n    flattenMaps: undefined,\n    flattenDecimals: true,\n    transform: true,\n    _isNested: true,\n    json: true,\n    minimize: true\n  },\n  _skipSingleNestedGetters: true\n}",
          "object_id": 2081,
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 781,
      "parent_id": 780,
      "return_value": {
        "class": "ObjectID",
        "value": "ObjectID {\n  _bsontype: 'ObjectID',\n  id: Buffer(12) [Uint8Array] [\n    102, 150, 152, 210,  66,\n     76, 109,   0,  20, 204,\n     85, 157\n  ]\n}",
        "object_id": 2083
      },
      "elapsed": 0.000003916997229680419
    },
    {
      "event": "call",
      "id": 782,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'admin@example.com'",
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            },
            {
              "name": "_isNested",
              "class": "Boolean"
            },
            {
              "name": "json",
              "class": "Boolean"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "_parentOptions",
              "class": "Object",
              "properties": [
                {
                  "name": "flattenMaps",
                  "class": "undefined"
                },
                {
                  "name": "flattenDecimals",
                  "class": "Boolean"
                },
                {
                  "name": "transform",
                  "class": "Boolean"
                },
                {
                  "name": "_isNested",
                  "class": "Boolean"
                },
                {
                  "name": "json",
                  "class": "Boolean"
                },
                {
                  "name": "minimize",
                  "class": "Boolean"
                }
              ]
            },
            {
              "name": "_skipSingleNestedGetters",
              "class": "Boolean"
            }
          ],
          "value": "{\n  flattenMaps: undefined,\n  _isNested: true,\n  json: true,\n  minimize: true,\n  _parentOptions: {\n    flattenMaps: undefined,\n    flattenDecimals: true,\n    transform: true,\n    _isNested: true,\n    json: true,\n    minimize: true\n  },\n  _skipSingleNestedGetters: true\n}",
          "object_id": 2081,
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 783,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'admin@example.com'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 784,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'admin@example.com'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 785,
      "parent_id": 784,
      "elapsed": 4.999747034162283e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 786,
      "parent_id": 783,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.000021207990357652307
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 787,
      "parent_id": 782,
      "return_value": {
        "class": "String",
        "value": "'admin@example.com'"
      },
      "elapsed": 0.00004891600110568106
    },
    {
      "event": "call",
      "id": 788,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'admin'",
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            },
            {
              "name": "_isNested",
              "class": "Boolean"
            },
            {
              "name": "json",
              "class": "Boolean"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "_parentOptions",
              "class": "Object",
              "properties": [
                {
                  "name": "flattenMaps",
                  "class": "undefined"
                },
                {
                  "name": "flattenDecimals",
                  "class": "Boolean"
                },
                {
                  "name": "transform",
                  "class": "Boolean"
                },
                {
                  "name": "_isNested",
                  "class": "Boolean"
                },
                {
                  "name": "json",
                  "class": "Boolean"
                },
                {
                  "name": "minimize",
                  "class": "Boolean"
                }
              ]
            },
            {
              "name": "_skipSingleNestedGetters",
              "class": "Boolean"
            }
          ],
          "value": "{\n  flattenMaps: undefined,\n  _isNested: true,\n  json: true,\n  minimize: true,\n  _parentOptions: {\n    flattenMaps: undefined,\n    flattenDecimals: true,\n    transform: true,\n    _isNested: true,\n    json: true,\n    minimize: true\n  },\n  _skipSingleNestedGetters: true\n}",
          "object_id": 2081,
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 789,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'admin'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 790,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'admin'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 791,
      "parent_id": 790,
      "elapsed": 4.5902561396360397e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 792,
      "parent_id": 789,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.00002141698496416211
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 793,
      "parent_id": 788,
      "return_value": {
        "class": "String",
        "value": "'admin'"
      },
      "elapsed": 0.00005179201252758503
    },
    {
      "event": "call",
      "id": 794,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'admin'",
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            },
            {
              "name": "_isNested",
              "class": "Boolean"
            },
            {
              "name": "json",
              "class": "Boolean"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "_parentOptions",
              "class": "Object",
              "properties": [
                {
                  "name": "flattenMaps",
                  "class": "undefined"
                },
                {
                  "name": "flattenDecimals",
                  "class": "Boolean"
                },
                {
                  "name": "transform",
                  "class": "Boolean"
                },
                {
                  "name": "_isNested",
                  "class": "Boolean"
                },
                {
                  "name": "json",
                  "class": "Boolean"
                },
                {
                  "name": "minimize",
                  "class": "Boolean"
                }
              ]
            },
            {
              "name": "_skipSingleNestedGetters",
              "class": "Boolean"
            }
          ],
          "value": "{\n  flattenMaps: undefined,\n  _isNested: true,\n  json: true,\n  minimize: true,\n  _parentOptions: {\n    flattenMaps: undefined,\n    flattenDecimals: true,\n    transform: true,\n    _isNested: true,\n    json: true,\n    minimize: true\n  },\n  _skipSingleNestedGetters: true\n}",
          "object_id": 2081,
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 795,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'admin'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 796,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "String",
          "value": "'admin'",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 797,
      "parent_id": 796,
      "elapsed": 5.00003807246685e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 798,
      "parent_id": 795,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.000021167012164369226
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 799,
      "parent_id": 794,
      "return_value": {
        "class": "String",
        "value": "'admin'"
      },
      "elapsed": 0.00004612500197254121
    },
    {
      "event": "call",
      "id": 800,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Date",
          "value": "2024-07-16T15:59:14.612Z",
          "object_id": 2084,
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            },
            {
              "name": "_isNested",
              "class": "Boolean"
            },
            {
              "name": "json",
              "class": "Boolean"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "_parentOptions",
              "class": "Object",
              "properties": [
                {
                  "name": "flattenMaps",
                  "class": "undefined"
                },
                {
                  "name": "flattenDecimals",
                  "class": "Boolean"
                },
                {
                  "name": "transform",
                  "class": "Boolean"
                },
                {
                  "name": "_isNested",
                  "class": "Boolean"
                },
                {
                  "name": "json",
                  "class": "Boolean"
                },
                {
                  "name": "minimize",
                  "class": "Boolean"
                }
              ]
            },
            {
              "name": "_skipSingleNestedGetters",
              "class": "Boolean"
            }
          ],
          "value": "{\n  flattenMaps: undefined,\n  _isNested: true,\n  json: true,\n  minimize: true,\n  _parentOptions: {\n    flattenMaps: undefined,\n    flattenDecimals: true,\n    transform: true,\n    _isNested: true,\n    json: true,\n    minimize: true\n  },\n  _skipSingleNestedGetters: true\n}",
          "object_id": 2081,
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 801,
      "parent_id": 800,
      "return_value": {
        "class": "Date",
        "value": "2024-07-16T15:59:14.612Z",
        "object_id": 2085
      },
      "elapsed": 0.00000404199818149209
    },
    {
      "event": "call",
      "id": 802,
      "thread_id": 0,
      "method_id": "clone",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "obj"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            },
            {
              "name": "_isNested",
              "class": "Boolean"
            },
            {
              "name": "json",
              "class": "Boolean"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "_parentOptions",
              "class": "Object",
              "properties": [
                {
                  "name": "flattenMaps",
                  "class": "undefined"
                },
                {
                  "name": "flattenDecimals",
                  "class": "Boolean"
                },
                {
                  "name": "transform",
                  "class": "Boolean"
                },
                {
                  "name": "_isNested",
                  "class": "Boolean"
                },
                {
                  "name": "json",
                  "class": "Boolean"
                },
                {
                  "name": "minimize",
                  "class": "Boolean"
                }
              ]
            },
            {
              "name": "_skipSingleNestedGetters",
              "class": "Boolean"
            }
          ],
          "value": "{\n  flattenMaps: undefined,\n  _isNested: true,\n  json: true,\n  minimize: true,\n  _parentOptions: {\n    flattenMaps: undefined,\n    flattenDecimals: true,\n    transform: true,\n    _isNested: true,\n    json: true,\n    minimize: true\n  },\n  _skipSingleNestedGetters: true\n}",
          "object_id": 2081,
          "name": "options"
        }
      ],
      "defined_class": "clone",
      "path": "server/node_modules/mongoose/lib/helpers/clone.js",
      "lineno": 29
    },
    {
      "event": "call",
      "id": 803,
      "thread_id": 0,
      "method_id": "isBsonType",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'Decimal128'",
          "name": "typename"
        }
      ],
      "defined_class": "isBsonType",
      "path": "server/node_modules/mongoose/lib/helpers/isBsonType.js",
      "lineno": 9
    },
    {
      "event": "call",
      "id": 804,
      "thread_id": 0,
      "method_id": "getProperty",
      "static": true,
      "parameters": [
        {
          "class": "Number",
          "value": "0",
          "name": "obj"
        },
        {
          "class": "String",
          "value": "'_bsontype'",
          "name": "prop"
        }
      ],
      "defined_class": "get",
      "path": "server/node_modules/mongoose/lib/helpers/get.js",
      "lineno": 31
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 805,
      "parent_id": 804,
      "elapsed": 5.420006345957518e-7
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 806,
      "parent_id": 803,
      "return_value": {
        "class": "Boolean",
        "value": "false"
      },
      "elapsed": 0.00002141698496416211
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 807,
      "parent_id": 802,
      "return_value": {
        "class": "Number",
        "value": "0"
      },
      "elapsed": 0.00004870901466347277
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 808,
      "parent_id": 765,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "merchant",
            "class": "object"
          },
          {
            "name": "provider",
            "class": "String"
          },
          {
            "name": "role",
            "class": "String"
          },
          {
            "name": "_id",
            "class": "ObjectID"
          },
          {
            "name": "email",
            "class": "String"
          },
          {
            "name": "firstName",
            "class": "String"
          },
          {
            "name": "lastName",
            "class": "String"
          },
          {
            "name": "created",
            "class": "Date"
          },
          {
            "name": "__v",
            "class": "Number"
          }
        ],
        "value": "{\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  _id: ObjectID { _bsontype: 'ObjectID', id: [Buffer [Uint8Array]] },\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
        "object_id": 2086
      },
      "elapsed": 0.0006731250032316893
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 809,
      "parent_id": 764,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "merchant",
            "class": "object"
          },
          {
            "name": "provider",
            "class": "String"
          },
          {
            "name": "role",
            "class": "String"
          },
          {
            "name": "_id",
            "class": "ObjectID"
          },
          {
            "name": "email",
            "class": "String"
          },
          {
            "name": "firstName",
            "class": "String"
          },
          {
            "name": "lastName",
            "class": "String"
          },
          {
            "name": "created",
            "class": "Date"
          },
          {
            "name": "__v",
            "class": "Number"
          }
        ],
        "value": "{\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  _id: ObjectID { _bsontype: 'ObjectID', id: [Buffer [Uint8Array]] },\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
        "object_id": 2086
      },
      "elapsed": 0.0007472079887520522
    },
    {
      "event": "call",
      "id": 810,
      "thread_id": 0,
      "method_id": "applySchemaTypeTransforms",
      "static": true,
      "parameters": [
        {
          "class": "model",
          "value": "model {\n  '$__': InternalCache {\n    strictMode: true,\n    selected: [Object],\n    shardval: undefined,\n    saveError: undefined,\n    validationError: undefined,\n    adhocPaths: undefined,\n    removing: undefined,\n    inserting: undefined,\n    saving: undefined,\n    version: undefined,\n    getters: {},\n    _id: [ObjectID],\n    populate: undefined,\n    populated: undefined,\n    wasPopulated: false,\n    scope: undefined,\n    activePaths: [StateMachine],\n    pathsToScopes: {},\n    cachedRequired: {},\n    session: undefined,\n    '$setCalled': Set(0) {},\n    ownerDocument: undefined,\n    fullPath: undefined,\n    emitter: [EventEmitter],\n    '$options': [Object]\n  },\n  isNew: false,\n  errors: undefined,\n  _doc: {\n    merchant: null,\n    provider: 'Email',\n    role: 'ROLE ADMIN',\n    _id: [ObjectID],\n    email: 'admin@example.com',\n    firstName: 'admin',\n    lastName: 'admin',\n    created: 2024-07-16T15:59:14.612Z,\n    __v: 0\n  },\n  '$locals': {},\n  '$op': null,\n  '$init': true\n}",
          "object_id": 2065,
          "name": "self"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "merchant",
              "class": "object"
            },
            {
              "name": "provider",
              "class": "String"
            },
            {
              "name": "role",
              "class": "String"
            },
            {
              "name": "_id",
              "class": "ObjectID"
            },
            {
              "name": "email",
              "class": "String"
            },
            {
              "name": "firstName",
              "class": "String"
            },
            {
              "name": "lastName",
              "class": "String"
            },
            {
              "name": "created",
              "class": "Date"
            },
            {
              "name": "__v",
              "class": "Number"
            }
          ],
          "value": "{\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  _id: ObjectID { _bsontype: 'ObjectID', id: [Buffer [Uint8Array]] },\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
          "object_id": 2086,
          "name": "json"
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            },
            {
              "name": "_isNested",
              "class": "Boolean"
            },
            {
              "name": "json",
              "class": "Boolean"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            },
            {
              "name": "_parentOptions",
              "class": "Object",
              "properties": [
                {
                  "name": "flattenMaps",
                  "class": "undefined"
                },
                {
                  "name": "flattenDecimals",
                  "class": "Boolean"
                },
                {
                  "name": "transform",
                  "class": "Boolean"
                },
                {
                  "name": "_isNested",
                  "class": "Boolean"
                },
                {
                  "name": "json",
                  "class": "Boolean"
                },
                {
                  "name": "minimize",
                  "class": "Boolean"
                }
              ]
            },
            {
              "name": "_skipSingleNestedGetters",
              "class": "Boolean"
            }
          ],
          "value": "{\n  flattenMaps: undefined,\n  _isNested: true,\n  json: true,\n  minimize: true,\n  _parentOptions: {\n    flattenMaps: undefined,\n    flattenDecimals: true,\n    transform: true,\n    _isNested: true,\n    json: true,\n    minimize: true\n  },\n  _skipSingleNestedGetters: false\n}",
          "object_id": 2087
        },
        {
          "class": "Object",
          "properties": [
            {
              "name": "flattenMaps",
              "class": "undefined"
            },
            {
              "name": "flattenDecimals",
              "class": "Boolean"
            },
            {
              "name": "transform",
              "class": "Boolean"
            },
            {
              "name": "_isNested",
              "class": "Boolean"
            },
            {
              "name": "json",
              "class": "Boolean"
            },
            {
              "name": "minimize",
              "class": "Boolean"
            }
          ],
          "value": "{\n  flattenMaps: undefined,\n  flattenDecimals: true,\n  transform: true,\n  _isNested: true,\n  json: true,\n  minimize: true\n}",
          "object_id": 2080
        }
      ],
      "defined_class": "document",
      "path": "server/node_modules/mongoose/lib/document.js",
      "lineno": 3373
    },
    {
      "event": "return",
      "thread_id": 0,
      "id": 811,
      "parent_id": 810,
      "return_value": {
        "class": "Object",
        "properties": [
          {
            "name": "merchant",
            "class": "object"
          },
          {
            "name": "provider",
            "class": "String"
          },
          {
            "name": "role",
            "class": "String"
          },
          {
            "name": "_id",
            "class": "ObjectID"
          },
          {
            "name": "email",
            "class": "String"
          },
          {
            "name": "firstName",
            "class": "String"
          },
          {
            "name": "lastName",
            "class": "String"
          },
          {
            "name": "created",
            "class": "Date"
          },
          {
            "name": "__v",
            "class": "Number"
          }
        ],
        "value": "{\n  merchant: null,\n  provider: 'Email',\n  role: 'ROLE ADMIN',\n  _id: ObjectID { _bsontype: 'ObjectID', id: [Buffer [Uint8Array]] },\n  email: 'admin@example.com',\n  firstName: 'admin',\n  lastName: 'admin',\n  created: 2024-07-16T15:59:14.612Z,\n  __v: 0\n}",
        "object_id": 2086
      },
      "elapsed": 0.00001695798709988594
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 304,
        "headers": {
          "X-Dns-Prefetch-Control": "off",
          "Expect-Ct": "max-age=0",
          "X-Frame-Options": "SAMEORIGIN",
          "Strict-Transport-Security": "max-age=15552000; includeSubDomains",
          "X-Download-Options": "noopen",
          "X-Content-Type-Options": "nosniff",
          "X-Permitted-Cross-Domain-Policies": "none",
          "Referrer-Policy": "no-referrer",
          "X-Xss-Protection": "0",
          "Access-Control-Allow-Origin": "*",
          "Etag": "W/\"d2-l3RnRwSIyHK39+6WVPsUH5PIUVg\""
        }
      },
      "id": 812,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.04477999999653548
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.0",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v18.19.0"
    },
    "app": "mern-ecommerce",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /api/user/me (304) — 2024-07-16T16:40:40.848Z"
  },
  "classMap": [
    {
      "name": "mongodb",
      "type": "package",
      "children": [
        {
          "type": "class",
          "name": "users",
          "children": [
            {
              "type": "function",
              "name": "findOne",
              "static": false,
              "location": "mongodb/users:6"
            },
            {
              "type": "function",
              "name": "find",
              "static": false,
              "location": "mongodb/users:7"
            }
          ]
        }
      ]
    },
    {
      "name": "server",
      "type": "package",
      "children": [
        {
          "name": "node_modules",
          "type": "package",
          "children": [
            {
              "name": "mongoose",
              "type": "package",
              "children": [
                {
                  "name": "lib",
                  "type": "package",
                  "children": [
                    {
                      "name": "error",
                      "type": "package",
                      "children": [
                        {
                          "type": "class",
                          "name": "CastError",
                          "children": [
                            {
                              "type": "function",
                              "name": "constructor",
                              "static": false,
                              "location": "server/node_modules/mongoose/lib/error/cast.js:21"
                            }
                          ]
                        },
                        {
                          "type": "class",
                          "name": "cast",
                          "children": [
                            {
                              "type": "function",
                              "name": "formatMessage",
                              "static": true,
                              "location": "server/node_modules/mongoose/lib/error/cast.js:94"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "helpers",
                      "type": "package",
                      "children": [
                        {
                          "name": "populate",
                          "type": "package",
                          "children": [
                            {
                              "type": "class",
                              "name": "getModelsMapForPopulate",
                              "children": [
                                {
                                  "type": "function",
                                  "name": "_getModelNames",
                                  "static": true,
                                  "location": "server/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:330"
                                },
                                {
                                  "type": "function",
                                  "name": "convertTo_id",
                                  "static": true,
                                  "location": "server/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:464"
                                }
                              ]
                            },
                            {
                              "type": "class",
                              "name": "getSchemaTypes",
                              "children": [
                                {
                                  "type": "function",
                                  "name": "search",
                                  "static": true,
                                  "location": "server/node_modules/mongoose/lib/helpers/populate/getSchemaTypes.js:28"
                                }
                              ]
                            },
                            {
                              "type": "class",
                              "name": "getVirtual",
                              "children": [
                                {
                                  "type": "function",
                                  "name": "getVirtual",
                                  "static": true,
                                  "location": "server/node_modules/mongoose/lib/helpers/populate/getVirtual.js:9"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "class",
                          "name": "clone",
                          "children": [
                            {
                              "type": "function",
                              "name": "cloneObject",
                              "static": true,
                              "location": "server/node_modules/mongoose/lib/helpers/clone.js:103"
                            },
                            {
                              "type": "function",
                              "name": "cloneArray",
                              "static": true,
                              "location": "server/node_modules/mongoose/lib/helpers/clone.js:129"
                            },
                            {
                              "type": "function",
                              "name": "clone",
                              "static": true,
                              "location": "server/node_modules/mongoose/lib/helpers/clone.js:29"
                            }
                          ]
                        },
                        {
                          "type": "class",
                          "name": "get",
                          "children": [
                            {
                              "type": "function",
                              "name": "getProperty",
                              "static": true,
                              "location": "server/node_modules/mongoose/lib/helpers/get.js:31"
                            }
                          ]
                        },
                        {
                          "type": "class",
                          "name": "isBsonType",
                          "children": [
                            {
                              "type": "function",
                              "name": "isBsonType",
                              "static": true,
                              "location": "server/node_modules/mongoose/lib/helpers/isBsonType.js:9"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "options",
                      "type": "package",
                      "children": [
                        {
                          "type": "class",
                          "name": "PopulateOptions",
                          "children": [
                            {
                              "type": "function",
                              "name": "constructor",
                              "static": false,
                              "location": "server/node_modules/mongoose/lib/options/PopulateOptions.js:6"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "plugins",
                      "type": "package",
                      "children": [
                        {
                          "type": "class",
                          "name": "sharding",
                          "children": [
                            {
                              "type": "function",
                              "name": "storeShard",
                              "static": true,
                              "location": "server/node_modules/mongoose/lib/plugins/sharding.js:57"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "schema",
                      "type": "package",
                      "children": [
                        {
                          "type": "class",
                          "name": "objectid",
                          "children": [
                            {
                              "type": "function",
                              "name": "resetId",
                              "static": true,
                              "location": "server/node_modules/mongoose/lib/schema/objectid.js:299"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "class",
                      "name": "document",
                      "children": [
                        {
                          "type": "function",
                          "name": "docReducer",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/document.js:2862"
                        },
                        {
                          "type": "function",
                          "name": "applyQueue",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/document.js:2914"
                        },
                        {
                          "type": "function",
                          "name": "$__applyDefaults",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/document.js:325"
                        },
                        {
                          "type": "function",
                          "name": "applySchemaTypeTransforms",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/document.js:3373"
                        },
                        {
                          "type": "function",
                          "name": "markArraySubdocsPopulated",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/document.js:568"
                        },
                        {
                          "type": "function",
                          "name": "init",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/document.js:607"
                        },
                        {
                          "type": "function",
                          "name": "_init",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/document.js:621"
                        },
                        {
                          "type": "function",
                          "name": "Document",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/document.js:65"
                        }
                      ]
                    },
                    {
                      "type": "class",
                      "name": "internal",
                      "children": [
                        {
                          "type": "function",
                          "name": "InternalCache",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/internal.js:12"
                        }
                      ]
                    },
                    {
                      "type": "class",
                      "name": "model",
                      "children": [
                        {
                          "type": "function",
                          "name": "Model",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/model.js:100"
                        },
                        {
                          "type": "function",
                          "name": "_checkContext",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/model.js:1158"
                        },
                        {
                          "type": "function",
                          "name": "_populate",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/model.js:4293"
                        },
                        {
                          "type": "function",
                          "name": "next",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/model.js:4305"
                        },
                        {
                          "type": "function",
                          "name": "populate",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/model.js:4322"
                        },
                        {
                          "type": "function",
                          "name": "flatten",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/model.js:4343"
                        },
                        {
                          "type": "function",
                          "name": "_formatMatch",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/model.js:4649"
                        }
                      ]
                    },
                    {
                      "type": "class",
                      "name": "query",
                      "children": [
                        {
                          "type": "function",
                          "name": "completeOne",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/query.js:2842"
                        },
                        {
                          "type": "function",
                          "name": "_init",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/query.js:2859"
                        },
                        {
                          "type": "function",
                          "name": "prepareDiscriminatorCriteria",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/query.js:2883"
                        },
                        {
                          "type": "function",
                          "name": "_wrapThunkCallback",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/query.js:4404"
                        },
                        {
                          "type": "function",
                          "name": "Query",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/query.js:59"
                        }
                      ]
                    },
                    {
                      "type": "class",
                      "name": "queryhelpers",
                      "children": [
                        {
                          "type": "function",
                          "name": "analyzeSchema",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/queryhelpers.js:189"
                        },
                        {
                          "type": "function",
                          "name": "analyzePath",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/queryhelpers.js:224"
                        }
                      ]
                    },
                    {
                      "type": "class",
                      "name": "schema",
                      "children": [
                        {
                          "type": "function",
                          "name": "search",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/schema.js:2097"
                        },
                        {
                          "type": "function",
                          "name": "_getPath",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/schema.js:805"
                        },
                        {
                          "type": "function",
                          "name": "_pathToPositionalSyntax",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/schema.js:823"
                        },
                        {
                          "type": "function",
                          "name": "getMapPath",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/schema.js:834"
                        }
                      ]
                    },
                    {
                      "type": "class",
                      "name": "utils",
                      "children": [
                        {
                          "type": "function",
                          "name": "makeSingles",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/utils.js:515"
                        },
                        {
                          "type": "function",
                          "name": "_populateObj",
                          "static": true,
                          "location": "server/node_modules/mongoose/lib/utils.js:534"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /me"
        }
      ]
    }
  ]
}